 Initialized kpar          95  with            1 processes.
If your calculation crashes here, before "Checking processes and threads..."
is displayed, then your stack size is insufficient.
If so, use "ulimit -s unlimited" at runtime.
You can disable this check with "check_stack_size F".

Checking processes and threads...
      Default threads: 1
   Running with 1 MPI process.
   There are 96 MPI processes running on the same node as the root process.
   Each MPI process is using: 
               1 threads for simulation cell FFTs.
               1 threads for threaded FFT box operations.
               1 threads for loops over batched FFT box operations.
               1 threads in other parallel regions.
   MPI Interface: S2 (use mpi) (-DMPI, no -DUSE_MPI_F08, no -DUSE_INCLUDE_MPIF).
   MPI_ASYNC_PROTECTS_NONBLOCKING:  No. MPI_SUBARRAYS_SUPPORTED:  No.
   FFTW Interface: OMP-capable and DEPRECATED. (Use -DUSE_MODERN_FFTW to switch to modern).
   GPU Interface: None.
   GPU FFT Backend: None.
... done

Basic input checks...... done

Reading geometry and species blocks from file "P.dat" ...
  <species_atomic_set> block not found: NGWF initialisation set to SOLVE
... done


--------------------------------------------------------------------------------
---------------------------------- INPUT FILE ----------------------------------
--------------------------------------------------------------------------------

cutoff_energy : 1280 eV                                                         
do_properties : F                                                               
edft : F                                                                        
extend_ngwf : T T T                                                             
forces_output_detail : verbose                                                  
full_rand_ngwf : T                                                              
kpoint_grid_shift : 1 1 0                                                       
kpoint_grid_size : 26 8 19                                                      
kpoint_method : KP                                                              
maxit_ngwf_cg : 1000                                                            
output_detail : Normal                                                          
paw : F                                                                         
permit_unusual_ngwf_count : T                                                   
pseudo_path : .                                                                 
rand_seed_ngwf_dynamic : F                                                      
spin : 0                                                                        
spin_polarized : F                                                              
task : SinglePoint                                                              
use_cmplx_ngwfs : T                                                             
write_forces : F                                                                
xc_functional : PBE                                                             
%BLOCK LATTICE_CART                                                             
ang                                                                             
3.30466000       0.00000000       0.00000000                                    
0.00000000      11.31694000       0.00000000                                    
0.00000000       0.00000000       4.57327000                                    
%ENDBLOCK LATTICE_CART                                                          
%BLOCK POSITIONS_ABS                                                            
ang                                                                             
P     0.000000     1.058926     0.398743                                        
P     0.000000    10.258014     4.174527                                        
P     0.000000     4.599544     2.685378                                        
P     0.000000     6.717396     1.887892                                        
P     1.652330     6.717396     0.398743                                        
P     1.652330     4.599544     4.174527                                        
P     1.652330    10.258014     2.685378                                        
P     1.652330     1.058926     1.887892                                        
%ENDBLOCK POSITIONS_ABS                                                         
%BLOCK SPECIES                                                                  
P P 15 -1 9.0                                                                   
%ENDBLOCK SPECIES                                                               
%BLOCK SPECIES_POT                                                              
P P_NCP19_PBE_OTF.usp                                                           
%ENDBLOCK SPECIES_POT                                                           
num_kpars : 96                                                                  

--------------------------------------------------------------------------------
-------------------------------- END INPUT FILE --------------------------------
--------------------------------------------------------------------------------


 
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Full system >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<< Pseudopotential information >>>>>>>>>>>>>>>>>>>>>>>>>>
File: P_NCP19_PBE_OTF.usp [ 2001 points up to Gmax=  52.9 (1/bohr)]
  Atomic number: 15;  ionic charge:  5.000000
    Shell 1: l = 0; rc = 1.54 bohr
    Shell 2: l = 2; rc = 1.60 bohr
  Core charge supplied for Nonlinear Core Corrections
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

-------------------------- Atom counting information ---------------------------
Symbol    Natoms    Nngwfs    Nprojs
  P          8        32        48
.......   ......    ......    ......
Totals:      8        32        48
--------------------------------------------------------------------------------

=============================== PSINC grid sizes ===============================
                      Simulation cell:   21 x  55 x  25
                              FFT-box:   21 x  55 x  25
                                  PPD:   21 x  55 x  25
Grid space d1=  0.297376303234a0 (KE cutoff=  85.89963Eh =2337.44782eV)
Grid space d2=  0.388834859664a0 (KE cutoff=  50.24277Eh =1367.17546eV)
Grid space d3=  0.345689113580a0 (KE cutoff=  63.56713Eh =1729.74959eV)
================================================================================

********************* Fourier parallelisation information **********************
       Coarse grid (whole simulation cell) dimensions:     21    55    25
          Real-space ('12') slabs/proc (min max mean):     25    25    25
         Recip-space ('23') slabs/proc (min max mean):     11    11    11
********************************************************************************

********************* Fourier parallelisation information **********************
       Double grid (whole simulation cell) dimensions:     42   110    50
          Real-space ('12') slabs/proc (min max mean):     50    50    50
         Recip-space ('23') slabs/proc (min max mean):     22    22    22
********************************************************************************

Atom SCF Calculation for P  : Z (AE atom) =  15 : Z (PS atom) =   5
Config String: 3s2.0 3p3.0
Orbitals (num,occ):  2     2.00 3.00
Orbitals   (num,l):  2        0    1
Atom SCF converged after  24 iterations to a total energy of     -9.45760254

=============================== K-points summary ===============================
Number |             Fractional coordinates          |    Weight
    1   -0.4615384615   -0.3750000000   -0.4736842105    0.0005060729
    2   -0.4615384615   -0.3750000000   -0.4210526316    0.0005060729
    3   -0.4615384615   -0.3750000000   -0.3684210526    0.0005060729
    4   -0.4615384615   -0.3750000000   -0.3157894737    0.0005060729
    5   -0.4615384615   -0.3750000000   -0.2631578947    0.0005060729
    6   -0.4615384615   -0.3750000000   -0.2105263158    0.0005060729
    7   -0.4615384615   -0.3750000000   -0.1578947368    0.0005060729
    8   -0.4615384615   -0.3750000000   -0.1052631579    0.0005060729
    9   -0.4615384615   -0.3750000000   -0.0526315789    0.0005060729
   10   -0.4615384615   -0.3750000000    0.0000000000    0.0005060729
   11   -0.4615384615   -0.3750000000    0.0526315789    0.0005060729
   12   -0.4615384615   -0.3750000000    0.1052631579    0.0005060729
   13   -0.4615384615   -0.3750000000    0.1578947368    0.0005060729
   14   -0.4615384615   -0.3750000000    0.2105263158    0.0005060729
   15   -0.4615384615   -0.3750000000    0.2631578947    0.0005060729
   16   -0.4615384615   -0.3750000000    0.3157894737    0.0005060729
   17   -0.4615384615   -0.3750000000    0.3684210526    0.0005060729
   18   -0.4615384615   -0.3750000000    0.4210526316    0.0005060729
   19   -0.4615384615   -0.3750000000    0.4736842105    0.0005060729
   20   -0.4615384615   -0.2500000000   -0.4736842105    0.0005060729
   21   -0.4615384615   -0.2500000000   -0.4210526316    0.0005060729
   22   -0.4615384615   -0.2500000000   -0.3684210526    0.0005060729
   23   -0.4615384615   -0.2500000000   -0.3157894737    0.0005060729
   24   -0.4615384615   -0.2500000000   -0.2631578947    0.0005060729
   25   -0.4615384615   -0.2500000000   -0.2105263158    0.0005060729
   26   -0.4615384615   -0.2500000000   -0.1578947368    0.0005060729
   27   -0.4615384615   -0.2500000000   -0.1052631579    0.0005060729
   28   -0.4615384615   -0.2500000000   -0.0526315789    0.0005060729
   29   -0.4615384615   -0.2500000000    0.0000000000    0.0005060729
   30   -0.4615384615   -0.2500000000    0.0526315789    0.0005060729
   31   -0.4615384615   -0.2500000000    0.1052631579    0.0005060729
   32   -0.4615384615   -0.2500000000    0.1578947368    0.0005060729
   33   -0.4615384615   -0.2500000000    0.2105263158    0.0005060729
   34   -0.4615384615   -0.2500000000    0.2631578947    0.0005060729
   35   -0.4615384615   -0.2500000000    0.3157894737    0.0005060729
   36   -0.4615384615   -0.2500000000    0.3684210526    0.0005060729
   37   -0.4615384615   -0.2500000000    0.4210526316    0.0005060729
   38   -0.4615384615   -0.2500000000    0.4736842105    0.0005060729
   39   -0.4615384615   -0.1250000000   -0.4736842105    0.0005060729
   40   -0.4615384615   -0.1250000000   -0.4210526316    0.0005060729
   41   -0.4615384615   -0.1250000000   -0.3684210526    0.0005060729
   42   -0.4615384615   -0.1250000000   -0.3157894737    0.0005060729
   43   -0.4615384615   -0.1250000000   -0.2631578947    0.0005060729
   44   -0.4615384615   -0.1250000000   -0.2105263158    0.0005060729
   45   -0.4615384615   -0.1250000000   -0.1578947368    0.0005060729
   46   -0.4615384615   -0.1250000000   -0.1052631579    0.0005060729
   47   -0.4615384615   -0.1250000000   -0.0526315789    0.0005060729
   48   -0.4615384615   -0.1250000000    0.0000000000    0.0005060729
   49   -0.4615384615   -0.1250000000    0.0526315789    0.0005060729
   50   -0.4615384615   -0.1250000000    0.1052631579    0.0005060729
   51   -0.4615384615   -0.1250000000    0.1578947368    0.0005060729
   52   -0.4615384615   -0.1250000000    0.2105263158    0.0005060729
   53   -0.4615384615   -0.1250000000    0.2631578947    0.0005060729
   54   -0.4615384615   -0.1250000000    0.3157894737    0.0005060729
   55   -0.4615384615   -0.1250000000    0.3684210526    0.0005060729
   56   -0.4615384615   -0.1250000000    0.4210526316    0.0005060729
   57   -0.4615384615   -0.1250000000    0.4736842105    0.0005060729
   58   -0.4615384615    0.0000000000   -0.4736842105    0.0005060729
   59   -0.4615384615    0.0000000000   -0.4210526316    0.0005060729
   60   -0.4615384615    0.0000000000   -0.3684210526    0.0005060729
   61   -0.4615384615    0.0000000000   -0.3157894737    0.0005060729
   62   -0.4615384615    0.0000000000   -0.2631578947    0.0005060729
   63   -0.4615384615    0.0000000000   -0.2105263158    0.0005060729
   64   -0.4615384615    0.0000000000   -0.1578947368    0.0005060729
   65   -0.4615384615    0.0000000000   -0.1052631579    0.0005060729
   66   -0.4615384615    0.0000000000   -0.0526315789    0.0005060729
   67   -0.4615384615    0.0000000000    0.0000000000    0.0005060729
   68   -0.4615384615    0.0000000000    0.0526315789    0.0005060729
   69   -0.4615384615    0.0000000000    0.1052631579    0.0005060729
   70   -0.4615384615    0.0000000000    0.1578947368    0.0005060729
   71   -0.4615384615    0.0000000000    0.2105263158    0.0005060729
   72   -0.4615384615    0.0000000000    0.2631578947    0.0005060729
   73   -0.4615384615    0.0000000000    0.3157894737    0.0005060729
   74   -0.4615384615    0.0000000000    0.3684210526    0.0005060729
   75   -0.4615384615    0.0000000000    0.4210526316    0.0005060729
   76   -0.4615384615    0.0000000000    0.4736842105    0.0005060729
   77   -0.4615384615    0.1250000000   -0.4736842105    0.0005060729
   78   -0.4615384615    0.1250000000   -0.4210526316    0.0005060729
   79   -0.4615384615    0.1250000000   -0.3684210526    0.0005060729
   80   -0.4615384615    0.1250000000   -0.3157894737    0.0005060729
   81   -0.4615384615    0.1250000000   -0.2631578947    0.0005060729
   82   -0.4615384615    0.1250000000   -0.2105263158    0.0005060729
   83   -0.4615384615    0.1250000000   -0.1578947368    0.0005060729
   84   -0.4615384615    0.1250000000   -0.1052631579    0.0005060729
   85   -0.4615384615    0.1250000000   -0.0526315789    0.0005060729
   86   -0.4615384615    0.1250000000    0.0000000000    0.0005060729
   87   -0.4615384615    0.1250000000    0.0526315789    0.0005060729
   88   -0.4615384615    0.1250000000    0.1052631579    0.0005060729
   89   -0.4615384615    0.1250000000    0.1578947368    0.0005060729
   90   -0.4615384615    0.1250000000    0.2105263158    0.0005060729
   91   -0.4615384615    0.1250000000    0.2631578947    0.0005060729
   92   -0.4615384615    0.1250000000    0.3157894737    0.0005060729
   93   -0.4615384615    0.1250000000    0.3684210526    0.0005060729
   94   -0.4615384615    0.1250000000    0.4210526316    0.0005060729
   95   -0.4615384615    0.1250000000    0.4736842105    0.0005060729
   96   -0.4615384615    0.2500000000   -0.4736842105    0.0005060729
   97   -0.4615384615    0.2500000000   -0.4210526316    0.0005060729
   98   -0.4615384615    0.2500000000   -0.3684210526    0.0005060729
   99   -0.4615384615    0.2500000000   -0.3157894737    0.0005060729
  100   -0.4615384615    0.2500000000   -0.2631578947    0.0005060729
  101   -0.4615384615    0.2500000000   -0.2105263158    0.0005060729
  102   -0.4615384615    0.2500000000   -0.1578947368    0.0005060729
  103   -0.4615384615    0.2500000000   -0.1052631579    0.0005060729
  104   -0.4615384615    0.2500000000   -0.0526315789    0.0005060729
  105   -0.4615384615    0.2500000000    0.0000000000    0.0005060729
  106   -0.4615384615    0.2500000000    0.0526315789    0.0005060729
  107   -0.4615384615    0.2500000000    0.1052631579    0.0005060729
  108   -0.4615384615    0.2500000000    0.1578947368    0.0005060729
  109   -0.4615384615    0.2500000000    0.2105263158    0.0005060729
  110   -0.4615384615    0.2500000000    0.2631578947    0.0005060729
  111   -0.4615384615    0.2500000000    0.3157894737    0.0005060729
  112   -0.4615384615    0.2500000000    0.3684210526    0.0005060729
  113   -0.4615384615    0.2500000000    0.4210526316    0.0005060729
  114   -0.4615384615    0.2500000000    0.4736842105    0.0005060729
  115   -0.4615384615    0.3750000000   -0.4736842105    0.0005060729
  116   -0.4615384615    0.3750000000   -0.4210526316    0.0005060729
  117   -0.4615384615    0.3750000000   -0.3684210526    0.0005060729
  118   -0.4615384615    0.3750000000   -0.3157894737    0.0005060729
  119   -0.4615384615    0.3750000000   -0.2631578947    0.0005060729
  120   -0.4615384615    0.3750000000   -0.2105263158    0.0005060729
  121   -0.4615384615    0.3750000000   -0.1578947368    0.0005060729
  122   -0.4615384615    0.3750000000   -0.1052631579    0.0005060729
  123   -0.4615384615    0.3750000000   -0.0526315789    0.0005060729
  124   -0.4615384615    0.3750000000    0.0000000000    0.0005060729
  125   -0.4615384615    0.3750000000    0.0526315789    0.0005060729
  126   -0.4615384615    0.3750000000    0.1052631579    0.0005060729
  127   -0.4615384615    0.3750000000    0.1578947368    0.0005060729
  128   -0.4615384615    0.3750000000    0.2105263158    0.0005060729
  129   -0.4615384615    0.3750000000    0.2631578947    0.0005060729
  130   -0.4615384615    0.3750000000    0.3157894737    0.0005060729
  131   -0.4615384615    0.3750000000    0.3684210526    0.0005060729
  132   -0.4615384615    0.3750000000    0.4210526316    0.0005060729
  133   -0.4615384615    0.3750000000    0.4736842105    0.0005060729
  134   -0.4615384615    0.5000000000   -0.4736842105    0.0005060729
  135   -0.4615384615    0.5000000000   -0.4210526316    0.0005060729
  136   -0.4615384615    0.5000000000   -0.3684210526    0.0005060729
  137   -0.4615384615    0.5000000000   -0.3157894737    0.0005060729
  138   -0.4615384615    0.5000000000   -0.2631578947    0.0005060729
  139   -0.4615384615    0.5000000000   -0.2105263158    0.0005060729
  140   -0.4615384615    0.5000000000   -0.1578947368    0.0005060729
  141   -0.4615384615    0.5000000000   -0.1052631579    0.0005060729
  142   -0.4615384615    0.5000000000   -0.0526315789    0.0005060729
  143   -0.4615384615    0.5000000000    0.0000000000    0.0005060729
  144   -0.4615384615    0.5000000000    0.0526315789    0.0005060729
  145   -0.4615384615    0.5000000000    0.1052631579    0.0005060729
  146   -0.4615384615    0.5000000000    0.1578947368    0.0005060729
  147   -0.4615384615    0.5000000000    0.2105263158    0.0005060729
  148   -0.4615384615    0.5000000000    0.2631578947    0.0005060729
  149   -0.4615384615    0.5000000000    0.3157894737    0.0005060729
  150   -0.4615384615    0.5000000000    0.3684210526    0.0005060729
  151   -0.4615384615    0.5000000000    0.4210526316    0.0005060729
  152   -0.4615384615    0.5000000000    0.4736842105    0.0005060729
  153   -0.4230769231   -0.3750000000   -0.4736842105    0.0005060729
  154   -0.4230769231   -0.3750000000   -0.4210526316    0.0005060729
  155   -0.4230769231   -0.3750000000   -0.3684210526    0.0005060729
  156   -0.4230769231   -0.3750000000   -0.3157894737    0.0005060729
  157   -0.4230769231   -0.3750000000   -0.2631578947    0.0005060729
  158   -0.4230769231   -0.3750000000   -0.2105263158    0.0005060729
  159   -0.4230769231   -0.3750000000   -0.1578947368    0.0005060729
  160   -0.4230769231   -0.3750000000   -0.1052631579    0.0005060729
  161   -0.4230769231   -0.3750000000   -0.0526315789    0.0005060729
  162   -0.4230769231   -0.3750000000    0.0000000000    0.0005060729
  163   -0.4230769231   -0.3750000000    0.0526315789    0.0005060729
  164   -0.4230769231   -0.3750000000    0.1052631579    0.0005060729
  165   -0.4230769231   -0.3750000000    0.1578947368    0.0005060729
  166   -0.4230769231   -0.3750000000    0.2105263158    0.0005060729
  167   -0.4230769231   -0.3750000000    0.2631578947    0.0005060729
  168   -0.4230769231   -0.3750000000    0.3157894737    0.0005060729
  169   -0.4230769231   -0.3750000000    0.3684210526    0.0005060729
  170   -0.4230769231   -0.3750000000    0.4210526316    0.0005060729
  171   -0.4230769231   -0.3750000000    0.4736842105    0.0005060729
  172   -0.4230769231   -0.2500000000   -0.4736842105    0.0005060729
  173   -0.4230769231   -0.2500000000   -0.4210526316    0.0005060729
  174   -0.4230769231   -0.2500000000   -0.3684210526    0.0005060729
  175   -0.4230769231   -0.2500000000   -0.3157894737    0.0005060729
  176   -0.4230769231   -0.2500000000   -0.2631578947    0.0005060729
  177   -0.4230769231   -0.2500000000   -0.2105263158    0.0005060729
  178   -0.4230769231   -0.2500000000   -0.1578947368    0.0005060729
  179   -0.4230769231   -0.2500000000   -0.1052631579    0.0005060729
  180   -0.4230769231   -0.2500000000   -0.0526315789    0.0005060729
  181   -0.4230769231   -0.2500000000    0.0000000000    0.0005060729
  182   -0.4230769231   -0.2500000000    0.0526315789    0.0005060729
  183   -0.4230769231   -0.2500000000    0.1052631579    0.0005060729
  184   -0.4230769231   -0.2500000000    0.1578947368    0.0005060729
  185   -0.4230769231   -0.2500000000    0.2105263158    0.0005060729
  186   -0.4230769231   -0.2500000000    0.2631578947    0.0005060729
  187   -0.4230769231   -0.2500000000    0.3157894737    0.0005060729
  188   -0.4230769231   -0.2500000000    0.3684210526    0.0005060729
  189   -0.4230769231   -0.2500000000    0.4210526316    0.0005060729
  190   -0.4230769231   -0.2500000000    0.4736842105    0.0005060729
  191   -0.4230769231   -0.1250000000   -0.4736842105    0.0005060729
  192   -0.4230769231   -0.1250000000   -0.4210526316    0.0005060729
  193   -0.4230769231   -0.1250000000   -0.3684210526    0.0005060729
  194   -0.4230769231   -0.1250000000   -0.3157894737    0.0005060729
  195   -0.4230769231   -0.1250000000   -0.2631578947    0.0005060729
  196   -0.4230769231   -0.1250000000   -0.2105263158    0.0005060729
  197   -0.4230769231   -0.1250000000   -0.1578947368    0.0005060729
  198   -0.4230769231   -0.1250000000   -0.1052631579    0.0005060729
  199   -0.4230769231   -0.1250000000   -0.0526315789    0.0005060729
  200   -0.4230769231   -0.1250000000    0.0000000000    0.0005060729
  201   -0.4230769231   -0.1250000000    0.0526315789    0.0005060729
  202   -0.4230769231   -0.1250000000    0.1052631579    0.0005060729
  203   -0.4230769231   -0.1250000000    0.1578947368    0.0005060729
  204   -0.4230769231   -0.1250000000    0.2105263158    0.0005060729
  205   -0.4230769231   -0.1250000000    0.2631578947    0.0005060729
  206   -0.4230769231   -0.1250000000    0.3157894737    0.0005060729
  207   -0.4230769231   -0.1250000000    0.3684210526    0.0005060729
  208   -0.4230769231   -0.1250000000    0.4210526316    0.0005060729
  209   -0.4230769231   -0.1250000000    0.4736842105    0.0005060729
  210   -0.4230769231    0.0000000000   -0.4736842105    0.0005060729
  211   -0.4230769231    0.0000000000   -0.4210526316    0.0005060729
  212   -0.4230769231    0.0000000000   -0.3684210526    0.0005060729
  213   -0.4230769231    0.0000000000   -0.3157894737    0.0005060729
  214   -0.4230769231    0.0000000000   -0.2631578947    0.0005060729
  215   -0.4230769231    0.0000000000   -0.2105263158    0.0005060729
  216   -0.4230769231    0.0000000000   -0.1578947368    0.0005060729
  217   -0.4230769231    0.0000000000   -0.1052631579    0.0005060729
  218   -0.4230769231    0.0000000000   -0.0526315789    0.0005060729
  219   -0.4230769231    0.0000000000    0.0000000000    0.0005060729
  220   -0.4230769231    0.0000000000    0.0526315789    0.0005060729
  221   -0.4230769231    0.0000000000    0.1052631579    0.0005060729
  222   -0.4230769231    0.0000000000    0.1578947368    0.0005060729
  223   -0.4230769231    0.0000000000    0.2105263158    0.0005060729
  224   -0.4230769231    0.0000000000    0.2631578947    0.0005060729
  225   -0.4230769231    0.0000000000    0.3157894737    0.0005060729
  226   -0.4230769231    0.0000000000    0.3684210526    0.0005060729
  227   -0.4230769231    0.0000000000    0.4210526316    0.0005060729
  228   -0.4230769231    0.0000000000    0.4736842105    0.0005060729
  229   -0.4230769231    0.1250000000   -0.4736842105    0.0005060729
  230   -0.4230769231    0.1250000000   -0.4210526316    0.0005060729
  231   -0.4230769231    0.1250000000   -0.3684210526    0.0005060729
  232   -0.4230769231    0.1250000000   -0.3157894737    0.0005060729
  233   -0.4230769231    0.1250000000   -0.2631578947    0.0005060729
  234   -0.4230769231    0.1250000000   -0.2105263158    0.0005060729
  235   -0.4230769231    0.1250000000   -0.1578947368    0.0005060729
  236   -0.4230769231    0.1250000000   -0.1052631579    0.0005060729
  237   -0.4230769231    0.1250000000   -0.0526315789    0.0005060729
  238   -0.4230769231    0.1250000000    0.0000000000    0.0005060729
  239   -0.4230769231    0.1250000000    0.0526315789    0.0005060729
  240   -0.4230769231    0.1250000000    0.1052631579    0.0005060729
  241   -0.4230769231    0.1250000000    0.1578947368    0.0005060729
  242   -0.4230769231    0.1250000000    0.2105263158    0.0005060729
  243   -0.4230769231    0.1250000000    0.2631578947    0.0005060729
  244   -0.4230769231    0.1250000000    0.3157894737    0.0005060729
  245   -0.4230769231    0.1250000000    0.3684210526    0.0005060729
  246   -0.4230769231    0.1250000000    0.4210526316    0.0005060729
  247   -0.4230769231    0.1250000000    0.4736842105    0.0005060729
  248   -0.4230769231    0.2500000000   -0.4736842105    0.0005060729
  249   -0.4230769231    0.2500000000   -0.4210526316    0.0005060729
  250   -0.4230769231    0.2500000000   -0.3684210526    0.0005060729
  251   -0.4230769231    0.2500000000   -0.3157894737    0.0005060729
  252   -0.4230769231    0.2500000000   -0.2631578947    0.0005060729
  253   -0.4230769231    0.2500000000   -0.2105263158    0.0005060729
  254   -0.4230769231    0.2500000000   -0.1578947368    0.0005060729
  255   -0.4230769231    0.2500000000   -0.1052631579    0.0005060729
  256   -0.4230769231    0.2500000000   -0.0526315789    0.0005060729
  257   -0.4230769231    0.2500000000    0.0000000000    0.0005060729
  258   -0.4230769231    0.2500000000    0.0526315789    0.0005060729
  259   -0.4230769231    0.2500000000    0.1052631579    0.0005060729
  260   -0.4230769231    0.2500000000    0.1578947368    0.0005060729
  261   -0.4230769231    0.2500000000    0.2105263158    0.0005060729
  262   -0.4230769231    0.2500000000    0.2631578947    0.0005060729
  263   -0.4230769231    0.2500000000    0.3157894737    0.0005060729
  264   -0.4230769231    0.2500000000    0.3684210526    0.0005060729
  265   -0.4230769231    0.2500000000    0.4210526316    0.0005060729
  266   -0.4230769231    0.2500000000    0.4736842105    0.0005060729
  267   -0.4230769231    0.3750000000   -0.4736842105    0.0005060729
  268   -0.4230769231    0.3750000000   -0.4210526316    0.0005060729
  269   -0.4230769231    0.3750000000   -0.3684210526    0.0005060729
  270   -0.4230769231    0.3750000000   -0.3157894737    0.0005060729
  271   -0.4230769231    0.3750000000   -0.2631578947    0.0005060729
  272   -0.4230769231    0.3750000000   -0.2105263158    0.0005060729
  273   -0.4230769231    0.3750000000   -0.1578947368    0.0005060729
  274   -0.4230769231    0.3750000000   -0.1052631579    0.0005060729
  275   -0.4230769231    0.3750000000   -0.0526315789    0.0005060729
  276   -0.4230769231    0.3750000000    0.0000000000    0.0005060729
  277   -0.4230769231    0.3750000000    0.0526315789    0.0005060729
  278   -0.4230769231    0.3750000000    0.1052631579    0.0005060729
  279   -0.4230769231    0.3750000000    0.1578947368    0.0005060729
  280   -0.4230769231    0.3750000000    0.2105263158    0.0005060729
  281   -0.4230769231    0.3750000000    0.2631578947    0.0005060729
  282   -0.4230769231    0.3750000000    0.3157894737    0.0005060729
  283   -0.4230769231    0.3750000000    0.3684210526    0.0005060729
  284   -0.4230769231    0.3750000000    0.4210526316    0.0005060729
  285   -0.4230769231    0.3750000000    0.4736842105    0.0005060729
  286   -0.4230769231    0.5000000000   -0.4736842105    0.0005060729
  287   -0.4230769231    0.5000000000   -0.4210526316    0.0005060729
  288   -0.4230769231    0.5000000000   -0.3684210526    0.0005060729
  289   -0.4230769231    0.5000000000   -0.3157894737    0.0005060729
  290   -0.4230769231    0.5000000000   -0.2631578947    0.0005060729
  291   -0.4230769231    0.5000000000   -0.2105263158    0.0005060729
  292   -0.4230769231    0.5000000000   -0.1578947368    0.0005060729
  293   -0.4230769231    0.5000000000   -0.1052631579    0.0005060729
  294   -0.4230769231    0.5000000000   -0.0526315789    0.0005060729
  295   -0.4230769231    0.5000000000    0.0000000000    0.0005060729
  296   -0.4230769231    0.5000000000    0.0526315789    0.0005060729
  297   -0.4230769231    0.5000000000    0.1052631579    0.0005060729
  298   -0.4230769231    0.5000000000    0.1578947368    0.0005060729
  299   -0.4230769231    0.5000000000    0.2105263158    0.0005060729
  300   -0.4230769231    0.5000000000    0.2631578947    0.0005060729
  301   -0.4230769231    0.5000000000    0.3157894737    0.0005060729
  302   -0.4230769231    0.5000000000    0.3684210526    0.0005060729
  303   -0.4230769231    0.5000000000    0.4210526316    0.0005060729
  304   -0.4230769231    0.5000000000    0.4736842105    0.0005060729
  305   -0.3846153846   -0.3750000000   -0.4736842105    0.0005060729
  306   -0.3846153846   -0.3750000000   -0.4210526316    0.0005060729
  307   -0.3846153846   -0.3750000000   -0.3684210526    0.0005060729
  308   -0.3846153846   -0.3750000000   -0.3157894737    0.0005060729
  309   -0.3846153846   -0.3750000000   -0.2631578947    0.0005060729
  310   -0.3846153846   -0.3750000000   -0.2105263158    0.0005060729
  311   -0.3846153846   -0.3750000000   -0.1578947368    0.0005060729
  312   -0.3846153846   -0.3750000000   -0.1052631579    0.0005060729
  313   -0.3846153846   -0.3750000000   -0.0526315789    0.0005060729
  314   -0.3846153846   -0.3750000000    0.0000000000    0.0005060729
  315   -0.3846153846   -0.3750000000    0.0526315789    0.0005060729
  316   -0.3846153846   -0.3750000000    0.1052631579    0.0005060729
  317   -0.3846153846   -0.3750000000    0.1578947368    0.0005060729
  318   -0.3846153846   -0.3750000000    0.2105263158    0.0005060729
  319   -0.3846153846   -0.3750000000    0.2631578947    0.0005060729
  320   -0.3846153846   -0.3750000000    0.3157894737    0.0005060729
  321   -0.3846153846   -0.3750000000    0.3684210526    0.0005060729
  322   -0.3846153846   -0.3750000000    0.4210526316    0.0005060729
  323   -0.3846153846   -0.3750000000    0.4736842105    0.0005060729
  324   -0.3846153846   -0.2500000000   -0.4736842105    0.0005060729
  325   -0.3846153846   -0.2500000000   -0.4210526316    0.0005060729
  326   -0.3846153846   -0.2500000000   -0.3684210526    0.0005060729
  327   -0.3846153846   -0.2500000000   -0.3157894737    0.0005060729
  328   -0.3846153846   -0.2500000000   -0.2631578947    0.0005060729
  329   -0.3846153846   -0.2500000000   -0.2105263158    0.0005060729
  330   -0.3846153846   -0.2500000000   -0.1578947368    0.0005060729
  331   -0.3846153846   -0.2500000000   -0.1052631579    0.0005060729
  332   -0.3846153846   -0.2500000000   -0.0526315789    0.0005060729
  333   -0.3846153846   -0.2500000000    0.0000000000    0.0005060729
  334   -0.3846153846   -0.2500000000    0.0526315789    0.0005060729
  335   -0.3846153846   -0.2500000000    0.1052631579    0.0005060729
  336   -0.3846153846   -0.2500000000    0.1578947368    0.0005060729
  337   -0.3846153846   -0.2500000000    0.2105263158    0.0005060729
  338   -0.3846153846   -0.2500000000    0.2631578947    0.0005060729
  339   -0.3846153846   -0.2500000000    0.3157894737    0.0005060729
  340   -0.3846153846   -0.2500000000    0.3684210526    0.0005060729
  341   -0.3846153846   -0.2500000000    0.4210526316    0.0005060729
  342   -0.3846153846   -0.2500000000    0.4736842105    0.0005060729
  343   -0.3846153846   -0.1250000000   -0.4736842105    0.0005060729
  344   -0.3846153846   -0.1250000000   -0.4210526316    0.0005060729
  345   -0.3846153846   -0.1250000000   -0.3684210526    0.0005060729
  346   -0.3846153846   -0.1250000000   -0.3157894737    0.0005060729
  347   -0.3846153846   -0.1250000000   -0.2631578947    0.0005060729
  348   -0.3846153846   -0.1250000000   -0.2105263158    0.0005060729
  349   -0.3846153846   -0.1250000000   -0.1578947368    0.0005060729
  350   -0.3846153846   -0.1250000000   -0.1052631579    0.0005060729
  351   -0.3846153846   -0.1250000000   -0.0526315789    0.0005060729
  352   -0.3846153846   -0.1250000000    0.0000000000    0.0005060729
  353   -0.3846153846   -0.1250000000    0.0526315789    0.0005060729
  354   -0.3846153846   -0.1250000000    0.1052631579    0.0005060729
  355   -0.3846153846   -0.1250000000    0.1578947368    0.0005060729
  356   -0.3846153846   -0.1250000000    0.2105263158    0.0005060729
  357   -0.3846153846   -0.1250000000    0.2631578947    0.0005060729
  358   -0.3846153846   -0.1250000000    0.3157894737    0.0005060729
  359   -0.3846153846   -0.1250000000    0.3684210526    0.0005060729
  360   -0.3846153846   -0.1250000000    0.4210526316    0.0005060729
  361   -0.3846153846   -0.1250000000    0.4736842105    0.0005060729
  362   -0.3846153846    0.0000000000   -0.4736842105    0.0005060729
  363   -0.3846153846    0.0000000000   -0.4210526316    0.0005060729
  364   -0.3846153846    0.0000000000   -0.3684210526    0.0005060729
  365   -0.3846153846    0.0000000000   -0.3157894737    0.0005060729
  366   -0.3846153846    0.0000000000   -0.2631578947    0.0005060729
  367   -0.3846153846    0.0000000000   -0.2105263158    0.0005060729
  368   -0.3846153846    0.0000000000   -0.1578947368    0.0005060729
  369   -0.3846153846    0.0000000000   -0.1052631579    0.0005060729
  370   -0.3846153846    0.0000000000   -0.0526315789    0.0005060729
  371   -0.3846153846    0.0000000000    0.0000000000    0.0005060729
  372   -0.3846153846    0.0000000000    0.0526315789    0.0005060729
  373   -0.3846153846    0.0000000000    0.1052631579    0.0005060729
  374   -0.3846153846    0.0000000000    0.1578947368    0.0005060729
  375   -0.3846153846    0.0000000000    0.2105263158    0.0005060729
  376   -0.3846153846    0.0000000000    0.2631578947    0.0005060729
  377   -0.3846153846    0.0000000000    0.3157894737    0.0005060729
  378   -0.3846153846    0.0000000000    0.3684210526    0.0005060729
  379   -0.3846153846    0.0000000000    0.4210526316    0.0005060729
  380   -0.3846153846    0.0000000000    0.4736842105    0.0005060729
  381   -0.3846153846    0.1250000000   -0.4736842105    0.0005060729
  382   -0.3846153846    0.1250000000   -0.4210526316    0.0005060729
  383   -0.3846153846    0.1250000000   -0.3684210526    0.0005060729
  384   -0.3846153846    0.1250000000   -0.3157894737    0.0005060729
  385   -0.3846153846    0.1250000000   -0.2631578947    0.0005060729
  386   -0.3846153846    0.1250000000   -0.2105263158    0.0005060729
  387   -0.3846153846    0.1250000000   -0.1578947368    0.0005060729
  388   -0.3846153846    0.1250000000   -0.1052631579    0.0005060729
  389   -0.3846153846    0.1250000000   -0.0526315789    0.0005060729
  390   -0.3846153846    0.1250000000    0.0000000000    0.0005060729
  391   -0.3846153846    0.1250000000    0.0526315789    0.0005060729
  392   -0.3846153846    0.1250000000    0.1052631579    0.0005060729
  393   -0.3846153846    0.1250000000    0.1578947368    0.0005060729
  394   -0.3846153846    0.1250000000    0.2105263158    0.0005060729
  395   -0.3846153846    0.1250000000    0.2631578947    0.0005060729
  396   -0.3846153846    0.1250000000    0.3157894737    0.0005060729
  397   -0.3846153846    0.1250000000    0.3684210526    0.0005060729
  398   -0.3846153846    0.1250000000    0.4210526316    0.0005060729
  399   -0.3846153846    0.1250000000    0.4736842105    0.0005060729
  400   -0.3846153846    0.2500000000   -0.4736842105    0.0005060729
  401   -0.3846153846    0.2500000000   -0.4210526316    0.0005060729
  402   -0.3846153846    0.2500000000   -0.3684210526    0.0005060729
  403   -0.3846153846    0.2500000000   -0.3157894737    0.0005060729
  404   -0.3846153846    0.2500000000   -0.2631578947    0.0005060729
  405   -0.3846153846    0.2500000000   -0.2105263158    0.0005060729
  406   -0.3846153846    0.2500000000   -0.1578947368    0.0005060729
  407   -0.3846153846    0.2500000000   -0.1052631579    0.0005060729
  408   -0.3846153846    0.2500000000   -0.0526315789    0.0005060729
  409   -0.3846153846    0.2500000000    0.0000000000    0.0005060729
  410   -0.3846153846    0.2500000000    0.0526315789    0.0005060729
  411   -0.3846153846    0.2500000000    0.1052631579    0.0005060729
  412   -0.3846153846    0.2500000000    0.1578947368    0.0005060729
  413   -0.3846153846    0.2500000000    0.2105263158    0.0005060729
  414   -0.3846153846    0.2500000000    0.2631578947    0.0005060729
  415   -0.3846153846    0.2500000000    0.3157894737    0.0005060729
  416   -0.3846153846    0.2500000000    0.3684210526    0.0005060729
  417   -0.3846153846    0.2500000000    0.4210526316    0.0005060729
  418   -0.3846153846    0.2500000000    0.4736842105    0.0005060729
  419   -0.3846153846    0.3750000000   -0.4736842105    0.0005060729
  420   -0.3846153846    0.3750000000   -0.4210526316    0.0005060729
  421   -0.3846153846    0.3750000000   -0.3684210526    0.0005060729
  422   -0.3846153846    0.3750000000   -0.3157894737    0.0005060729
  423   -0.3846153846    0.3750000000   -0.2631578947    0.0005060729
  424   -0.3846153846    0.3750000000   -0.2105263158    0.0005060729
  425   -0.3846153846    0.3750000000   -0.1578947368    0.0005060729
  426   -0.3846153846    0.3750000000   -0.1052631579    0.0005060729
  427   -0.3846153846    0.3750000000   -0.0526315789    0.0005060729
  428   -0.3846153846    0.3750000000    0.0000000000    0.0005060729
  429   -0.3846153846    0.3750000000    0.0526315789    0.0005060729
  430   -0.3846153846    0.3750000000    0.1052631579    0.0005060729
  431   -0.3846153846    0.3750000000    0.1578947368    0.0005060729
  432   -0.3846153846    0.3750000000    0.2105263158    0.0005060729
  433   -0.3846153846    0.3750000000    0.2631578947    0.0005060729
  434   -0.3846153846    0.3750000000    0.3157894737    0.0005060729
  435   -0.3846153846    0.3750000000    0.3684210526    0.0005060729
  436   -0.3846153846    0.3750000000    0.4210526316    0.0005060729
  437   -0.3846153846    0.3750000000    0.4736842105    0.0005060729
  438   -0.3846153846    0.5000000000   -0.4736842105    0.0005060729
  439   -0.3846153846    0.5000000000   -0.4210526316    0.0005060729
  440   -0.3846153846    0.5000000000   -0.3684210526    0.0005060729
  441   -0.3846153846    0.5000000000   -0.3157894737    0.0005060729
  442   -0.3846153846    0.5000000000   -0.2631578947    0.0005060729
  443   -0.3846153846    0.5000000000   -0.2105263158    0.0005060729
  444   -0.3846153846    0.5000000000   -0.1578947368    0.0005060729
  445   -0.3846153846    0.5000000000   -0.1052631579    0.0005060729
  446   -0.3846153846    0.5000000000   -0.0526315789    0.0005060729
  447   -0.3846153846    0.5000000000    0.0000000000    0.0005060729
  448   -0.3846153846    0.5000000000    0.0526315789    0.0005060729
  449   -0.3846153846    0.5000000000    0.1052631579    0.0005060729
  450   -0.3846153846    0.5000000000    0.1578947368    0.0005060729
  451   -0.3846153846    0.5000000000    0.2105263158    0.0005060729
  452   -0.3846153846    0.5000000000    0.2631578947    0.0005060729
  453   -0.3846153846    0.5000000000    0.3157894737    0.0005060729
  454   -0.3846153846    0.5000000000    0.3684210526    0.0005060729
  455   -0.3846153846    0.5000000000    0.4210526316    0.0005060729
  456   -0.3846153846    0.5000000000    0.4736842105    0.0005060729
  457   -0.3461538462   -0.3750000000   -0.4736842105    0.0005060729
  458   -0.3461538462   -0.3750000000   -0.4210526316    0.0005060729
  459   -0.3461538462   -0.3750000000   -0.3684210526    0.0005060729
  460   -0.3461538462   -0.3750000000   -0.3157894737    0.0005060729
  461   -0.3461538462   -0.3750000000   -0.2631578947    0.0005060729
  462   -0.3461538462   -0.3750000000   -0.2105263158    0.0005060729
  463   -0.3461538462   -0.3750000000   -0.1578947368    0.0005060729
  464   -0.3461538462   -0.3750000000   -0.1052631579    0.0005060729
  465   -0.3461538462   -0.3750000000   -0.0526315789    0.0005060729
  466   -0.3461538462   -0.3750000000    0.0000000000    0.0005060729
  467   -0.3461538462   -0.3750000000    0.0526315789    0.0005060729
  468   -0.3461538462   -0.3750000000    0.1052631579    0.0005060729
  469   -0.3461538462   -0.3750000000    0.1578947368    0.0005060729
  470   -0.3461538462   -0.3750000000    0.2105263158    0.0005060729
  471   -0.3461538462   -0.3750000000    0.2631578947    0.0005060729
  472   -0.3461538462   -0.3750000000    0.3157894737    0.0005060729
  473   -0.3461538462   -0.3750000000    0.3684210526    0.0005060729
  474   -0.3461538462   -0.3750000000    0.4210526316    0.0005060729
  475   -0.3461538462   -0.3750000000    0.4736842105    0.0005060729
  476   -0.3461538462   -0.2500000000   -0.4736842105    0.0005060729
  477   -0.3461538462   -0.2500000000   -0.4210526316    0.0005060729
  478   -0.3461538462   -0.2500000000   -0.3684210526    0.0005060729
  479   -0.3461538462   -0.2500000000   -0.3157894737    0.0005060729
  480   -0.3461538462   -0.2500000000   -0.2631578947    0.0005060729
  481   -0.3461538462   -0.2500000000   -0.2105263158    0.0005060729
  482   -0.3461538462   -0.2500000000   -0.1578947368    0.0005060729
  483   -0.3461538462   -0.2500000000   -0.1052631579    0.0005060729
  484   -0.3461538462   -0.2500000000   -0.0526315789    0.0005060729
  485   -0.3461538462   -0.2500000000    0.0000000000    0.0005060729
  486   -0.3461538462   -0.2500000000    0.0526315789    0.0005060729
  487   -0.3461538462   -0.2500000000    0.1052631579    0.0005060729
  488   -0.3461538462   -0.2500000000    0.1578947368    0.0005060729
  489   -0.3461538462   -0.2500000000    0.2105263158    0.0005060729
  490   -0.3461538462   -0.2500000000    0.2631578947    0.0005060729
  491   -0.3461538462   -0.2500000000    0.3157894737    0.0005060729
  492   -0.3461538462   -0.2500000000    0.3684210526    0.0005060729
  493   -0.3461538462   -0.2500000000    0.4210526316    0.0005060729
  494   -0.3461538462   -0.2500000000    0.4736842105    0.0005060729
  495   -0.3461538462   -0.1250000000   -0.4736842105    0.0005060729
  496   -0.3461538462   -0.1250000000   -0.4210526316    0.0005060729
  497   -0.3461538462   -0.1250000000   -0.3684210526    0.0005060729
  498   -0.3461538462   -0.1250000000   -0.3157894737    0.0005060729
  499   -0.3461538462   -0.1250000000   -0.2631578947    0.0005060729
  500   -0.3461538462   -0.1250000000   -0.2105263158    0.0005060729
  501   -0.3461538462   -0.1250000000   -0.1578947368    0.0005060729
  502   -0.3461538462   -0.1250000000   -0.1052631579    0.0005060729
  503   -0.3461538462   -0.1250000000   -0.0526315789    0.0005060729
  504   -0.3461538462   -0.1250000000    0.0000000000    0.0005060729
  505   -0.3461538462   -0.1250000000    0.0526315789    0.0005060729
  506   -0.3461538462   -0.1250000000    0.1052631579    0.0005060729
  507   -0.3461538462   -0.1250000000    0.1578947368    0.0005060729
  508   -0.3461538462   -0.1250000000    0.2105263158    0.0005060729
  509   -0.3461538462   -0.1250000000    0.2631578947    0.0005060729
  510   -0.3461538462   -0.1250000000    0.3157894737    0.0005060729
  511   -0.3461538462   -0.1250000000    0.3684210526    0.0005060729
  512   -0.3461538462   -0.1250000000    0.4210526316    0.0005060729
  513   -0.3461538462   -0.1250000000    0.4736842105    0.0005060729
  514   -0.3461538462    0.0000000000   -0.4736842105    0.0005060729
  515   -0.3461538462    0.0000000000   -0.4210526316    0.0005060729
  516   -0.3461538462    0.0000000000   -0.3684210526    0.0005060729
  517   -0.3461538462    0.0000000000   -0.3157894737    0.0005060729
  518   -0.3461538462    0.0000000000   -0.2631578947    0.0005060729
  519   -0.3461538462    0.0000000000   -0.2105263158    0.0005060729
  520   -0.3461538462    0.0000000000   -0.1578947368    0.0005060729
  521   -0.3461538462    0.0000000000   -0.1052631579    0.0005060729
  522   -0.3461538462    0.0000000000   -0.0526315789    0.0005060729
  523   -0.3461538462    0.0000000000    0.0000000000    0.0005060729
  524   -0.3461538462    0.0000000000    0.0526315789    0.0005060729
  525   -0.3461538462    0.0000000000    0.1052631579    0.0005060729
  526   -0.3461538462    0.0000000000    0.1578947368    0.0005060729
  527   -0.3461538462    0.0000000000    0.2105263158    0.0005060729
  528   -0.3461538462    0.0000000000    0.2631578947    0.0005060729
  529   -0.3461538462    0.0000000000    0.3157894737    0.0005060729
  530   -0.3461538462    0.0000000000    0.3684210526    0.0005060729
  531   -0.3461538462    0.0000000000    0.4210526316    0.0005060729
  532   -0.3461538462    0.0000000000    0.4736842105    0.0005060729
  533   -0.3461538462    0.1250000000   -0.4736842105    0.0005060729
  534   -0.3461538462    0.1250000000   -0.4210526316    0.0005060729
  535   -0.3461538462    0.1250000000   -0.3684210526    0.0005060729
  536   -0.3461538462    0.1250000000   -0.3157894737    0.0005060729
  537   -0.3461538462    0.1250000000   -0.2631578947    0.0005060729
  538   -0.3461538462    0.1250000000   -0.2105263158    0.0005060729
  539   -0.3461538462    0.1250000000   -0.1578947368    0.0005060729
  540   -0.3461538462    0.1250000000   -0.1052631579    0.0005060729
  541   -0.3461538462    0.1250000000   -0.0526315789    0.0005060729
  542   -0.3461538462    0.1250000000    0.0000000000    0.0005060729
  543   -0.3461538462    0.1250000000    0.0526315789    0.0005060729
  544   -0.3461538462    0.1250000000    0.1052631579    0.0005060729
  545   -0.3461538462    0.1250000000    0.1578947368    0.0005060729
  546   -0.3461538462    0.1250000000    0.2105263158    0.0005060729
  547   -0.3461538462    0.1250000000    0.2631578947    0.0005060729
  548   -0.3461538462    0.1250000000    0.3157894737    0.0005060729
  549   -0.3461538462    0.1250000000    0.3684210526    0.0005060729
  550   -0.3461538462    0.1250000000    0.4210526316    0.0005060729
  551   -0.3461538462    0.1250000000    0.4736842105    0.0005060729
  552   -0.3461538462    0.2500000000   -0.4736842105    0.0005060729
  553   -0.3461538462    0.2500000000   -0.4210526316    0.0005060729
  554   -0.3461538462    0.2500000000   -0.3684210526    0.0005060729
  555   -0.3461538462    0.2500000000   -0.3157894737    0.0005060729
  556   -0.3461538462    0.2500000000   -0.2631578947    0.0005060729
  557   -0.3461538462    0.2500000000   -0.2105263158    0.0005060729
  558   -0.3461538462    0.2500000000   -0.1578947368    0.0005060729
  559   -0.3461538462    0.2500000000   -0.1052631579    0.0005060729
  560   -0.3461538462    0.2500000000   -0.0526315789    0.0005060729
  561   -0.3461538462    0.2500000000    0.0000000000    0.0005060729
  562   -0.3461538462    0.2500000000    0.0526315789    0.0005060729
  563   -0.3461538462    0.2500000000    0.1052631579    0.0005060729
  564   -0.3461538462    0.2500000000    0.1578947368    0.0005060729
  565   -0.3461538462    0.2500000000    0.2105263158    0.0005060729
  566   -0.3461538462    0.2500000000    0.2631578947    0.0005060729
  567   -0.3461538462    0.2500000000    0.3157894737    0.0005060729
  568   -0.3461538462    0.2500000000    0.3684210526    0.0005060729
  569   -0.3461538462    0.2500000000    0.4210526316    0.0005060729
  570   -0.3461538462    0.2500000000    0.4736842105    0.0005060729
  571   -0.3461538462    0.3750000000   -0.4736842105    0.0005060729
  572   -0.3461538462    0.3750000000   -0.4210526316    0.0005060729
  573   -0.3461538462    0.3750000000   -0.3684210526    0.0005060729
  574   -0.3461538462    0.3750000000   -0.3157894737    0.0005060729
  575   -0.3461538462    0.3750000000   -0.2631578947    0.0005060729
  576   -0.3461538462    0.3750000000   -0.2105263158    0.0005060729
  577   -0.3461538462    0.3750000000   -0.1578947368    0.0005060729
  578   -0.3461538462    0.3750000000   -0.1052631579    0.0005060729
  579   -0.3461538462    0.3750000000   -0.0526315789    0.0005060729
  580   -0.3461538462    0.3750000000    0.0000000000    0.0005060729
  581   -0.3461538462    0.3750000000    0.0526315789    0.0005060729
  582   -0.3461538462    0.3750000000    0.1052631579    0.0005060729
  583   -0.3461538462    0.3750000000    0.1578947368    0.0005060729
  584   -0.3461538462    0.3750000000    0.2105263158    0.0005060729
  585   -0.3461538462    0.3750000000    0.2631578947    0.0005060729
  586   -0.3461538462    0.3750000000    0.3157894737    0.0005060729
  587   -0.3461538462    0.3750000000    0.3684210526    0.0005060729
  588   -0.3461538462    0.3750000000    0.4210526316    0.0005060729
  589   -0.3461538462    0.3750000000    0.4736842105    0.0005060729
  590   -0.3461538462    0.5000000000   -0.4736842105    0.0005060729
  591   -0.3461538462    0.5000000000   -0.4210526316    0.0005060729
  592   -0.3461538462    0.5000000000   -0.3684210526    0.0005060729
  593   -0.3461538462    0.5000000000   -0.3157894737    0.0005060729
  594   -0.3461538462    0.5000000000   -0.2631578947    0.0005060729
  595   -0.3461538462    0.5000000000   -0.2105263158    0.0005060729
  596   -0.3461538462    0.5000000000   -0.1578947368    0.0005060729
  597   -0.3461538462    0.5000000000   -0.1052631579    0.0005060729
  598   -0.3461538462    0.5000000000   -0.0526315789    0.0005060729
  599   -0.3461538462    0.5000000000    0.0000000000    0.0005060729
  600   -0.3461538462    0.5000000000    0.0526315789    0.0005060729
  601   -0.3461538462    0.5000000000    0.1052631579    0.0005060729
  602   -0.3461538462    0.5000000000    0.1578947368    0.0005060729
  603   -0.3461538462    0.5000000000    0.2105263158    0.0005060729
  604   -0.3461538462    0.5000000000    0.2631578947    0.0005060729
  605   -0.3461538462    0.5000000000    0.3157894737    0.0005060729
  606   -0.3461538462    0.5000000000    0.3684210526    0.0005060729
  607   -0.3461538462    0.5000000000    0.4210526316    0.0005060729
  608   -0.3461538462    0.5000000000    0.4736842105    0.0005060729
  609   -0.3076923077   -0.3750000000   -0.4736842105    0.0005060729
  610   -0.3076923077   -0.3750000000   -0.4210526316    0.0005060729
  611   -0.3076923077   -0.3750000000   -0.3684210526    0.0005060729
  612   -0.3076923077   -0.3750000000   -0.3157894737    0.0005060729
  613   -0.3076923077   -0.3750000000   -0.2631578947    0.0005060729
  614   -0.3076923077   -0.3750000000   -0.2105263158    0.0005060729
  615   -0.3076923077   -0.3750000000   -0.1578947368    0.0005060729
  616   -0.3076923077   -0.3750000000   -0.1052631579    0.0005060729
  617   -0.3076923077   -0.3750000000   -0.0526315789    0.0005060729
  618   -0.3076923077   -0.3750000000    0.0000000000    0.0005060729
  619   -0.3076923077   -0.3750000000    0.0526315789    0.0005060729
  620   -0.3076923077   -0.3750000000    0.1052631579    0.0005060729
  621   -0.3076923077   -0.3750000000    0.1578947368    0.0005060729
  622   -0.3076923077   -0.3750000000    0.2105263158    0.0005060729
  623   -0.3076923077   -0.3750000000    0.2631578947    0.0005060729
  624   -0.3076923077   -0.3750000000    0.3157894737    0.0005060729
  625   -0.3076923077   -0.3750000000    0.3684210526    0.0005060729
  626   -0.3076923077   -0.3750000000    0.4210526316    0.0005060729
  627   -0.3076923077   -0.3750000000    0.4736842105    0.0005060729
  628   -0.3076923077   -0.2500000000   -0.4736842105    0.0005060729
  629   -0.3076923077   -0.2500000000   -0.4210526316    0.0005060729
  630   -0.3076923077   -0.2500000000   -0.3684210526    0.0005060729
  631   -0.3076923077   -0.2500000000   -0.3157894737    0.0005060729
  632   -0.3076923077   -0.2500000000   -0.2631578947    0.0005060729
  633   -0.3076923077   -0.2500000000   -0.2105263158    0.0005060729
  634   -0.3076923077   -0.2500000000   -0.1578947368    0.0005060729
  635   -0.3076923077   -0.2500000000   -0.1052631579    0.0005060729
  636   -0.3076923077   -0.2500000000   -0.0526315789    0.0005060729
  637   -0.3076923077   -0.2500000000    0.0000000000    0.0005060729
  638   -0.3076923077   -0.2500000000    0.0526315789    0.0005060729
  639   -0.3076923077   -0.2500000000    0.1052631579    0.0005060729
  640   -0.3076923077   -0.2500000000    0.1578947368    0.0005060729
  641   -0.3076923077   -0.2500000000    0.2105263158    0.0005060729
  642   -0.3076923077   -0.2500000000    0.2631578947    0.0005060729
  643   -0.3076923077   -0.2500000000    0.3157894737    0.0005060729
  644   -0.3076923077   -0.2500000000    0.3684210526    0.0005060729
  645   -0.3076923077   -0.2500000000    0.4210526316    0.0005060729
  646   -0.3076923077   -0.2500000000    0.4736842105    0.0005060729
  647   -0.3076923077   -0.1250000000   -0.4736842105    0.0005060729
  648   -0.3076923077   -0.1250000000   -0.4210526316    0.0005060729
  649   -0.3076923077   -0.1250000000   -0.3684210526    0.0005060729
  650   -0.3076923077   -0.1250000000   -0.3157894737    0.0005060729
  651   -0.3076923077   -0.1250000000   -0.2631578947    0.0005060729
  652   -0.3076923077   -0.1250000000   -0.2105263158    0.0005060729
  653   -0.3076923077   -0.1250000000   -0.1578947368    0.0005060729
  654   -0.3076923077   -0.1250000000   -0.1052631579    0.0005060729
  655   -0.3076923077   -0.1250000000   -0.0526315789    0.0005060729
  656   -0.3076923077   -0.1250000000    0.0000000000    0.0005060729
  657   -0.3076923077   -0.1250000000    0.0526315789    0.0005060729
  658   -0.3076923077   -0.1250000000    0.1052631579    0.0005060729
  659   -0.3076923077   -0.1250000000    0.1578947368    0.0005060729
  660   -0.3076923077   -0.1250000000    0.2105263158    0.0005060729
  661   -0.3076923077   -0.1250000000    0.2631578947    0.0005060729
  662   -0.3076923077   -0.1250000000    0.3157894737    0.0005060729
  663   -0.3076923077   -0.1250000000    0.3684210526    0.0005060729
  664   -0.3076923077   -0.1250000000    0.4210526316    0.0005060729
  665   -0.3076923077   -0.1250000000    0.4736842105    0.0005060729
  666   -0.3076923077    0.0000000000   -0.4736842105    0.0005060729
  667   -0.3076923077    0.0000000000   -0.4210526316    0.0005060729
  668   -0.3076923077    0.0000000000   -0.3684210526    0.0005060729
  669   -0.3076923077    0.0000000000   -0.3157894737    0.0005060729
  670   -0.3076923077    0.0000000000   -0.2631578947    0.0005060729
  671   -0.3076923077    0.0000000000   -0.2105263158    0.0005060729
  672   -0.3076923077    0.0000000000   -0.1578947368    0.0005060729
  673   -0.3076923077    0.0000000000   -0.1052631579    0.0005060729
  674   -0.3076923077    0.0000000000   -0.0526315789    0.0005060729
  675   -0.3076923077    0.0000000000    0.0000000000    0.0005060729
  676   -0.3076923077    0.0000000000    0.0526315789    0.0005060729
  677   -0.3076923077    0.0000000000    0.1052631579    0.0005060729
  678   -0.3076923077    0.0000000000    0.1578947368    0.0005060729
  679   -0.3076923077    0.0000000000    0.2105263158    0.0005060729
  680   -0.3076923077    0.0000000000    0.2631578947    0.0005060729
  681   -0.3076923077    0.0000000000    0.3157894737    0.0005060729
  682   -0.3076923077    0.0000000000    0.3684210526    0.0005060729
  683   -0.3076923077    0.0000000000    0.4210526316    0.0005060729
  684   -0.3076923077    0.0000000000    0.4736842105    0.0005060729
  685   -0.3076923077    0.1250000000   -0.4736842105    0.0005060729
  686   -0.3076923077    0.1250000000   -0.4210526316    0.0005060729
  687   -0.3076923077    0.1250000000   -0.3684210526    0.0005060729
  688   -0.3076923077    0.1250000000   -0.3157894737    0.0005060729
  689   -0.3076923077    0.1250000000   -0.2631578947    0.0005060729
  690   -0.3076923077    0.1250000000   -0.2105263158    0.0005060729
  691   -0.3076923077    0.1250000000   -0.1578947368    0.0005060729
  692   -0.3076923077    0.1250000000   -0.1052631579    0.0005060729
  693   -0.3076923077    0.1250000000   -0.0526315789    0.0005060729
  694   -0.3076923077    0.1250000000    0.0000000000    0.0005060729
  695   -0.3076923077    0.1250000000    0.0526315789    0.0005060729
  696   -0.3076923077    0.1250000000    0.1052631579    0.0005060729
  697   -0.3076923077    0.1250000000    0.1578947368    0.0005060729
  698   -0.3076923077    0.1250000000    0.2105263158    0.0005060729
  699   -0.3076923077    0.1250000000    0.2631578947    0.0005060729
  700   -0.3076923077    0.1250000000    0.3157894737    0.0005060729
  701   -0.3076923077    0.1250000000    0.3684210526    0.0005060729
  702   -0.3076923077    0.1250000000    0.4210526316    0.0005060729
  703   -0.3076923077    0.1250000000    0.4736842105    0.0005060729
  704   -0.3076923077    0.2500000000   -0.4736842105    0.0005060729
  705   -0.3076923077    0.2500000000   -0.4210526316    0.0005060729
  706   -0.3076923077    0.2500000000   -0.3684210526    0.0005060729
  707   -0.3076923077    0.2500000000   -0.3157894737    0.0005060729
  708   -0.3076923077    0.2500000000   -0.2631578947    0.0005060729
  709   -0.3076923077    0.2500000000   -0.2105263158    0.0005060729
  710   -0.3076923077    0.2500000000   -0.1578947368    0.0005060729
  711   -0.3076923077    0.2500000000   -0.1052631579    0.0005060729
  712   -0.3076923077    0.2500000000   -0.0526315789    0.0005060729
  713   -0.3076923077    0.2500000000    0.0000000000    0.0005060729
  714   -0.3076923077    0.2500000000    0.0526315789    0.0005060729
  715   -0.3076923077    0.2500000000    0.1052631579    0.0005060729
  716   -0.3076923077    0.2500000000    0.1578947368    0.0005060729
  717   -0.3076923077    0.2500000000    0.2105263158    0.0005060729
  718   -0.3076923077    0.2500000000    0.2631578947    0.0005060729
  719   -0.3076923077    0.2500000000    0.3157894737    0.0005060729
  720   -0.3076923077    0.2500000000    0.3684210526    0.0005060729
  721   -0.3076923077    0.2500000000    0.4210526316    0.0005060729
  722   -0.3076923077    0.2500000000    0.4736842105    0.0005060729
  723   -0.3076923077    0.3750000000   -0.4736842105    0.0005060729
  724   -0.3076923077    0.3750000000   -0.4210526316    0.0005060729
  725   -0.3076923077    0.3750000000   -0.3684210526    0.0005060729
  726   -0.3076923077    0.3750000000   -0.3157894737    0.0005060729
  727   -0.3076923077    0.3750000000   -0.2631578947    0.0005060729
  728   -0.3076923077    0.3750000000   -0.2105263158    0.0005060729
  729   -0.3076923077    0.3750000000   -0.1578947368    0.0005060729
  730   -0.3076923077    0.3750000000   -0.1052631579    0.0005060729
  731   -0.3076923077    0.3750000000   -0.0526315789    0.0005060729
  732   -0.3076923077    0.3750000000    0.0000000000    0.0005060729
  733   -0.3076923077    0.3750000000    0.0526315789    0.0005060729
  734   -0.3076923077    0.3750000000    0.1052631579    0.0005060729
  735   -0.3076923077    0.3750000000    0.1578947368    0.0005060729
  736   -0.3076923077    0.3750000000    0.2105263158    0.0005060729
  737   -0.3076923077    0.3750000000    0.2631578947    0.0005060729
  738   -0.3076923077    0.3750000000    0.3157894737    0.0005060729
  739   -0.3076923077    0.3750000000    0.3684210526    0.0005060729
  740   -0.3076923077    0.3750000000    0.4210526316    0.0005060729
  741   -0.3076923077    0.3750000000    0.4736842105    0.0005060729
  742   -0.3076923077    0.5000000000   -0.4736842105    0.0005060729
  743   -0.3076923077    0.5000000000   -0.4210526316    0.0005060729
  744   -0.3076923077    0.5000000000   -0.3684210526    0.0005060729
  745   -0.3076923077    0.5000000000   -0.3157894737    0.0005060729
  746   -0.3076923077    0.5000000000   -0.2631578947    0.0005060729
  747   -0.3076923077    0.5000000000   -0.2105263158    0.0005060729
  748   -0.3076923077    0.5000000000   -0.1578947368    0.0005060729
  749   -0.3076923077    0.5000000000   -0.1052631579    0.0005060729
  750   -0.3076923077    0.5000000000   -0.0526315789    0.0005060729
  751   -0.3076923077    0.5000000000    0.0000000000    0.0005060729
  752   -0.3076923077    0.5000000000    0.0526315789    0.0005060729
  753   -0.3076923077    0.5000000000    0.1052631579    0.0005060729
  754   -0.3076923077    0.5000000000    0.1578947368    0.0005060729
  755   -0.3076923077    0.5000000000    0.2105263158    0.0005060729
  756   -0.3076923077    0.5000000000    0.2631578947    0.0005060729
  757   -0.3076923077    0.5000000000    0.3157894737    0.0005060729
  758   -0.3076923077    0.5000000000    0.3684210526    0.0005060729
  759   -0.3076923077    0.5000000000    0.4210526316    0.0005060729
  760   -0.3076923077    0.5000000000    0.4736842105    0.0005060729
  761   -0.2692307692   -0.3750000000   -0.4736842105    0.0005060729
  762   -0.2692307692   -0.3750000000   -0.4210526316    0.0005060729
  763   -0.2692307692   -0.3750000000   -0.3684210526    0.0005060729
  764   -0.2692307692   -0.3750000000   -0.3157894737    0.0005060729
  765   -0.2692307692   -0.3750000000   -0.2631578947    0.0005060729
  766   -0.2692307692   -0.3750000000   -0.2105263158    0.0005060729
  767   -0.2692307692   -0.3750000000   -0.1578947368    0.0005060729
  768   -0.2692307692   -0.3750000000   -0.1052631579    0.0005060729
  769   -0.2692307692   -0.3750000000   -0.0526315789    0.0005060729
  770   -0.2692307692   -0.3750000000    0.0000000000    0.0005060729
  771   -0.2692307692   -0.3750000000    0.0526315789    0.0005060729
  772   -0.2692307692   -0.3750000000    0.1052631579    0.0005060729
  773   -0.2692307692   -0.3750000000    0.1578947368    0.0005060729
  774   -0.2692307692   -0.3750000000    0.2105263158    0.0005060729
  775   -0.2692307692   -0.3750000000    0.2631578947    0.0005060729
  776   -0.2692307692   -0.3750000000    0.3157894737    0.0005060729
  777   -0.2692307692   -0.3750000000    0.3684210526    0.0005060729
  778   -0.2692307692   -0.3750000000    0.4210526316    0.0005060729
  779   -0.2692307692   -0.3750000000    0.4736842105    0.0005060729
  780   -0.2692307692   -0.2500000000   -0.4736842105    0.0005060729
  781   -0.2692307692   -0.2500000000   -0.4210526316    0.0005060729
  782   -0.2692307692   -0.2500000000   -0.3684210526    0.0005060729
  783   -0.2692307692   -0.2500000000   -0.3157894737    0.0005060729
  784   -0.2692307692   -0.2500000000   -0.2631578947    0.0005060729
  785   -0.2692307692   -0.2500000000   -0.2105263158    0.0005060729
  786   -0.2692307692   -0.2500000000   -0.1578947368    0.0005060729
  787   -0.2692307692   -0.2500000000   -0.1052631579    0.0005060729
  788   -0.2692307692   -0.2500000000   -0.0526315789    0.0005060729
  789   -0.2692307692   -0.2500000000    0.0000000000    0.0005060729
  790   -0.2692307692   -0.2500000000    0.0526315789    0.0005060729
  791   -0.2692307692   -0.2500000000    0.1052631579    0.0005060729
  792   -0.2692307692   -0.2500000000    0.1578947368    0.0005060729
  793   -0.2692307692   -0.2500000000    0.2105263158    0.0005060729
  794   -0.2692307692   -0.2500000000    0.2631578947    0.0005060729
  795   -0.2692307692   -0.2500000000    0.3157894737    0.0005060729
  796   -0.2692307692   -0.2500000000    0.3684210526    0.0005060729
  797   -0.2692307692   -0.2500000000    0.4210526316    0.0005060729
  798   -0.2692307692   -0.2500000000    0.4736842105    0.0005060729
  799   -0.2692307692   -0.1250000000   -0.4736842105    0.0005060729
  800   -0.2692307692   -0.1250000000   -0.4210526316    0.0005060729
  801   -0.2692307692   -0.1250000000   -0.3684210526    0.0005060729
  802   -0.2692307692   -0.1250000000   -0.3157894737    0.0005060729
  803   -0.2692307692   -0.1250000000   -0.2631578947    0.0005060729
  804   -0.2692307692   -0.1250000000   -0.2105263158    0.0005060729
  805   -0.2692307692   -0.1250000000   -0.1578947368    0.0005060729
  806   -0.2692307692   -0.1250000000   -0.1052631579    0.0005060729
  807   -0.2692307692   -0.1250000000   -0.0526315789    0.0005060729
  808   -0.2692307692   -0.1250000000    0.0000000000    0.0005060729
  809   -0.2692307692   -0.1250000000    0.0526315789    0.0005060729
  810   -0.2692307692   -0.1250000000    0.1052631579    0.0005060729
  811   -0.2692307692   -0.1250000000    0.1578947368    0.0005060729
  812   -0.2692307692   -0.1250000000    0.2105263158    0.0005060729
  813   -0.2692307692   -0.1250000000    0.2631578947    0.0005060729
  814   -0.2692307692   -0.1250000000    0.3157894737    0.0005060729
  815   -0.2692307692   -0.1250000000    0.3684210526    0.0005060729
  816   -0.2692307692   -0.1250000000    0.4210526316    0.0005060729
  817   -0.2692307692   -0.1250000000    0.4736842105    0.0005060729
  818   -0.2692307692    0.0000000000   -0.4736842105    0.0005060729
  819   -0.2692307692    0.0000000000   -0.4210526316    0.0005060729
  820   -0.2692307692    0.0000000000   -0.3684210526    0.0005060729
  821   -0.2692307692    0.0000000000   -0.3157894737    0.0005060729
  822   -0.2692307692    0.0000000000   -0.2631578947    0.0005060729
  823   -0.2692307692    0.0000000000   -0.2105263158    0.0005060729
  824   -0.2692307692    0.0000000000   -0.1578947368    0.0005060729
  825   -0.2692307692    0.0000000000   -0.1052631579    0.0005060729
  826   -0.2692307692    0.0000000000   -0.0526315789    0.0005060729
  827   -0.2692307692    0.0000000000    0.0000000000    0.0005060729
  828   -0.2692307692    0.0000000000    0.0526315789    0.0005060729
  829   -0.2692307692    0.0000000000    0.1052631579    0.0005060729
  830   -0.2692307692    0.0000000000    0.1578947368    0.0005060729
  831   -0.2692307692    0.0000000000    0.2105263158    0.0005060729
  832   -0.2692307692    0.0000000000    0.2631578947    0.0005060729
  833   -0.2692307692    0.0000000000    0.3157894737    0.0005060729
  834   -0.2692307692    0.0000000000    0.3684210526    0.0005060729
  835   -0.2692307692    0.0000000000    0.4210526316    0.0005060729
  836   -0.2692307692    0.0000000000    0.4736842105    0.0005060729
  837   -0.2692307692    0.1250000000   -0.4736842105    0.0005060729
  838   -0.2692307692    0.1250000000   -0.4210526316    0.0005060729
  839   -0.2692307692    0.1250000000   -0.3684210526    0.0005060729
  840   -0.2692307692    0.1250000000   -0.3157894737    0.0005060729
  841   -0.2692307692    0.1250000000   -0.2631578947    0.0005060729
  842   -0.2692307692    0.1250000000   -0.2105263158    0.0005060729
  843   -0.2692307692    0.1250000000   -0.1578947368    0.0005060729
  844   -0.2692307692    0.1250000000   -0.1052631579    0.0005060729
  845   -0.2692307692    0.1250000000   -0.0526315789    0.0005060729
  846   -0.2692307692    0.1250000000    0.0000000000    0.0005060729
  847   -0.2692307692    0.1250000000    0.0526315789    0.0005060729
  848   -0.2692307692    0.1250000000    0.1052631579    0.0005060729
  849   -0.2692307692    0.1250000000    0.1578947368    0.0005060729
  850   -0.2692307692    0.1250000000    0.2105263158    0.0005060729
  851   -0.2692307692    0.1250000000    0.2631578947    0.0005060729
  852   -0.2692307692    0.1250000000    0.3157894737    0.0005060729
  853   -0.2692307692    0.1250000000    0.3684210526    0.0005060729
  854   -0.2692307692    0.1250000000    0.4210526316    0.0005060729
  855   -0.2692307692    0.1250000000    0.4736842105    0.0005060729
  856   -0.2692307692    0.2500000000   -0.4736842105    0.0005060729
  857   -0.2692307692    0.2500000000   -0.4210526316    0.0005060729
  858   -0.2692307692    0.2500000000   -0.3684210526    0.0005060729
  859   -0.2692307692    0.2500000000   -0.3157894737    0.0005060729
  860   -0.2692307692    0.2500000000   -0.2631578947    0.0005060729
  861   -0.2692307692    0.2500000000   -0.2105263158    0.0005060729
  862   -0.2692307692    0.2500000000   -0.1578947368    0.0005060729
  863   -0.2692307692    0.2500000000   -0.1052631579    0.0005060729
  864   -0.2692307692    0.2500000000   -0.0526315789    0.0005060729
  865   -0.2692307692    0.2500000000    0.0000000000    0.0005060729
  866   -0.2692307692    0.2500000000    0.0526315789    0.0005060729
  867   -0.2692307692    0.2500000000    0.1052631579    0.0005060729
  868   -0.2692307692    0.2500000000    0.1578947368    0.0005060729
  869   -0.2692307692    0.2500000000    0.2105263158    0.0005060729
  870   -0.2692307692    0.2500000000    0.2631578947    0.0005060729
  871   -0.2692307692    0.2500000000    0.3157894737    0.0005060729
  872   -0.2692307692    0.2500000000    0.3684210526    0.0005060729
  873   -0.2692307692    0.2500000000    0.4210526316    0.0005060729
  874   -0.2692307692    0.2500000000    0.4736842105    0.0005060729
  875   -0.2692307692    0.3750000000   -0.4736842105    0.0005060729
  876   -0.2692307692    0.3750000000   -0.4210526316    0.0005060729
  877   -0.2692307692    0.3750000000   -0.3684210526    0.0005060729
  878   -0.2692307692    0.3750000000   -0.3157894737    0.0005060729
  879   -0.2692307692    0.3750000000   -0.2631578947    0.0005060729
  880   -0.2692307692    0.3750000000   -0.2105263158    0.0005060729
  881   -0.2692307692    0.3750000000   -0.1578947368    0.0005060729
  882   -0.2692307692    0.3750000000   -0.1052631579    0.0005060729
  883   -0.2692307692    0.3750000000   -0.0526315789    0.0005060729
  884   -0.2692307692    0.3750000000    0.0000000000    0.0005060729
  885   -0.2692307692    0.3750000000    0.0526315789    0.0005060729
  886   -0.2692307692    0.3750000000    0.1052631579    0.0005060729
  887   -0.2692307692    0.3750000000    0.1578947368    0.0005060729
  888   -0.2692307692    0.3750000000    0.2105263158    0.0005060729
  889   -0.2692307692    0.3750000000    0.2631578947    0.0005060729
  890   -0.2692307692    0.3750000000    0.3157894737    0.0005060729
  891   -0.2692307692    0.3750000000    0.3684210526    0.0005060729
  892   -0.2692307692    0.3750000000    0.4210526316    0.0005060729
  893   -0.2692307692    0.3750000000    0.4736842105    0.0005060729
  894   -0.2692307692    0.5000000000   -0.4736842105    0.0005060729
  895   -0.2692307692    0.5000000000   -0.4210526316    0.0005060729
  896   -0.2692307692    0.5000000000   -0.3684210526    0.0005060729
  897   -0.2692307692    0.5000000000   -0.3157894737    0.0005060729
  898   -0.2692307692    0.5000000000   -0.2631578947    0.0005060729
  899   -0.2692307692    0.5000000000   -0.2105263158    0.0005060729
  900   -0.2692307692    0.5000000000   -0.1578947368    0.0005060729
  901   -0.2692307692    0.5000000000   -0.1052631579    0.0005060729
  902   -0.2692307692    0.5000000000   -0.0526315789    0.0005060729
  903   -0.2692307692    0.5000000000    0.0000000000    0.0005060729
  904   -0.2692307692    0.5000000000    0.0526315789    0.0005060729
  905   -0.2692307692    0.5000000000    0.1052631579    0.0005060729
  906   -0.2692307692    0.5000000000    0.1578947368    0.0005060729
  907   -0.2692307692    0.5000000000    0.2105263158    0.0005060729
  908   -0.2692307692    0.5000000000    0.2631578947    0.0005060729
  909   -0.2692307692    0.5000000000    0.3157894737    0.0005060729
  910   -0.2692307692    0.5000000000    0.3684210526    0.0005060729
  911   -0.2692307692    0.5000000000    0.4210526316    0.0005060729
  912   -0.2692307692    0.5000000000    0.4736842105    0.0005060729
  913   -0.2307692308   -0.3750000000   -0.4736842105    0.0005060729
  914   -0.2307692308   -0.3750000000   -0.4210526316    0.0005060729
  915   -0.2307692308   -0.3750000000   -0.3684210526    0.0005060729
  916   -0.2307692308   -0.3750000000   -0.3157894737    0.0005060729
  917   -0.2307692308   -0.3750000000   -0.2631578947    0.0005060729
  918   -0.2307692308   -0.3750000000   -0.2105263158    0.0005060729
  919   -0.2307692308   -0.3750000000   -0.1578947368    0.0005060729
  920   -0.2307692308   -0.3750000000   -0.1052631579    0.0005060729
  921   -0.2307692308   -0.3750000000   -0.0526315789    0.0005060729
  922   -0.2307692308   -0.3750000000    0.0000000000    0.0005060729
  923   -0.2307692308   -0.3750000000    0.0526315789    0.0005060729
  924   -0.2307692308   -0.3750000000    0.1052631579    0.0005060729
  925   -0.2307692308   -0.3750000000    0.1578947368    0.0005060729
  926   -0.2307692308   -0.3750000000    0.2105263158    0.0005060729
  927   -0.2307692308   -0.3750000000    0.2631578947    0.0005060729
  928   -0.2307692308   -0.3750000000    0.3157894737    0.0005060729
  929   -0.2307692308   -0.3750000000    0.3684210526    0.0005060729
  930   -0.2307692308   -0.3750000000    0.4210526316    0.0005060729
  931   -0.2307692308   -0.3750000000    0.4736842105    0.0005060729
  932   -0.2307692308   -0.2500000000   -0.4736842105    0.0005060729
  933   -0.2307692308   -0.2500000000   -0.4210526316    0.0005060729
  934   -0.2307692308   -0.2500000000   -0.3684210526    0.0005060729
  935   -0.2307692308   -0.2500000000   -0.3157894737    0.0005060729
  936   -0.2307692308   -0.2500000000   -0.2631578947    0.0005060729
  937   -0.2307692308   -0.2500000000   -0.2105263158    0.0005060729
  938   -0.2307692308   -0.2500000000   -0.1578947368    0.0005060729
  939   -0.2307692308   -0.2500000000   -0.1052631579    0.0005060729
  940   -0.2307692308   -0.2500000000   -0.0526315789    0.0005060729
  941   -0.2307692308   -0.2500000000    0.0000000000    0.0005060729
  942   -0.2307692308   -0.2500000000    0.0526315789    0.0005060729
  943   -0.2307692308   -0.2500000000    0.1052631579    0.0005060729
  944   -0.2307692308   -0.2500000000    0.1578947368    0.0005060729
  945   -0.2307692308   -0.2500000000    0.2105263158    0.0005060729
  946   -0.2307692308   -0.2500000000    0.2631578947    0.0005060729
  947   -0.2307692308   -0.2500000000    0.3157894737    0.0005060729
  948   -0.2307692308   -0.2500000000    0.3684210526    0.0005060729
  949   -0.2307692308   -0.2500000000    0.4210526316    0.0005060729
  950   -0.2307692308   -0.2500000000    0.4736842105    0.0005060729
  951   -0.2307692308   -0.1250000000   -0.4736842105    0.0005060729
  952   -0.2307692308   -0.1250000000   -0.4210526316    0.0005060729
  953   -0.2307692308   -0.1250000000   -0.3684210526    0.0005060729
  954   -0.2307692308   -0.1250000000   -0.3157894737    0.0005060729
  955   -0.2307692308   -0.1250000000   -0.2631578947    0.0005060729
  956   -0.2307692308   -0.1250000000   -0.2105263158    0.0005060729
  957   -0.2307692308   -0.1250000000   -0.1578947368    0.0005060729
  958   -0.2307692308   -0.1250000000   -0.1052631579    0.0005060729
  959   -0.2307692308   -0.1250000000   -0.0526315789    0.0005060729
  960   -0.2307692308   -0.1250000000    0.0000000000    0.0005060729
  961   -0.2307692308   -0.1250000000    0.0526315789    0.0005060729
  962   -0.2307692308   -0.1250000000    0.1052631579    0.0005060729
  963   -0.2307692308   -0.1250000000    0.1578947368    0.0005060729
  964   -0.2307692308   -0.1250000000    0.2105263158    0.0005060729
  965   -0.2307692308   -0.1250000000    0.2631578947    0.0005060729
  966   -0.2307692308   -0.1250000000    0.3157894737    0.0005060729
  967   -0.2307692308   -0.1250000000    0.3684210526    0.0005060729
  968   -0.2307692308   -0.1250000000    0.4210526316    0.0005060729
  969   -0.2307692308   -0.1250000000    0.4736842105    0.0005060729
  970   -0.2307692308    0.0000000000   -0.4736842105    0.0005060729
  971   -0.2307692308    0.0000000000   -0.4210526316    0.0005060729
  972   -0.2307692308    0.0000000000   -0.3684210526    0.0005060729
  973   -0.2307692308    0.0000000000   -0.3157894737    0.0005060729
  974   -0.2307692308    0.0000000000   -0.2631578947    0.0005060729
  975   -0.2307692308    0.0000000000   -0.2105263158    0.0005060729
  976   -0.2307692308    0.0000000000   -0.1578947368    0.0005060729
  977   -0.2307692308    0.0000000000   -0.1052631579    0.0005060729
  978   -0.2307692308    0.0000000000   -0.0526315789    0.0005060729
  979   -0.2307692308    0.0000000000    0.0000000000    0.0005060729
  980   -0.2307692308    0.0000000000    0.0526315789    0.0005060729
  981   -0.2307692308    0.0000000000    0.1052631579    0.0005060729
  982   -0.2307692308    0.0000000000    0.1578947368    0.0005060729
  983   -0.2307692308    0.0000000000    0.2105263158    0.0005060729
  984   -0.2307692308    0.0000000000    0.2631578947    0.0005060729
  985   -0.2307692308    0.0000000000    0.3157894737    0.0005060729
  986   -0.2307692308    0.0000000000    0.3684210526    0.0005060729
  987   -0.2307692308    0.0000000000    0.4210526316    0.0005060729
  988   -0.2307692308    0.0000000000    0.4736842105    0.0005060729
  989   -0.2307692308    0.1250000000   -0.4736842105    0.0005060729
  990   -0.2307692308    0.1250000000   -0.4210526316    0.0005060729
  991   -0.2307692308    0.1250000000   -0.3684210526    0.0005060729
  992   -0.2307692308    0.1250000000   -0.3157894737    0.0005060729
  993   -0.2307692308    0.1250000000   -0.2631578947    0.0005060729
  994   -0.2307692308    0.1250000000   -0.2105263158    0.0005060729
  995   -0.2307692308    0.1250000000   -0.1578947368    0.0005060729
  996   -0.2307692308    0.1250000000   -0.1052631579    0.0005060729
  997   -0.2307692308    0.1250000000   -0.0526315789    0.0005060729
  998   -0.2307692308    0.1250000000    0.0000000000    0.0005060729
  999   -0.2307692308    0.1250000000    0.0526315789    0.0005060729
 1000   -0.2307692308    0.1250000000    0.1052631579    0.0005060729
 1001   -0.2307692308    0.1250000000    0.1578947368    0.0005060729
 1002   -0.2307692308    0.1250000000    0.2105263158    0.0005060729
 1003   -0.2307692308    0.1250000000    0.2631578947    0.0005060729
 1004   -0.2307692308    0.1250000000    0.3157894737    0.0005060729
 1005   -0.2307692308    0.1250000000    0.3684210526    0.0005060729
 1006   -0.2307692308    0.1250000000    0.4210526316    0.0005060729
 1007   -0.2307692308    0.1250000000    0.4736842105    0.0005060729
 1008   -0.2307692308    0.2500000000   -0.4736842105    0.0005060729
 1009   -0.2307692308    0.2500000000   -0.4210526316    0.0005060729
 1010   -0.2307692308    0.2500000000   -0.3684210526    0.0005060729
 1011   -0.2307692308    0.2500000000   -0.3157894737    0.0005060729
 1012   -0.2307692308    0.2500000000   -0.2631578947    0.0005060729
 1013   -0.2307692308    0.2500000000   -0.2105263158    0.0005060729
 1014   -0.2307692308    0.2500000000   -0.1578947368    0.0005060729
 1015   -0.2307692308    0.2500000000   -0.1052631579    0.0005060729
 1016   -0.2307692308    0.2500000000   -0.0526315789    0.0005060729
 1017   -0.2307692308    0.2500000000    0.0000000000    0.0005060729
 1018   -0.2307692308    0.2500000000    0.0526315789    0.0005060729
 1019   -0.2307692308    0.2500000000    0.1052631579    0.0005060729
 1020   -0.2307692308    0.2500000000    0.1578947368    0.0005060729
 1021   -0.2307692308    0.2500000000    0.2105263158    0.0005060729
 1022   -0.2307692308    0.2500000000    0.2631578947    0.0005060729
 1023   -0.2307692308    0.2500000000    0.3157894737    0.0005060729
 1024   -0.2307692308    0.2500000000    0.3684210526    0.0005060729
 1025   -0.2307692308    0.2500000000    0.4210526316    0.0005060729
 1026   -0.2307692308    0.2500000000    0.4736842105    0.0005060729
 1027   -0.2307692308    0.3750000000   -0.4736842105    0.0005060729
 1028   -0.2307692308    0.3750000000   -0.4210526316    0.0005060729
 1029   -0.2307692308    0.3750000000   -0.3684210526    0.0005060729
 1030   -0.2307692308    0.3750000000   -0.3157894737    0.0005060729
 1031   -0.2307692308    0.3750000000   -0.2631578947    0.0005060729
 1032   -0.2307692308    0.3750000000   -0.2105263158    0.0005060729
 1033   -0.2307692308    0.3750000000   -0.1578947368    0.0005060729
 1034   -0.2307692308    0.3750000000   -0.1052631579    0.0005060729
 1035   -0.2307692308    0.3750000000   -0.0526315789    0.0005060729
 1036   -0.2307692308    0.3750000000    0.0000000000    0.0005060729
 1037   -0.2307692308    0.3750000000    0.0526315789    0.0005060729
 1038   -0.2307692308    0.3750000000    0.1052631579    0.0005060729
 1039   -0.2307692308    0.3750000000    0.1578947368    0.0005060729
 1040   -0.2307692308    0.3750000000    0.2105263158    0.0005060729
 1041   -0.2307692308    0.3750000000    0.2631578947    0.0005060729
 1042   -0.2307692308    0.3750000000    0.3157894737    0.0005060729
 1043   -0.2307692308    0.3750000000    0.3684210526    0.0005060729
 1044   -0.2307692308    0.3750000000    0.4210526316    0.0005060729
 1045   -0.2307692308    0.3750000000    0.4736842105    0.0005060729
 1046   -0.2307692308    0.5000000000   -0.4736842105    0.0005060729
 1047   -0.2307692308    0.5000000000   -0.4210526316    0.0005060729
 1048   -0.2307692308    0.5000000000   -0.3684210526    0.0005060729
 1049   -0.2307692308    0.5000000000   -0.3157894737    0.0005060729
 1050   -0.2307692308    0.5000000000   -0.2631578947    0.0005060729
 1051   -0.2307692308    0.5000000000   -0.2105263158    0.0005060729
 1052   -0.2307692308    0.5000000000   -0.1578947368    0.0005060729
 1053   -0.2307692308    0.5000000000   -0.1052631579    0.0005060729
 1054   -0.2307692308    0.5000000000   -0.0526315789    0.0005060729
 1055   -0.2307692308    0.5000000000    0.0000000000    0.0005060729
 1056   -0.2307692308    0.5000000000    0.0526315789    0.0005060729
 1057   -0.2307692308    0.5000000000    0.1052631579    0.0005060729
 1058   -0.2307692308    0.5000000000    0.1578947368    0.0005060729
 1059   -0.2307692308    0.5000000000    0.2105263158    0.0005060729
 1060   -0.2307692308    0.5000000000    0.2631578947    0.0005060729
 1061   -0.2307692308    0.5000000000    0.3157894737    0.0005060729
 1062   -0.2307692308    0.5000000000    0.3684210526    0.0005060729
 1063   -0.2307692308    0.5000000000    0.4210526316    0.0005060729
 1064   -0.2307692308    0.5000000000    0.4736842105    0.0005060729
 1065   -0.1923076923   -0.3750000000   -0.4736842105    0.0005060729
 1066   -0.1923076923   -0.3750000000   -0.4210526316    0.0005060729
 1067   -0.1923076923   -0.3750000000   -0.3684210526    0.0005060729
 1068   -0.1923076923   -0.3750000000   -0.3157894737    0.0005060729
 1069   -0.1923076923   -0.3750000000   -0.2631578947    0.0005060729
 1070   -0.1923076923   -0.3750000000   -0.2105263158    0.0005060729
 1071   -0.1923076923   -0.3750000000   -0.1578947368    0.0005060729
 1072   -0.1923076923   -0.3750000000   -0.1052631579    0.0005060729
 1073   -0.1923076923   -0.3750000000   -0.0526315789    0.0005060729
 1074   -0.1923076923   -0.3750000000    0.0000000000    0.0005060729
 1075   -0.1923076923   -0.3750000000    0.0526315789    0.0005060729
 1076   -0.1923076923   -0.3750000000    0.1052631579    0.0005060729
 1077   -0.1923076923   -0.3750000000    0.1578947368    0.0005060729
 1078   -0.1923076923   -0.3750000000    0.2105263158    0.0005060729
 1079   -0.1923076923   -0.3750000000    0.2631578947    0.0005060729
 1080   -0.1923076923   -0.3750000000    0.3157894737    0.0005060729
 1081   -0.1923076923   -0.3750000000    0.3684210526    0.0005060729
 1082   -0.1923076923   -0.3750000000    0.4210526316    0.0005060729
 1083   -0.1923076923   -0.3750000000    0.4736842105    0.0005060729
 1084   -0.1923076923   -0.2500000000   -0.4736842105    0.0005060729
 1085   -0.1923076923   -0.2500000000   -0.4210526316    0.0005060729
 1086   -0.1923076923   -0.2500000000   -0.3684210526    0.0005060729
 1087   -0.1923076923   -0.2500000000   -0.3157894737    0.0005060729
 1088   -0.1923076923   -0.2500000000   -0.2631578947    0.0005060729
 1089   -0.1923076923   -0.2500000000   -0.2105263158    0.0005060729
 1090   -0.1923076923   -0.2500000000   -0.1578947368    0.0005060729
 1091   -0.1923076923   -0.2500000000   -0.1052631579    0.0005060729
 1092   -0.1923076923   -0.2500000000   -0.0526315789    0.0005060729
 1093   -0.1923076923   -0.2500000000    0.0000000000    0.0005060729
 1094   -0.1923076923   -0.2500000000    0.0526315789    0.0005060729
 1095   -0.1923076923   -0.2500000000    0.1052631579    0.0005060729
 1096   -0.1923076923   -0.2500000000    0.1578947368    0.0005060729
 1097   -0.1923076923   -0.2500000000    0.2105263158    0.0005060729
 1098   -0.1923076923   -0.2500000000    0.2631578947    0.0005060729
 1099   -0.1923076923   -0.2500000000    0.3157894737    0.0005060729
 1100   -0.1923076923   -0.2500000000    0.3684210526    0.0005060729
 1101   -0.1923076923   -0.2500000000    0.4210526316    0.0005060729
 1102   -0.1923076923   -0.2500000000    0.4736842105    0.0005060729
 1103   -0.1923076923   -0.1250000000   -0.4736842105    0.0005060729
 1104   -0.1923076923   -0.1250000000   -0.4210526316    0.0005060729
 1105   -0.1923076923   -0.1250000000   -0.3684210526    0.0005060729
 1106   -0.1923076923   -0.1250000000   -0.3157894737    0.0005060729
 1107   -0.1923076923   -0.1250000000   -0.2631578947    0.0005060729
 1108   -0.1923076923   -0.1250000000   -0.2105263158    0.0005060729
 1109   -0.1923076923   -0.1250000000   -0.1578947368    0.0005060729
 1110   -0.1923076923   -0.1250000000   -0.1052631579    0.0005060729
 1111   -0.1923076923   -0.1250000000   -0.0526315789    0.0005060729
 1112   -0.1923076923   -0.1250000000    0.0000000000    0.0005060729
 1113   -0.1923076923   -0.1250000000    0.0526315789    0.0005060729
 1114   -0.1923076923   -0.1250000000    0.1052631579    0.0005060729
 1115   -0.1923076923   -0.1250000000    0.1578947368    0.0005060729
 1116   -0.1923076923   -0.1250000000    0.2105263158    0.0005060729
 1117   -0.1923076923   -0.1250000000    0.2631578947    0.0005060729
 1118   -0.1923076923   -0.1250000000    0.3157894737    0.0005060729
 1119   -0.1923076923   -0.1250000000    0.3684210526    0.0005060729
 1120   -0.1923076923   -0.1250000000    0.4210526316    0.0005060729
 1121   -0.1923076923   -0.1250000000    0.4736842105    0.0005060729
 1122   -0.1923076923    0.0000000000   -0.4736842105    0.0005060729
 1123   -0.1923076923    0.0000000000   -0.4210526316    0.0005060729
 1124   -0.1923076923    0.0000000000   -0.3684210526    0.0005060729
 1125   -0.1923076923    0.0000000000   -0.3157894737    0.0005060729
 1126   -0.1923076923    0.0000000000   -0.2631578947    0.0005060729
 1127   -0.1923076923    0.0000000000   -0.2105263158    0.0005060729
 1128   -0.1923076923    0.0000000000   -0.1578947368    0.0005060729
 1129   -0.1923076923    0.0000000000   -0.1052631579    0.0005060729
 1130   -0.1923076923    0.0000000000   -0.0526315789    0.0005060729
 1131   -0.1923076923    0.0000000000    0.0000000000    0.0005060729
 1132   -0.1923076923    0.0000000000    0.0526315789    0.0005060729
 1133   -0.1923076923    0.0000000000    0.1052631579    0.0005060729
 1134   -0.1923076923    0.0000000000    0.1578947368    0.0005060729
 1135   -0.1923076923    0.0000000000    0.2105263158    0.0005060729
 1136   -0.1923076923    0.0000000000    0.2631578947    0.0005060729
 1137   -0.1923076923    0.0000000000    0.3157894737    0.0005060729
 1138   -0.1923076923    0.0000000000    0.3684210526    0.0005060729
 1139   -0.1923076923    0.0000000000    0.4210526316    0.0005060729
 1140   -0.1923076923    0.0000000000    0.4736842105    0.0005060729
 1141   -0.1923076923    0.1250000000   -0.4736842105    0.0005060729
 1142   -0.1923076923    0.1250000000   -0.4210526316    0.0005060729
 1143   -0.1923076923    0.1250000000   -0.3684210526    0.0005060729
 1144   -0.1923076923    0.1250000000   -0.3157894737    0.0005060729
 1145   -0.1923076923    0.1250000000   -0.2631578947    0.0005060729
 1146   -0.1923076923    0.1250000000   -0.2105263158    0.0005060729
 1147   -0.1923076923    0.1250000000   -0.1578947368    0.0005060729
 1148   -0.1923076923    0.1250000000   -0.1052631579    0.0005060729
 1149   -0.1923076923    0.1250000000   -0.0526315789    0.0005060729
 1150   -0.1923076923    0.1250000000    0.0000000000    0.0005060729
 1151   -0.1923076923    0.1250000000    0.0526315789    0.0005060729
 1152   -0.1923076923    0.1250000000    0.1052631579    0.0005060729
 1153   -0.1923076923    0.1250000000    0.1578947368    0.0005060729
 1154   -0.1923076923    0.1250000000    0.2105263158    0.0005060729
 1155   -0.1923076923    0.1250000000    0.2631578947    0.0005060729
 1156   -0.1923076923    0.1250000000    0.3157894737    0.0005060729
 1157   -0.1923076923    0.1250000000    0.3684210526    0.0005060729
 1158   -0.1923076923    0.1250000000    0.4210526316    0.0005060729
 1159   -0.1923076923    0.1250000000    0.4736842105    0.0005060729
 1160   -0.1923076923    0.2500000000   -0.4736842105    0.0005060729
 1161   -0.1923076923    0.2500000000   -0.4210526316    0.0005060729
 1162   -0.1923076923    0.2500000000   -0.3684210526    0.0005060729
 1163   -0.1923076923    0.2500000000   -0.3157894737    0.0005060729
 1164   -0.1923076923    0.2500000000   -0.2631578947    0.0005060729
 1165   -0.1923076923    0.2500000000   -0.2105263158    0.0005060729
 1166   -0.1923076923    0.2500000000   -0.1578947368    0.0005060729
 1167   -0.1923076923    0.2500000000   -0.1052631579    0.0005060729
 1168   -0.1923076923    0.2500000000   -0.0526315789    0.0005060729
 1169   -0.1923076923    0.2500000000    0.0000000000    0.0005060729
 1170   -0.1923076923    0.2500000000    0.0526315789    0.0005060729
 1171   -0.1923076923    0.2500000000    0.1052631579    0.0005060729
 1172   -0.1923076923    0.2500000000    0.1578947368    0.0005060729
 1173   -0.1923076923    0.2500000000    0.2105263158    0.0005060729
 1174   -0.1923076923    0.2500000000    0.2631578947    0.0005060729
 1175   -0.1923076923    0.2500000000    0.3157894737    0.0005060729
 1176   -0.1923076923    0.2500000000    0.3684210526    0.0005060729
 1177   -0.1923076923    0.2500000000    0.4210526316    0.0005060729
 1178   -0.1923076923    0.2500000000    0.4736842105    0.0005060729
 1179   -0.1923076923    0.3750000000   -0.4736842105    0.0005060729
 1180   -0.1923076923    0.3750000000   -0.4210526316    0.0005060729
 1181   -0.1923076923    0.3750000000   -0.3684210526    0.0005060729
 1182   -0.1923076923    0.3750000000   -0.3157894737    0.0005060729
 1183   -0.1923076923    0.3750000000   -0.2631578947    0.0005060729
 1184   -0.1923076923    0.3750000000   -0.2105263158    0.0005060729
 1185   -0.1923076923    0.3750000000   -0.1578947368    0.0005060729
 1186   -0.1923076923    0.3750000000   -0.1052631579    0.0005060729
 1187   -0.1923076923    0.3750000000   -0.0526315789    0.0005060729
 1188   -0.1923076923    0.3750000000    0.0000000000    0.0005060729
 1189   -0.1923076923    0.3750000000    0.0526315789    0.0005060729
 1190   -0.1923076923    0.3750000000    0.1052631579    0.0005060729
 1191   -0.1923076923    0.3750000000    0.1578947368    0.0005060729
 1192   -0.1923076923    0.3750000000    0.2105263158    0.0005060729
 1193   -0.1923076923    0.3750000000    0.2631578947    0.0005060729
 1194   -0.1923076923    0.3750000000    0.3157894737    0.0005060729
 1195   -0.1923076923    0.3750000000    0.3684210526    0.0005060729
 1196   -0.1923076923    0.3750000000    0.4210526316    0.0005060729
 1197   -0.1923076923    0.3750000000    0.4736842105    0.0005060729
 1198   -0.1923076923    0.5000000000   -0.4736842105    0.0005060729
 1199   -0.1923076923    0.5000000000   -0.4210526316    0.0005060729
 1200   -0.1923076923    0.5000000000   -0.3684210526    0.0005060729
 1201   -0.1923076923    0.5000000000   -0.3157894737    0.0005060729
 1202   -0.1923076923    0.5000000000   -0.2631578947    0.0005060729
 1203   -0.1923076923    0.5000000000   -0.2105263158    0.0005060729
 1204   -0.1923076923    0.5000000000   -0.1578947368    0.0005060729
 1205   -0.1923076923    0.5000000000   -0.1052631579    0.0005060729
 1206   -0.1923076923    0.5000000000   -0.0526315789    0.0005060729
 1207   -0.1923076923    0.5000000000    0.0000000000    0.0005060729
 1208   -0.1923076923    0.5000000000    0.0526315789    0.0005060729
 1209   -0.1923076923    0.5000000000    0.1052631579    0.0005060729
 1210   -0.1923076923    0.5000000000    0.1578947368    0.0005060729
 1211   -0.1923076923    0.5000000000    0.2105263158    0.0005060729
 1212   -0.1923076923    0.5000000000    0.2631578947    0.0005060729
 1213   -0.1923076923    0.5000000000    0.3157894737    0.0005060729
 1214   -0.1923076923    0.5000000000    0.3684210526    0.0005060729
 1215   -0.1923076923    0.5000000000    0.4210526316    0.0005060729
 1216   -0.1923076923    0.5000000000    0.4736842105    0.0005060729
 1217   -0.1538461538   -0.3750000000   -0.4736842105    0.0005060729
 1218   -0.1538461538   -0.3750000000   -0.4210526316    0.0005060729
 1219   -0.1538461538   -0.3750000000   -0.3684210526    0.0005060729
 1220   -0.1538461538   -0.3750000000   -0.3157894737    0.0005060729
 1221   -0.1538461538   -0.3750000000   -0.2631578947    0.0005060729
 1222   -0.1538461538   -0.3750000000   -0.2105263158    0.0005060729
 1223   -0.1538461538   -0.3750000000   -0.1578947368    0.0005060729
 1224   -0.1538461538   -0.3750000000   -0.1052631579    0.0005060729
 1225   -0.1538461538   -0.3750000000   -0.0526315789    0.0005060729
 1226   -0.1538461538   -0.3750000000    0.0000000000    0.0005060729
 1227   -0.1538461538   -0.3750000000    0.0526315789    0.0005060729
 1228   -0.1538461538   -0.3750000000    0.1052631579    0.0005060729
 1229   -0.1538461538   -0.3750000000    0.1578947368    0.0005060729
 1230   -0.1538461538   -0.3750000000    0.2105263158    0.0005060729
 1231   -0.1538461538   -0.3750000000    0.2631578947    0.0005060729
 1232   -0.1538461538   -0.3750000000    0.3157894737    0.0005060729
 1233   -0.1538461538   -0.3750000000    0.3684210526    0.0005060729
 1234   -0.1538461538   -0.3750000000    0.4210526316    0.0005060729
 1235   -0.1538461538   -0.3750000000    0.4736842105    0.0005060729
 1236   -0.1538461538   -0.2500000000   -0.4736842105    0.0005060729
 1237   -0.1538461538   -0.2500000000   -0.4210526316    0.0005060729
 1238   -0.1538461538   -0.2500000000   -0.3684210526    0.0005060729
 1239   -0.1538461538   -0.2500000000   -0.3157894737    0.0005060729
 1240   -0.1538461538   -0.2500000000   -0.2631578947    0.0005060729
 1241   -0.1538461538   -0.2500000000   -0.2105263158    0.0005060729
 1242   -0.1538461538   -0.2500000000   -0.1578947368    0.0005060729
 1243   -0.1538461538   -0.2500000000   -0.1052631579    0.0005060729
 1244   -0.1538461538   -0.2500000000   -0.0526315789    0.0005060729
 1245   -0.1538461538   -0.2500000000    0.0000000000    0.0005060729
 1246   -0.1538461538   -0.2500000000    0.0526315789    0.0005060729
 1247   -0.1538461538   -0.2500000000    0.1052631579    0.0005060729
 1248   -0.1538461538   -0.2500000000    0.1578947368    0.0005060729
 1249   -0.1538461538   -0.2500000000    0.2105263158    0.0005060729
 1250   -0.1538461538   -0.2500000000    0.2631578947    0.0005060729
 1251   -0.1538461538   -0.2500000000    0.3157894737    0.0005060729
 1252   -0.1538461538   -0.2500000000    0.3684210526    0.0005060729
 1253   -0.1538461538   -0.2500000000    0.4210526316    0.0005060729
 1254   -0.1538461538   -0.2500000000    0.4736842105    0.0005060729
 1255   -0.1538461538   -0.1250000000   -0.4736842105    0.0005060729
 1256   -0.1538461538   -0.1250000000   -0.4210526316    0.0005060729
 1257   -0.1538461538   -0.1250000000   -0.3684210526    0.0005060729
 1258   -0.1538461538   -0.1250000000   -0.3157894737    0.0005060729
 1259   -0.1538461538   -0.1250000000   -0.2631578947    0.0005060729
 1260   -0.1538461538   -0.1250000000   -0.2105263158    0.0005060729
 1261   -0.1538461538   -0.1250000000   -0.1578947368    0.0005060729
 1262   -0.1538461538   -0.1250000000   -0.1052631579    0.0005060729
 1263   -0.1538461538   -0.1250000000   -0.0526315789    0.0005060729
 1264   -0.1538461538   -0.1250000000    0.0000000000    0.0005060729
 1265   -0.1538461538   -0.1250000000    0.0526315789    0.0005060729
 1266   -0.1538461538   -0.1250000000    0.1052631579    0.0005060729
 1267   -0.1538461538   -0.1250000000    0.1578947368    0.0005060729
 1268   -0.1538461538   -0.1250000000    0.2105263158    0.0005060729
 1269   -0.1538461538   -0.1250000000    0.2631578947    0.0005060729
 1270   -0.1538461538   -0.1250000000    0.3157894737    0.0005060729
 1271   -0.1538461538   -0.1250000000    0.3684210526    0.0005060729
 1272   -0.1538461538   -0.1250000000    0.4210526316    0.0005060729
 1273   -0.1538461538   -0.1250000000    0.4736842105    0.0005060729
 1274   -0.1538461538    0.0000000000   -0.4736842105    0.0005060729
 1275   -0.1538461538    0.0000000000   -0.4210526316    0.0005060729
 1276   -0.1538461538    0.0000000000   -0.3684210526    0.0005060729
 1277   -0.1538461538    0.0000000000   -0.3157894737    0.0005060729
 1278   -0.1538461538    0.0000000000   -0.2631578947    0.0005060729
 1279   -0.1538461538    0.0000000000   -0.2105263158    0.0005060729
 1280   -0.1538461538    0.0000000000   -0.1578947368    0.0005060729
 1281   -0.1538461538    0.0000000000   -0.1052631579    0.0005060729
 1282   -0.1538461538    0.0000000000   -0.0526315789    0.0005060729
 1283   -0.1538461538    0.0000000000    0.0000000000    0.0005060729
 1284   -0.1538461538    0.0000000000    0.0526315789    0.0005060729
 1285   -0.1538461538    0.0000000000    0.1052631579    0.0005060729
 1286   -0.1538461538    0.0000000000    0.1578947368    0.0005060729
 1287   -0.1538461538    0.0000000000    0.2105263158    0.0005060729
 1288   -0.1538461538    0.0000000000    0.2631578947    0.0005060729
 1289   -0.1538461538    0.0000000000    0.3157894737    0.0005060729
 1290   -0.1538461538    0.0000000000    0.3684210526    0.0005060729
 1291   -0.1538461538    0.0000000000    0.4210526316    0.0005060729
 1292   -0.1538461538    0.0000000000    0.4736842105    0.0005060729
 1293   -0.1538461538    0.1250000000   -0.4736842105    0.0005060729
 1294   -0.1538461538    0.1250000000   -0.4210526316    0.0005060729
 1295   -0.1538461538    0.1250000000   -0.3684210526    0.0005060729
 1296   -0.1538461538    0.1250000000   -0.3157894737    0.0005060729
 1297   -0.1538461538    0.1250000000   -0.2631578947    0.0005060729
 1298   -0.1538461538    0.1250000000   -0.2105263158    0.0005060729
 1299   -0.1538461538    0.1250000000   -0.1578947368    0.0005060729
 1300   -0.1538461538    0.1250000000   -0.1052631579    0.0005060729
 1301   -0.1538461538    0.1250000000   -0.0526315789    0.0005060729
 1302   -0.1538461538    0.1250000000    0.0000000000    0.0005060729
 1303   -0.1538461538    0.1250000000    0.0526315789    0.0005060729
 1304   -0.1538461538    0.1250000000    0.1052631579    0.0005060729
 1305   -0.1538461538    0.1250000000    0.1578947368    0.0005060729
 1306   -0.1538461538    0.1250000000    0.2105263158    0.0005060729
 1307   -0.1538461538    0.1250000000    0.2631578947    0.0005060729
 1308   -0.1538461538    0.1250000000    0.3157894737    0.0005060729
 1309   -0.1538461538    0.1250000000    0.3684210526    0.0005060729
 1310   -0.1538461538    0.1250000000    0.4210526316    0.0005060729
 1311   -0.1538461538    0.1250000000    0.4736842105    0.0005060729
 1312   -0.1538461538    0.2500000000   -0.4736842105    0.0005060729
 1313   -0.1538461538    0.2500000000   -0.4210526316    0.0005060729
 1314   -0.1538461538    0.2500000000   -0.3684210526    0.0005060729
 1315   -0.1538461538    0.2500000000   -0.3157894737    0.0005060729
 1316   -0.1538461538    0.2500000000   -0.2631578947    0.0005060729
 1317   -0.1538461538    0.2500000000   -0.2105263158    0.0005060729
 1318   -0.1538461538    0.2500000000   -0.1578947368    0.0005060729
 1319   -0.1538461538    0.2500000000   -0.1052631579    0.0005060729
 1320   -0.1538461538    0.2500000000   -0.0526315789    0.0005060729
 1321   -0.1538461538    0.2500000000    0.0000000000    0.0005060729
 1322   -0.1538461538    0.2500000000    0.0526315789    0.0005060729
 1323   -0.1538461538    0.2500000000    0.1052631579    0.0005060729
 1324   -0.1538461538    0.2500000000    0.1578947368    0.0005060729
 1325   -0.1538461538    0.2500000000    0.2105263158    0.0005060729
 1326   -0.1538461538    0.2500000000    0.2631578947    0.0005060729
 1327   -0.1538461538    0.2500000000    0.3157894737    0.0005060729
 1328   -0.1538461538    0.2500000000    0.3684210526    0.0005060729
 1329   -0.1538461538    0.2500000000    0.4210526316    0.0005060729
 1330   -0.1538461538    0.2500000000    0.4736842105    0.0005060729
 1331   -0.1538461538    0.3750000000   -0.4736842105    0.0005060729
 1332   -0.1538461538    0.3750000000   -0.4210526316    0.0005060729
 1333   -0.1538461538    0.3750000000   -0.3684210526    0.0005060729
 1334   -0.1538461538    0.3750000000   -0.3157894737    0.0005060729
 1335   -0.1538461538    0.3750000000   -0.2631578947    0.0005060729
 1336   -0.1538461538    0.3750000000   -0.2105263158    0.0005060729
 1337   -0.1538461538    0.3750000000   -0.1578947368    0.0005060729
 1338   -0.1538461538    0.3750000000   -0.1052631579    0.0005060729
 1339   -0.1538461538    0.3750000000   -0.0526315789    0.0005060729
 1340   -0.1538461538    0.3750000000    0.0000000000    0.0005060729
 1341   -0.1538461538    0.3750000000    0.0526315789    0.0005060729
 1342   -0.1538461538    0.3750000000    0.1052631579    0.0005060729
 1343   -0.1538461538    0.3750000000    0.1578947368    0.0005060729
 1344   -0.1538461538    0.3750000000    0.2105263158    0.0005060729
 1345   -0.1538461538    0.3750000000    0.2631578947    0.0005060729
 1346   -0.1538461538    0.3750000000    0.3157894737    0.0005060729
 1347   -0.1538461538    0.3750000000    0.3684210526    0.0005060729
 1348   -0.1538461538    0.3750000000    0.4210526316    0.0005060729
 1349   -0.1538461538    0.3750000000    0.4736842105    0.0005060729
 1350   -0.1538461538    0.5000000000   -0.4736842105    0.0005060729
 1351   -0.1538461538    0.5000000000   -0.4210526316    0.0005060729
 1352   -0.1538461538    0.5000000000   -0.3684210526    0.0005060729
 1353   -0.1538461538    0.5000000000   -0.3157894737    0.0005060729
 1354   -0.1538461538    0.5000000000   -0.2631578947    0.0005060729
 1355   -0.1538461538    0.5000000000   -0.2105263158    0.0005060729
 1356   -0.1538461538    0.5000000000   -0.1578947368    0.0005060729
 1357   -0.1538461538    0.5000000000   -0.1052631579    0.0005060729
 1358   -0.1538461538    0.5000000000   -0.0526315789    0.0005060729
 1359   -0.1538461538    0.5000000000    0.0000000000    0.0005060729
 1360   -0.1538461538    0.5000000000    0.0526315789    0.0005060729
 1361   -0.1538461538    0.5000000000    0.1052631579    0.0005060729
 1362   -0.1538461538    0.5000000000    0.1578947368    0.0005060729
 1363   -0.1538461538    0.5000000000    0.2105263158    0.0005060729
 1364   -0.1538461538    0.5000000000    0.2631578947    0.0005060729
 1365   -0.1538461538    0.5000000000    0.3157894737    0.0005060729
 1366   -0.1538461538    0.5000000000    0.3684210526    0.0005060729
 1367   -0.1538461538    0.5000000000    0.4210526316    0.0005060729
 1368   -0.1538461538    0.5000000000    0.4736842105    0.0005060729
 1369   -0.1153846154   -0.3750000000   -0.4736842105    0.0005060729
 1370   -0.1153846154   -0.3750000000   -0.4210526316    0.0005060729
 1371   -0.1153846154   -0.3750000000   -0.3684210526    0.0005060729
 1372   -0.1153846154   -0.3750000000   -0.3157894737    0.0005060729
 1373   -0.1153846154   -0.3750000000   -0.2631578947    0.0005060729
 1374   -0.1153846154   -0.3750000000   -0.2105263158    0.0005060729
 1375   -0.1153846154   -0.3750000000   -0.1578947368    0.0005060729
 1376   -0.1153846154   -0.3750000000   -0.1052631579    0.0005060729
 1377   -0.1153846154   -0.3750000000   -0.0526315789    0.0005060729
 1378   -0.1153846154   -0.3750000000    0.0000000000    0.0005060729
 1379   -0.1153846154   -0.3750000000    0.0526315789    0.0005060729
 1380   -0.1153846154   -0.3750000000    0.1052631579    0.0005060729
 1381   -0.1153846154   -0.3750000000    0.1578947368    0.0005060729
 1382   -0.1153846154   -0.3750000000    0.2105263158    0.0005060729
 1383   -0.1153846154   -0.3750000000    0.2631578947    0.0005060729
 1384   -0.1153846154   -0.3750000000    0.3157894737    0.0005060729
 1385   -0.1153846154   -0.3750000000    0.3684210526    0.0005060729
 1386   -0.1153846154   -0.3750000000    0.4210526316    0.0005060729
 1387   -0.1153846154   -0.3750000000    0.4736842105    0.0005060729
 1388   -0.1153846154   -0.2500000000   -0.4736842105    0.0005060729
 1389   -0.1153846154   -0.2500000000   -0.4210526316    0.0005060729
 1390   -0.1153846154   -0.2500000000   -0.3684210526    0.0005060729
 1391   -0.1153846154   -0.2500000000   -0.3157894737    0.0005060729
 1392   -0.1153846154   -0.2500000000   -0.2631578947    0.0005060729
 1393   -0.1153846154   -0.2500000000   -0.2105263158    0.0005060729
 1394   -0.1153846154   -0.2500000000   -0.1578947368    0.0005060729
 1395   -0.1153846154   -0.2500000000   -0.1052631579    0.0005060729
 1396   -0.1153846154   -0.2500000000   -0.0526315789    0.0005060729
 1397   -0.1153846154   -0.2500000000    0.0000000000    0.0005060729
 1398   -0.1153846154   -0.2500000000    0.0526315789    0.0005060729
 1399   -0.1153846154   -0.2500000000    0.1052631579    0.0005060729
 1400   -0.1153846154   -0.2500000000    0.1578947368    0.0005060729
 1401   -0.1153846154   -0.2500000000    0.2105263158    0.0005060729
 1402   -0.1153846154   -0.2500000000    0.2631578947    0.0005060729
 1403   -0.1153846154   -0.2500000000    0.3157894737    0.0005060729
 1404   -0.1153846154   -0.2500000000    0.3684210526    0.0005060729
 1405   -0.1153846154   -0.2500000000    0.4210526316    0.0005060729
 1406   -0.1153846154   -0.2500000000    0.4736842105    0.0005060729
 1407   -0.1153846154   -0.1250000000   -0.4736842105    0.0005060729
 1408   -0.1153846154   -0.1250000000   -0.4210526316    0.0005060729
 1409   -0.1153846154   -0.1250000000   -0.3684210526    0.0005060729
 1410   -0.1153846154   -0.1250000000   -0.3157894737    0.0005060729
 1411   -0.1153846154   -0.1250000000   -0.2631578947    0.0005060729
 1412   -0.1153846154   -0.1250000000   -0.2105263158    0.0005060729
 1413   -0.1153846154   -0.1250000000   -0.1578947368    0.0005060729
 1414   -0.1153846154   -0.1250000000   -0.1052631579    0.0005060729
 1415   -0.1153846154   -0.1250000000   -0.0526315789    0.0005060729
 1416   -0.1153846154   -0.1250000000    0.0000000000    0.0005060729
 1417   -0.1153846154   -0.1250000000    0.0526315789    0.0005060729
 1418   -0.1153846154   -0.1250000000    0.1052631579    0.0005060729
 1419   -0.1153846154   -0.1250000000    0.1578947368    0.0005060729
 1420   -0.1153846154   -0.1250000000    0.2105263158    0.0005060729
 1421   -0.1153846154   -0.1250000000    0.2631578947    0.0005060729
 1422   -0.1153846154   -0.1250000000    0.3157894737    0.0005060729
 1423   -0.1153846154   -0.1250000000    0.3684210526    0.0005060729
 1424   -0.1153846154   -0.1250000000    0.4210526316    0.0005060729
 1425   -0.1153846154   -0.1250000000    0.4736842105    0.0005060729
 1426   -0.1153846154    0.0000000000   -0.4736842105    0.0005060729
 1427   -0.1153846154    0.0000000000   -0.4210526316    0.0005060729
 1428   -0.1153846154    0.0000000000   -0.3684210526    0.0005060729
 1429   -0.1153846154    0.0000000000   -0.3157894737    0.0005060729
 1430   -0.1153846154    0.0000000000   -0.2631578947    0.0005060729
 1431   -0.1153846154    0.0000000000   -0.2105263158    0.0005060729
 1432   -0.1153846154    0.0000000000   -0.1578947368    0.0005060729
 1433   -0.1153846154    0.0000000000   -0.1052631579    0.0005060729
 1434   -0.1153846154    0.0000000000   -0.0526315789    0.0005060729
 1435   -0.1153846154    0.0000000000    0.0000000000    0.0005060729
 1436   -0.1153846154    0.0000000000    0.0526315789    0.0005060729
 1437   -0.1153846154    0.0000000000    0.1052631579    0.0005060729
 1438   -0.1153846154    0.0000000000    0.1578947368    0.0005060729
 1439   -0.1153846154    0.0000000000    0.2105263158    0.0005060729
 1440   -0.1153846154    0.0000000000    0.2631578947    0.0005060729
 1441   -0.1153846154    0.0000000000    0.3157894737    0.0005060729
 1442   -0.1153846154    0.0000000000    0.3684210526    0.0005060729
 1443   -0.1153846154    0.0000000000    0.4210526316    0.0005060729
 1444   -0.1153846154    0.0000000000    0.4736842105    0.0005060729
 1445   -0.1153846154    0.1250000000   -0.4736842105    0.0005060729
 1446   -0.1153846154    0.1250000000   -0.4210526316    0.0005060729
 1447   -0.1153846154    0.1250000000   -0.3684210526    0.0005060729
 1448   -0.1153846154    0.1250000000   -0.3157894737    0.0005060729
 1449   -0.1153846154    0.1250000000   -0.2631578947    0.0005060729
 1450   -0.1153846154    0.1250000000   -0.2105263158    0.0005060729
 1451   -0.1153846154    0.1250000000   -0.1578947368    0.0005060729
 1452   -0.1153846154    0.1250000000   -0.1052631579    0.0005060729
 1453   -0.1153846154    0.1250000000   -0.0526315789    0.0005060729
 1454   -0.1153846154    0.1250000000    0.0000000000    0.0005060729
 1455   -0.1153846154    0.1250000000    0.0526315789    0.0005060729
 1456   -0.1153846154    0.1250000000    0.1052631579    0.0005060729
 1457   -0.1153846154    0.1250000000    0.1578947368    0.0005060729
 1458   -0.1153846154    0.1250000000    0.2105263158    0.0005060729
 1459   -0.1153846154    0.1250000000    0.2631578947    0.0005060729
 1460   -0.1153846154    0.1250000000    0.3157894737    0.0005060729
 1461   -0.1153846154    0.1250000000    0.3684210526    0.0005060729
 1462   -0.1153846154    0.1250000000    0.4210526316    0.0005060729
 1463   -0.1153846154    0.1250000000    0.4736842105    0.0005060729
 1464   -0.1153846154    0.2500000000   -0.4736842105    0.0005060729
 1465   -0.1153846154    0.2500000000   -0.4210526316    0.0005060729
 1466   -0.1153846154    0.2500000000   -0.3684210526    0.0005060729
 1467   -0.1153846154    0.2500000000   -0.3157894737    0.0005060729
 1468   -0.1153846154    0.2500000000   -0.2631578947    0.0005060729
 1469   -0.1153846154    0.2500000000   -0.2105263158    0.0005060729
 1470   -0.1153846154    0.2500000000   -0.1578947368    0.0005060729
 1471   -0.1153846154    0.2500000000   -0.1052631579    0.0005060729
 1472   -0.1153846154    0.2500000000   -0.0526315789    0.0005060729
 1473   -0.1153846154    0.2500000000    0.0000000000    0.0005060729
 1474   -0.1153846154    0.2500000000    0.0526315789    0.0005060729
 1475   -0.1153846154    0.2500000000    0.1052631579    0.0005060729
 1476   -0.1153846154    0.2500000000    0.1578947368    0.0005060729
 1477   -0.1153846154    0.2500000000    0.2105263158    0.0005060729
 1478   -0.1153846154    0.2500000000    0.2631578947    0.0005060729
 1479   -0.1153846154    0.2500000000    0.3157894737    0.0005060729
 1480   -0.1153846154    0.2500000000    0.3684210526    0.0005060729
 1481   -0.1153846154    0.2500000000    0.4210526316    0.0005060729
 1482   -0.1153846154    0.2500000000    0.4736842105    0.0005060729
 1483   -0.1153846154    0.3750000000   -0.4736842105    0.0005060729
 1484   -0.1153846154    0.3750000000   -0.4210526316    0.0005060729
 1485   -0.1153846154    0.3750000000   -0.3684210526    0.0005060729
 1486   -0.1153846154    0.3750000000   -0.3157894737    0.0005060729
 1487   -0.1153846154    0.3750000000   -0.2631578947    0.0005060729
 1488   -0.1153846154    0.3750000000   -0.2105263158    0.0005060729
 1489   -0.1153846154    0.3750000000   -0.1578947368    0.0005060729
 1490   -0.1153846154    0.3750000000   -0.1052631579    0.0005060729
 1491   -0.1153846154    0.3750000000   -0.0526315789    0.0005060729
 1492   -0.1153846154    0.3750000000    0.0000000000    0.0005060729
 1493   -0.1153846154    0.3750000000    0.0526315789    0.0005060729
 1494   -0.1153846154    0.3750000000    0.1052631579    0.0005060729
 1495   -0.1153846154    0.3750000000    0.1578947368    0.0005060729
 1496   -0.1153846154    0.3750000000    0.2105263158    0.0005060729
 1497   -0.1153846154    0.3750000000    0.2631578947    0.0005060729
 1498   -0.1153846154    0.3750000000    0.3157894737    0.0005060729
 1499   -0.1153846154    0.3750000000    0.3684210526    0.0005060729
 1500   -0.1153846154    0.3750000000    0.4210526316    0.0005060729
 1501   -0.1153846154    0.3750000000    0.4736842105    0.0005060729
 1502   -0.1153846154    0.5000000000   -0.4736842105    0.0005060729
 1503   -0.1153846154    0.5000000000   -0.4210526316    0.0005060729
 1504   -0.1153846154    0.5000000000   -0.3684210526    0.0005060729
 1505   -0.1153846154    0.5000000000   -0.3157894737    0.0005060729
 1506   -0.1153846154    0.5000000000   -0.2631578947    0.0005060729
 1507   -0.1153846154    0.5000000000   -0.2105263158    0.0005060729
 1508   -0.1153846154    0.5000000000   -0.1578947368    0.0005060729
 1509   -0.1153846154    0.5000000000   -0.1052631579    0.0005060729
 1510   -0.1153846154    0.5000000000   -0.0526315789    0.0005060729
 1511   -0.1153846154    0.5000000000    0.0000000000    0.0005060729
 1512   -0.1153846154    0.5000000000    0.0526315789    0.0005060729
 1513   -0.1153846154    0.5000000000    0.1052631579    0.0005060729
 1514   -0.1153846154    0.5000000000    0.1578947368    0.0005060729
 1515   -0.1153846154    0.5000000000    0.2105263158    0.0005060729
 1516   -0.1153846154    0.5000000000    0.2631578947    0.0005060729
 1517   -0.1153846154    0.5000000000    0.3157894737    0.0005060729
 1518   -0.1153846154    0.5000000000    0.3684210526    0.0005060729
 1519   -0.1153846154    0.5000000000    0.4210526316    0.0005060729
 1520   -0.1153846154    0.5000000000    0.4736842105    0.0005060729
 1521   -0.0769230769   -0.3750000000   -0.4736842105    0.0005060729
 1522   -0.0769230769   -0.3750000000   -0.4210526316    0.0005060729
 1523   -0.0769230769   -0.3750000000   -0.3684210526    0.0005060729
 1524   -0.0769230769   -0.3750000000   -0.3157894737    0.0005060729
 1525   -0.0769230769   -0.3750000000   -0.2631578947    0.0005060729
 1526   -0.0769230769   -0.3750000000   -0.2105263158    0.0005060729
 1527   -0.0769230769   -0.3750000000   -0.1578947368    0.0005060729
 1528   -0.0769230769   -0.3750000000   -0.1052631579    0.0005060729
 1529   -0.0769230769   -0.3750000000   -0.0526315789    0.0005060729
 1530   -0.0769230769   -0.3750000000    0.0000000000    0.0005060729
 1531   -0.0769230769   -0.3750000000    0.0526315789    0.0005060729
 1532   -0.0769230769   -0.3750000000    0.1052631579    0.0005060729
 1533   -0.0769230769   -0.3750000000    0.1578947368    0.0005060729
 1534   -0.0769230769   -0.3750000000    0.2105263158    0.0005060729
 1535   -0.0769230769   -0.3750000000    0.2631578947    0.0005060729
 1536   -0.0769230769   -0.3750000000    0.3157894737    0.0005060729
 1537   -0.0769230769   -0.3750000000    0.3684210526    0.0005060729
 1538   -0.0769230769   -0.3750000000    0.4210526316    0.0005060729
 1539   -0.0769230769   -0.3750000000    0.4736842105    0.0005060729
 1540   -0.0769230769   -0.2500000000   -0.4736842105    0.0005060729
 1541   -0.0769230769   -0.2500000000   -0.4210526316    0.0005060729
 1542   -0.0769230769   -0.2500000000   -0.3684210526    0.0005060729
 1543   -0.0769230769   -0.2500000000   -0.3157894737    0.0005060729
 1544   -0.0769230769   -0.2500000000   -0.2631578947    0.0005060729
 1545   -0.0769230769   -0.2500000000   -0.2105263158    0.0005060729
 1546   -0.0769230769   -0.2500000000   -0.1578947368    0.0005060729
 1547   -0.0769230769   -0.2500000000   -0.1052631579    0.0005060729
 1548   -0.0769230769   -0.2500000000   -0.0526315789    0.0005060729
 1549   -0.0769230769   -0.2500000000    0.0000000000    0.0005060729
 1550   -0.0769230769   -0.2500000000    0.0526315789    0.0005060729
 1551   -0.0769230769   -0.2500000000    0.1052631579    0.0005060729
 1552   -0.0769230769   -0.2500000000    0.1578947368    0.0005060729
 1553   -0.0769230769   -0.2500000000    0.2105263158    0.0005060729
 1554   -0.0769230769   -0.2500000000    0.2631578947    0.0005060729
 1555   -0.0769230769   -0.2500000000    0.3157894737    0.0005060729
 1556   -0.0769230769   -0.2500000000    0.3684210526    0.0005060729
 1557   -0.0769230769   -0.2500000000    0.4210526316    0.0005060729
 1558   -0.0769230769   -0.2500000000    0.4736842105    0.0005060729
 1559   -0.0769230769   -0.1250000000   -0.4736842105    0.0005060729
 1560   -0.0769230769   -0.1250000000   -0.4210526316    0.0005060729
 1561   -0.0769230769   -0.1250000000   -0.3684210526    0.0005060729
 1562   -0.0769230769   -0.1250000000   -0.3157894737    0.0005060729
 1563   -0.0769230769   -0.1250000000   -0.2631578947    0.0005060729
 1564   -0.0769230769   -0.1250000000   -0.2105263158    0.0005060729
 1565   -0.0769230769   -0.1250000000   -0.1578947368    0.0005060729
 1566   -0.0769230769   -0.1250000000   -0.1052631579    0.0005060729
 1567   -0.0769230769   -0.1250000000   -0.0526315789    0.0005060729
 1568   -0.0769230769   -0.1250000000    0.0000000000    0.0005060729
 1569   -0.0769230769   -0.1250000000    0.0526315789    0.0005060729
 1570   -0.0769230769   -0.1250000000    0.1052631579    0.0005060729
 1571   -0.0769230769   -0.1250000000    0.1578947368    0.0005060729
 1572   -0.0769230769   -0.1250000000    0.2105263158    0.0005060729
 1573   -0.0769230769   -0.1250000000    0.2631578947    0.0005060729
 1574   -0.0769230769   -0.1250000000    0.3157894737    0.0005060729
 1575   -0.0769230769   -0.1250000000    0.3684210526    0.0005060729
 1576   -0.0769230769   -0.1250000000    0.4210526316    0.0005060729
 1577   -0.0769230769   -0.1250000000    0.4736842105    0.0005060729
 1578   -0.0769230769    0.0000000000   -0.4736842105    0.0005060729
 1579   -0.0769230769    0.0000000000   -0.4210526316    0.0005060729
 1580   -0.0769230769    0.0000000000   -0.3684210526    0.0005060729
 1581   -0.0769230769    0.0000000000   -0.3157894737    0.0005060729
 1582   -0.0769230769    0.0000000000   -0.2631578947    0.0005060729
 1583   -0.0769230769    0.0000000000   -0.2105263158    0.0005060729
 1584   -0.0769230769    0.0000000000   -0.1578947368    0.0005060729
 1585   -0.0769230769    0.0000000000   -0.1052631579    0.0005060729
 1586   -0.0769230769    0.0000000000   -0.0526315789    0.0005060729
 1587   -0.0769230769    0.0000000000    0.0000000000    0.0005060729
 1588   -0.0769230769    0.0000000000    0.0526315789    0.0005060729
 1589   -0.0769230769    0.0000000000    0.1052631579    0.0005060729
 1590   -0.0769230769    0.0000000000    0.1578947368    0.0005060729
 1591   -0.0769230769    0.0000000000    0.2105263158    0.0005060729
 1592   -0.0769230769    0.0000000000    0.2631578947    0.0005060729
 1593   -0.0769230769    0.0000000000    0.3157894737    0.0005060729
 1594   -0.0769230769    0.0000000000    0.3684210526    0.0005060729
 1595   -0.0769230769    0.0000000000    0.4210526316    0.0005060729
 1596   -0.0769230769    0.0000000000    0.4736842105    0.0005060729
 1597   -0.0769230769    0.1250000000   -0.4736842105    0.0005060729
 1598   -0.0769230769    0.1250000000   -0.4210526316    0.0005060729
 1599   -0.0769230769    0.1250000000   -0.3684210526    0.0005060729
 1600   -0.0769230769    0.1250000000   -0.3157894737    0.0005060729
 1601   -0.0769230769    0.1250000000   -0.2631578947    0.0005060729
 1602   -0.0769230769    0.1250000000   -0.2105263158    0.0005060729
 1603   -0.0769230769    0.1250000000   -0.1578947368    0.0005060729
 1604   -0.0769230769    0.1250000000   -0.1052631579    0.0005060729
 1605   -0.0769230769    0.1250000000   -0.0526315789    0.0005060729
 1606   -0.0769230769    0.1250000000    0.0000000000    0.0005060729
 1607   -0.0769230769    0.1250000000    0.0526315789    0.0005060729
 1608   -0.0769230769    0.1250000000    0.1052631579    0.0005060729
 1609   -0.0769230769    0.1250000000    0.1578947368    0.0005060729
 1610   -0.0769230769    0.1250000000    0.2105263158    0.0005060729
 1611   -0.0769230769    0.1250000000    0.2631578947    0.0005060729
 1612   -0.0769230769    0.1250000000    0.3157894737    0.0005060729
 1613   -0.0769230769    0.1250000000    0.3684210526    0.0005060729
 1614   -0.0769230769    0.1250000000    0.4210526316    0.0005060729
 1615   -0.0769230769    0.1250000000    0.4736842105    0.0005060729
 1616   -0.0769230769    0.2500000000   -0.4736842105    0.0005060729
 1617   -0.0769230769    0.2500000000   -0.4210526316    0.0005060729
 1618   -0.0769230769    0.2500000000   -0.3684210526    0.0005060729
 1619   -0.0769230769    0.2500000000   -0.3157894737    0.0005060729
 1620   -0.0769230769    0.2500000000   -0.2631578947    0.0005060729
 1621   -0.0769230769    0.2500000000   -0.2105263158    0.0005060729
 1622   -0.0769230769    0.2500000000   -0.1578947368    0.0005060729
 1623   -0.0769230769    0.2500000000   -0.1052631579    0.0005060729
 1624   -0.0769230769    0.2500000000   -0.0526315789    0.0005060729
 1625   -0.0769230769    0.2500000000    0.0000000000    0.0005060729
 1626   -0.0769230769    0.2500000000    0.0526315789    0.0005060729
 1627   -0.0769230769    0.2500000000    0.1052631579    0.0005060729
 1628   -0.0769230769    0.2500000000    0.1578947368    0.0005060729
 1629   -0.0769230769    0.2500000000    0.2105263158    0.0005060729
 1630   -0.0769230769    0.2500000000    0.2631578947    0.0005060729
 1631   -0.0769230769    0.2500000000    0.3157894737    0.0005060729
 1632   -0.0769230769    0.2500000000    0.3684210526    0.0005060729
 1633   -0.0769230769    0.2500000000    0.4210526316    0.0005060729
 1634   -0.0769230769    0.2500000000    0.4736842105    0.0005060729
 1635   -0.0769230769    0.3750000000   -0.4736842105    0.0005060729
 1636   -0.0769230769    0.3750000000   -0.4210526316    0.0005060729
 1637   -0.0769230769    0.3750000000   -0.3684210526    0.0005060729
 1638   -0.0769230769    0.3750000000   -0.3157894737    0.0005060729
 1639   -0.0769230769    0.3750000000   -0.2631578947    0.0005060729
 1640   -0.0769230769    0.3750000000   -0.2105263158    0.0005060729
 1641   -0.0769230769    0.3750000000   -0.1578947368    0.0005060729
 1642   -0.0769230769    0.3750000000   -0.1052631579    0.0005060729
 1643   -0.0769230769    0.3750000000   -0.0526315789    0.0005060729
 1644   -0.0769230769    0.3750000000    0.0000000000    0.0005060729
 1645   -0.0769230769    0.3750000000    0.0526315789    0.0005060729
 1646   -0.0769230769    0.3750000000    0.1052631579    0.0005060729
 1647   -0.0769230769    0.3750000000    0.1578947368    0.0005060729
 1648   -0.0769230769    0.3750000000    0.2105263158    0.0005060729
 1649   -0.0769230769    0.3750000000    0.2631578947    0.0005060729
 1650   -0.0769230769    0.3750000000    0.3157894737    0.0005060729
 1651   -0.0769230769    0.3750000000    0.3684210526    0.0005060729
 1652   -0.0769230769    0.3750000000    0.4210526316    0.0005060729
 1653   -0.0769230769    0.3750000000    0.4736842105    0.0005060729
 1654   -0.0769230769    0.5000000000   -0.4736842105    0.0005060729
 1655   -0.0769230769    0.5000000000   -0.4210526316    0.0005060729
 1656   -0.0769230769    0.5000000000   -0.3684210526    0.0005060729
 1657   -0.0769230769    0.5000000000   -0.3157894737    0.0005060729
 1658   -0.0769230769    0.5000000000   -0.2631578947    0.0005060729
 1659   -0.0769230769    0.5000000000   -0.2105263158    0.0005060729
 1660   -0.0769230769    0.5000000000   -0.1578947368    0.0005060729
 1661   -0.0769230769    0.5000000000   -0.1052631579    0.0005060729
 1662   -0.0769230769    0.5000000000   -0.0526315789    0.0005060729
 1663   -0.0769230769    0.5000000000    0.0000000000    0.0005060729
 1664   -0.0769230769    0.5000000000    0.0526315789    0.0005060729
 1665   -0.0769230769    0.5000000000    0.1052631579    0.0005060729
 1666   -0.0769230769    0.5000000000    0.1578947368    0.0005060729
 1667   -0.0769230769    0.5000000000    0.2105263158    0.0005060729
 1668   -0.0769230769    0.5000000000    0.2631578947    0.0005060729
 1669   -0.0769230769    0.5000000000    0.3157894737    0.0005060729
 1670   -0.0769230769    0.5000000000    0.3684210526    0.0005060729
 1671   -0.0769230769    0.5000000000    0.4210526316    0.0005060729
 1672   -0.0769230769    0.5000000000    0.4736842105    0.0005060729
 1673   -0.0384615385   -0.3750000000   -0.4736842105    0.0005060729
 1674   -0.0384615385   -0.3750000000   -0.4210526316    0.0005060729
 1675   -0.0384615385   -0.3750000000   -0.3684210526    0.0005060729
 1676   -0.0384615385   -0.3750000000   -0.3157894737    0.0005060729
 1677   -0.0384615385   -0.3750000000   -0.2631578947    0.0005060729
 1678   -0.0384615385   -0.3750000000   -0.2105263158    0.0005060729
 1679   -0.0384615385   -0.3750000000   -0.1578947368    0.0005060729
 1680   -0.0384615385   -0.3750000000   -0.1052631579    0.0005060729
 1681   -0.0384615385   -0.3750000000   -0.0526315789    0.0005060729
 1682   -0.0384615385   -0.3750000000    0.0000000000    0.0005060729
 1683   -0.0384615385   -0.3750000000    0.0526315789    0.0005060729
 1684   -0.0384615385   -0.3750000000    0.1052631579    0.0005060729
 1685   -0.0384615385   -0.3750000000    0.1578947368    0.0005060729
 1686   -0.0384615385   -0.3750000000    0.2105263158    0.0005060729
 1687   -0.0384615385   -0.3750000000    0.2631578947    0.0005060729
 1688   -0.0384615385   -0.3750000000    0.3157894737    0.0005060729
 1689   -0.0384615385   -0.3750000000    0.3684210526    0.0005060729
 1690   -0.0384615385   -0.3750000000    0.4210526316    0.0005060729
 1691   -0.0384615385   -0.3750000000    0.4736842105    0.0005060729
 1692   -0.0384615385   -0.2500000000   -0.4736842105    0.0005060729
 1693   -0.0384615385   -0.2500000000   -0.4210526316    0.0005060729
 1694   -0.0384615385   -0.2500000000   -0.3684210526    0.0005060729
 1695   -0.0384615385   -0.2500000000   -0.3157894737    0.0005060729
 1696   -0.0384615385   -0.2500000000   -0.2631578947    0.0005060729
 1697   -0.0384615385   -0.2500000000   -0.2105263158    0.0005060729
 1698   -0.0384615385   -0.2500000000   -0.1578947368    0.0005060729
 1699   -0.0384615385   -0.2500000000   -0.1052631579    0.0005060729
 1700   -0.0384615385   -0.2500000000   -0.0526315789    0.0005060729
 1701   -0.0384615385   -0.2500000000    0.0000000000    0.0005060729
 1702   -0.0384615385   -0.2500000000    0.0526315789    0.0005060729
 1703   -0.0384615385   -0.2500000000    0.1052631579    0.0005060729
 1704   -0.0384615385   -0.2500000000    0.1578947368    0.0005060729
 1705   -0.0384615385   -0.2500000000    0.2105263158    0.0005060729
 1706   -0.0384615385   -0.2500000000    0.2631578947    0.0005060729
 1707   -0.0384615385   -0.2500000000    0.3157894737    0.0005060729
 1708   -0.0384615385   -0.2500000000    0.3684210526    0.0005060729
 1709   -0.0384615385   -0.2500000000    0.4210526316    0.0005060729
 1710   -0.0384615385   -0.2500000000    0.4736842105    0.0005060729
 1711   -0.0384615385   -0.1250000000   -0.4736842105    0.0005060729
 1712   -0.0384615385   -0.1250000000   -0.4210526316    0.0005060729
 1713   -0.0384615385   -0.1250000000   -0.3684210526    0.0005060729
 1714   -0.0384615385   -0.1250000000   -0.3157894737    0.0005060729
 1715   -0.0384615385   -0.1250000000   -0.2631578947    0.0005060729
 1716   -0.0384615385   -0.1250000000   -0.2105263158    0.0005060729
 1717   -0.0384615385   -0.1250000000   -0.1578947368    0.0005060729
 1718   -0.0384615385   -0.1250000000   -0.1052631579    0.0005060729
 1719   -0.0384615385   -0.1250000000   -0.0526315789    0.0005060729
 1720   -0.0384615385   -0.1250000000    0.0000000000    0.0005060729
 1721   -0.0384615385   -0.1250000000    0.0526315789    0.0005060729
 1722   -0.0384615385   -0.1250000000    0.1052631579    0.0005060729
 1723   -0.0384615385   -0.1250000000    0.1578947368    0.0005060729
 1724   -0.0384615385   -0.1250000000    0.2105263158    0.0005060729
 1725   -0.0384615385   -0.1250000000    0.2631578947    0.0005060729
 1726   -0.0384615385   -0.1250000000    0.3157894737    0.0005060729
 1727   -0.0384615385   -0.1250000000    0.3684210526    0.0005060729
 1728   -0.0384615385   -0.1250000000    0.4210526316    0.0005060729
 1729   -0.0384615385   -0.1250000000    0.4736842105    0.0005060729
 1730   -0.0384615385    0.0000000000   -0.4736842105    0.0005060729
 1731   -0.0384615385    0.0000000000   -0.4210526316    0.0005060729
 1732   -0.0384615385    0.0000000000   -0.3684210526    0.0005060729
 1733   -0.0384615385    0.0000000000   -0.3157894737    0.0005060729
 1734   -0.0384615385    0.0000000000   -0.2631578947    0.0005060729
 1735   -0.0384615385    0.0000000000   -0.2105263158    0.0005060729
 1736   -0.0384615385    0.0000000000   -0.1578947368    0.0005060729
 1737   -0.0384615385    0.0000000000   -0.1052631579    0.0005060729
 1738   -0.0384615385    0.0000000000   -0.0526315789    0.0005060729
 1739   -0.0384615385    0.0000000000    0.0000000000    0.0005060729
 1740   -0.0384615385    0.0000000000    0.0526315789    0.0005060729
 1741   -0.0384615385    0.0000000000    0.1052631579    0.0005060729
 1742   -0.0384615385    0.0000000000    0.1578947368    0.0005060729
 1743   -0.0384615385    0.0000000000    0.2105263158    0.0005060729
 1744   -0.0384615385    0.0000000000    0.2631578947    0.0005060729
 1745   -0.0384615385    0.0000000000    0.3157894737    0.0005060729
 1746   -0.0384615385    0.0000000000    0.3684210526    0.0005060729
 1747   -0.0384615385    0.0000000000    0.4210526316    0.0005060729
 1748   -0.0384615385    0.0000000000    0.4736842105    0.0005060729
 1749   -0.0384615385    0.1250000000   -0.4736842105    0.0005060729
 1750   -0.0384615385    0.1250000000   -0.4210526316    0.0005060729
 1751   -0.0384615385    0.1250000000   -0.3684210526    0.0005060729
 1752   -0.0384615385    0.1250000000   -0.3157894737    0.0005060729
 1753   -0.0384615385    0.1250000000   -0.2631578947    0.0005060729
 1754   -0.0384615385    0.1250000000   -0.2105263158    0.0005060729
 1755   -0.0384615385    0.1250000000   -0.1578947368    0.0005060729
 1756   -0.0384615385    0.1250000000   -0.1052631579    0.0005060729
 1757   -0.0384615385    0.1250000000   -0.0526315789    0.0005060729
 1758   -0.0384615385    0.1250000000    0.0000000000    0.0005060729
 1759   -0.0384615385    0.1250000000    0.0526315789    0.0005060729
 1760   -0.0384615385    0.1250000000    0.1052631579    0.0005060729
 1761   -0.0384615385    0.1250000000    0.1578947368    0.0005060729
 1762   -0.0384615385    0.1250000000    0.2105263158    0.0005060729
 1763   -0.0384615385    0.1250000000    0.2631578947    0.0005060729
 1764   -0.0384615385    0.1250000000    0.3157894737    0.0005060729
 1765   -0.0384615385    0.1250000000    0.3684210526    0.0005060729
 1766   -0.0384615385    0.1250000000    0.4210526316    0.0005060729
 1767   -0.0384615385    0.1250000000    0.4736842105    0.0005060729
 1768   -0.0384615385    0.2500000000   -0.4736842105    0.0005060729
 1769   -0.0384615385    0.2500000000   -0.4210526316    0.0005060729
 1770   -0.0384615385    0.2500000000   -0.3684210526    0.0005060729
 1771   -0.0384615385    0.2500000000   -0.3157894737    0.0005060729
 1772   -0.0384615385    0.2500000000   -0.2631578947    0.0005060729
 1773   -0.0384615385    0.2500000000   -0.2105263158    0.0005060729
 1774   -0.0384615385    0.2500000000   -0.1578947368    0.0005060729
 1775   -0.0384615385    0.2500000000   -0.1052631579    0.0005060729
 1776   -0.0384615385    0.2500000000   -0.0526315789    0.0005060729
 1777   -0.0384615385    0.2500000000    0.0000000000    0.0005060729
 1778   -0.0384615385    0.2500000000    0.0526315789    0.0005060729
 1779   -0.0384615385    0.2500000000    0.1052631579    0.0005060729
 1780   -0.0384615385    0.2500000000    0.1578947368    0.0005060729
 1781   -0.0384615385    0.2500000000    0.2105263158    0.0005060729
 1782   -0.0384615385    0.2500000000    0.2631578947    0.0005060729
 1783   -0.0384615385    0.2500000000    0.3157894737    0.0005060729
 1784   -0.0384615385    0.2500000000    0.3684210526    0.0005060729
 1785   -0.0384615385    0.2500000000    0.4210526316    0.0005060729
 1786   -0.0384615385    0.2500000000    0.4736842105    0.0005060729
 1787   -0.0384615385    0.3750000000   -0.4736842105    0.0005060729
 1788   -0.0384615385    0.3750000000   -0.4210526316    0.0005060729
 1789   -0.0384615385    0.3750000000   -0.3684210526    0.0005060729
 1790   -0.0384615385    0.3750000000   -0.3157894737    0.0005060729
 1791   -0.0384615385    0.3750000000   -0.2631578947    0.0005060729
 1792   -0.0384615385    0.3750000000   -0.2105263158    0.0005060729
 1793   -0.0384615385    0.3750000000   -0.1578947368    0.0005060729
 1794   -0.0384615385    0.3750000000   -0.1052631579    0.0005060729
 1795   -0.0384615385    0.3750000000   -0.0526315789    0.0005060729
 1796   -0.0384615385    0.3750000000    0.0000000000    0.0005060729
 1797   -0.0384615385    0.3750000000    0.0526315789    0.0005060729
 1798   -0.0384615385    0.3750000000    0.1052631579    0.0005060729
 1799   -0.0384615385    0.3750000000    0.1578947368    0.0005060729
 1800   -0.0384615385    0.3750000000    0.2105263158    0.0005060729
 1801   -0.0384615385    0.3750000000    0.2631578947    0.0005060729
 1802   -0.0384615385    0.3750000000    0.3157894737    0.0005060729
 1803   -0.0384615385    0.3750000000    0.3684210526    0.0005060729
 1804   -0.0384615385    0.3750000000    0.4210526316    0.0005060729
 1805   -0.0384615385    0.3750000000    0.4736842105    0.0005060729
 1806   -0.0384615385    0.5000000000   -0.4736842105    0.0005060729
 1807   -0.0384615385    0.5000000000   -0.4210526316    0.0005060729
 1808   -0.0384615385    0.5000000000   -0.3684210526    0.0005060729
 1809   -0.0384615385    0.5000000000   -0.3157894737    0.0005060729
 1810   -0.0384615385    0.5000000000   -0.2631578947    0.0005060729
 1811   -0.0384615385    0.5000000000   -0.2105263158    0.0005060729
 1812   -0.0384615385    0.5000000000   -0.1578947368    0.0005060729
 1813   -0.0384615385    0.5000000000   -0.1052631579    0.0005060729
 1814   -0.0384615385    0.5000000000   -0.0526315789    0.0005060729
 1815   -0.0384615385    0.5000000000    0.0000000000    0.0005060729
 1816   -0.0384615385    0.5000000000    0.0526315789    0.0005060729
 1817   -0.0384615385    0.5000000000    0.1052631579    0.0005060729
 1818   -0.0384615385    0.5000000000    0.1578947368    0.0005060729
 1819   -0.0384615385    0.5000000000    0.2105263158    0.0005060729
 1820   -0.0384615385    0.5000000000    0.2631578947    0.0005060729
 1821   -0.0384615385    0.5000000000    0.3157894737    0.0005060729
 1822   -0.0384615385    0.5000000000    0.3684210526    0.0005060729
 1823   -0.0384615385    0.5000000000    0.4210526316    0.0005060729
 1824   -0.0384615385    0.5000000000    0.4736842105    0.0005060729
 1825    0.0000000000   -0.3750000000   -0.4736842105    0.0005060729
 1826    0.0000000000   -0.3750000000   -0.4210526316    0.0005060729
 1827    0.0000000000   -0.3750000000   -0.3684210526    0.0005060729
 1828    0.0000000000   -0.3750000000   -0.3157894737    0.0005060729
 1829    0.0000000000   -0.3750000000   -0.2631578947    0.0005060729
 1830    0.0000000000   -0.3750000000   -0.2105263158    0.0005060729
 1831    0.0000000000   -0.3750000000   -0.1578947368    0.0005060729
 1832    0.0000000000   -0.3750000000   -0.1052631579    0.0005060729
 1833    0.0000000000   -0.3750000000   -0.0526315789    0.0005060729
 1834    0.0000000000   -0.3750000000    0.0000000000    0.0005060729
 1835    0.0000000000   -0.3750000000    0.0526315789    0.0005060729
 1836    0.0000000000   -0.3750000000    0.1052631579    0.0005060729
 1837    0.0000000000   -0.3750000000    0.1578947368    0.0005060729
 1838    0.0000000000   -0.3750000000    0.2105263158    0.0005060729
 1839    0.0000000000   -0.3750000000    0.2631578947    0.0005060729
 1840    0.0000000000   -0.3750000000    0.3157894737    0.0005060729
 1841    0.0000000000   -0.3750000000    0.3684210526    0.0005060729
 1842    0.0000000000   -0.3750000000    0.4210526316    0.0005060729
 1843    0.0000000000   -0.3750000000    0.4736842105    0.0005060729
 1844    0.0000000000   -0.2500000000   -0.4736842105    0.0005060729
 1845    0.0000000000   -0.2500000000   -0.4210526316    0.0005060729
 1846    0.0000000000   -0.2500000000   -0.3684210526    0.0005060729
 1847    0.0000000000   -0.2500000000   -0.3157894737    0.0005060729
 1848    0.0000000000   -0.2500000000   -0.2631578947    0.0005060729
 1849    0.0000000000   -0.2500000000   -0.2105263158    0.0005060729
 1850    0.0000000000   -0.2500000000   -0.1578947368    0.0005060729
 1851    0.0000000000   -0.2500000000   -0.1052631579    0.0005060729
 1852    0.0000000000   -0.2500000000   -0.0526315789    0.0005060729
 1853    0.0000000000   -0.2500000000    0.0000000000    0.0005060729
 1854    0.0000000000   -0.2500000000    0.0526315789    0.0005060729
 1855    0.0000000000   -0.2500000000    0.1052631579    0.0005060729
 1856    0.0000000000   -0.2500000000    0.1578947368    0.0005060729
 1857    0.0000000000   -0.2500000000    0.2105263158    0.0005060729
 1858    0.0000000000   -0.2500000000    0.2631578947    0.0005060729
 1859    0.0000000000   -0.2500000000    0.3157894737    0.0005060729
 1860    0.0000000000   -0.2500000000    0.3684210526    0.0005060729
 1861    0.0000000000   -0.2500000000    0.4210526316    0.0005060729
 1862    0.0000000000   -0.2500000000    0.4736842105    0.0005060729
 1863    0.0000000000   -0.1250000000   -0.4736842105    0.0005060729
 1864    0.0000000000   -0.1250000000   -0.4210526316    0.0005060729
 1865    0.0000000000   -0.1250000000   -0.3684210526    0.0005060729
 1866    0.0000000000   -0.1250000000   -0.3157894737    0.0005060729
 1867    0.0000000000   -0.1250000000   -0.2631578947    0.0005060729
 1868    0.0000000000   -0.1250000000   -0.2105263158    0.0005060729
 1869    0.0000000000   -0.1250000000   -0.1578947368    0.0005060729
 1870    0.0000000000   -0.1250000000   -0.1052631579    0.0005060729
 1871    0.0000000000   -0.1250000000   -0.0526315789    0.0005060729
 1872    0.0000000000   -0.1250000000    0.0000000000    0.0005060729
 1873    0.0000000000   -0.1250000000    0.0526315789    0.0005060729
 1874    0.0000000000   -0.1250000000    0.1052631579    0.0005060729
 1875    0.0000000000   -0.1250000000    0.1578947368    0.0005060729
 1876    0.0000000000   -0.1250000000    0.2105263158    0.0005060729
 1877    0.0000000000   -0.1250000000    0.2631578947    0.0005060729
 1878    0.0000000000   -0.1250000000    0.3157894737    0.0005060729
 1879    0.0000000000   -0.1250000000    0.3684210526    0.0005060729
 1880    0.0000000000   -0.1250000000    0.4210526316    0.0005060729
 1881    0.0000000000   -0.1250000000    0.4736842105    0.0005060729
 1882    0.0000000000    0.0000000000   -0.4736842105    0.0005060729
 1883    0.0000000000    0.0000000000   -0.4210526316    0.0005060729
 1884    0.0000000000    0.0000000000   -0.3684210526    0.0005060729
 1885    0.0000000000    0.0000000000   -0.3157894737    0.0005060729
 1886    0.0000000000    0.0000000000   -0.2631578947    0.0005060729
 1887    0.0000000000    0.0000000000   -0.2105263158    0.0005060729
 1888    0.0000000000    0.0000000000   -0.1578947368    0.0005060729
 1889    0.0000000000    0.0000000000   -0.1052631579    0.0005060729
 1890    0.0000000000    0.0000000000   -0.0526315789    0.0005060729
 1891    0.0000000000    0.0000000000    0.0000000000    0.0002530364
 1892    0.0000000000    0.5000000000   -0.4736842105    0.0005060729
 1893    0.0000000000    0.5000000000   -0.4210526316    0.0005060729
 1894    0.0000000000    0.5000000000   -0.3684210526    0.0005060729
 1895    0.0000000000    0.5000000000   -0.3157894737    0.0005060729
 1896    0.0000000000    0.5000000000   -0.2631578947    0.0005060729
 1897    0.0000000000    0.5000000000   -0.2105263158    0.0005060729
 1898    0.0000000000    0.5000000000   -0.1578947368    0.0005060729
 1899    0.0000000000    0.5000000000   -0.1052631579    0.0005060729
 1900    0.0000000000    0.5000000000   -0.0526315789    0.0005060729
 1901    0.0000000000    0.5000000000    0.0000000000    0.0002530364
 1902    0.5000000000   -0.3750000000   -0.4736842105    0.0005060729
 1903    0.5000000000   -0.3750000000   -0.4210526316    0.0005060729
 1904    0.5000000000   -0.3750000000   -0.3684210526    0.0005060729
 1905    0.5000000000   -0.3750000000   -0.3157894737    0.0005060729
 1906    0.5000000000   -0.3750000000   -0.2631578947    0.0005060729
 1907    0.5000000000   -0.3750000000   -0.2105263158    0.0005060729
 1908    0.5000000000   -0.3750000000   -0.1578947368    0.0005060729
 1909    0.5000000000   -0.3750000000   -0.1052631579    0.0005060729
 1910    0.5000000000   -0.3750000000   -0.0526315789    0.0005060729
 1911    0.5000000000   -0.3750000000    0.0000000000    0.0005060729
 1912    0.5000000000   -0.3750000000    0.0526315789    0.0005060729
 1913    0.5000000000   -0.3750000000    0.1052631579    0.0005060729
 1914    0.5000000000   -0.3750000000    0.1578947368    0.0005060729
 1915    0.5000000000   -0.3750000000    0.2105263158    0.0005060729
 1916    0.5000000000   -0.3750000000    0.2631578947    0.0005060729
 1917    0.5000000000   -0.3750000000    0.3157894737    0.0005060729
 1918    0.5000000000   -0.3750000000    0.3684210526    0.0005060729
 1919    0.5000000000   -0.3750000000    0.4210526316    0.0005060729
 1920    0.5000000000   -0.3750000000    0.4736842105    0.0005060729
 1921    0.5000000000   -0.2500000000   -0.4736842105    0.0005060729
 1922    0.5000000000   -0.2500000000   -0.4210526316    0.0005060729
 1923    0.5000000000   -0.2500000000   -0.3684210526    0.0005060729
 1924    0.5000000000   -0.2500000000   -0.3157894737    0.0005060729
 1925    0.5000000000   -0.2500000000   -0.2631578947    0.0005060729
 1926    0.5000000000   -0.2500000000   -0.2105263158    0.0005060729
 1927    0.5000000000   -0.2500000000   -0.1578947368    0.0005060729
 1928    0.5000000000   -0.2500000000   -0.1052631579    0.0005060729
 1929    0.5000000000   -0.2500000000   -0.0526315789    0.0005060729
 1930    0.5000000000   -0.2500000000    0.0000000000    0.0005060729
 1931    0.5000000000   -0.2500000000    0.0526315789    0.0005060729
 1932    0.5000000000   -0.2500000000    0.1052631579    0.0005060729
 1933    0.5000000000   -0.2500000000    0.1578947368    0.0005060729
 1934    0.5000000000   -0.2500000000    0.2105263158    0.0005060729
 1935    0.5000000000   -0.2500000000    0.2631578947    0.0005060729
 1936    0.5000000000   -0.2500000000    0.3157894737    0.0005060729
 1937    0.5000000000   -0.2500000000    0.3684210526    0.0005060729
 1938    0.5000000000   -0.2500000000    0.4210526316    0.0005060729
 1939    0.5000000000   -0.2500000000    0.4736842105    0.0005060729
 1940    0.5000000000   -0.1250000000   -0.4736842105    0.0005060729
 1941    0.5000000000   -0.1250000000   -0.4210526316    0.0005060729
 1942    0.5000000000   -0.1250000000   -0.3684210526    0.0005060729
 1943    0.5000000000   -0.1250000000   -0.3157894737    0.0005060729
 1944    0.5000000000   -0.1250000000   -0.2631578947    0.0005060729
 1945    0.5000000000   -0.1250000000   -0.2105263158    0.0005060729
 1946    0.5000000000   -0.1250000000   -0.1578947368    0.0005060729
 1947    0.5000000000   -0.1250000000   -0.1052631579    0.0005060729
 1948    0.5000000000   -0.1250000000   -0.0526315789    0.0005060729
 1949    0.5000000000   -0.1250000000    0.0000000000    0.0005060729
 1950    0.5000000000   -0.1250000000    0.0526315789    0.0005060729
 1951    0.5000000000   -0.1250000000    0.1052631579    0.0005060729
 1952    0.5000000000   -0.1250000000    0.1578947368    0.0005060729
 1953    0.5000000000   -0.1250000000    0.2105263158    0.0005060729
 1954    0.5000000000   -0.1250000000    0.2631578947    0.0005060729
 1955    0.5000000000   -0.1250000000    0.3157894737    0.0005060729
 1956    0.5000000000   -0.1250000000    0.3684210526    0.0005060729
 1957    0.5000000000   -0.1250000000    0.4210526316    0.0005060729
 1958    0.5000000000   -0.1250000000    0.4736842105    0.0005060729
 1959    0.5000000000    0.0000000000   -0.4736842105    0.0005060729
 1960    0.5000000000    0.0000000000   -0.4210526316    0.0005060729
 1961    0.5000000000    0.0000000000   -0.3684210526    0.0005060729
 1962    0.5000000000    0.0000000000   -0.3157894737    0.0005060729
 1963    0.5000000000    0.0000000000   -0.2631578947    0.0005060729
 1964    0.5000000000    0.0000000000   -0.2105263158    0.0005060729
 1965    0.5000000000    0.0000000000   -0.1578947368    0.0005060729
 1966    0.5000000000    0.0000000000   -0.1052631579    0.0005060729
 1967    0.5000000000    0.0000000000   -0.0526315789    0.0005060729
 1968    0.5000000000    0.0000000000    0.0000000000    0.0002530364
 1969    0.5000000000    0.5000000000   -0.4736842105    0.0005060729
 1970    0.5000000000    0.5000000000   -0.4210526316    0.0005060729
 1971    0.5000000000    0.5000000000   -0.3684210526    0.0005060729
 1972    0.5000000000    0.5000000000   -0.3157894737    0.0005060729
 1973    0.5000000000    0.5000000000   -0.2631578947    0.0005060729
 1974    0.5000000000    0.5000000000   -0.2105263158    0.0005060729
 1975    0.5000000000    0.5000000000   -0.1578947368    0.0005060729
 1976    0.5000000000    0.5000000000   -0.1052631579    0.0005060729
 1977    0.5000000000    0.5000000000   -0.0526315789    0.0005060729
 1978    0.5000000000    0.5000000000    0.0000000000    0.0002530364
================================================================================


============================ local K-points summary ============================
Number |               Cartesian coordinates              |       Weight
  1      0.5030651351      0.0000000000     -0.3443840786      0.0005060729
  2      0.5030651351      0.0000000000     -0.3061191810      0.0005060729
  3      0.5030651351      0.0000000000     -0.2678542834      0.0005060729
  4      0.5030651351      0.0000000000     -0.2295893858      0.0005060729
  5      0.5030651351      0.0000000000     -0.1913244881      0.0005060729
  6      0.5030651351      0.0000000000     -0.1530595905      0.0005060729
  7      0.5030651351      0.0000000000     -0.1147946929      0.0005060729
  8      0.5030651351      0.0000000000     -0.0765297953      0.0005060729
  9      0.5030651351      0.0000000000     -0.0382648976      0.0005060729
 10      0.5030651351      0.0000000000      0.0000000000      0.0002530364
 11      0.5030651351      0.1469000657     -0.3443840786      0.0005060729
 12      0.5030651351      0.1469000657     -0.3061191810      0.0005060729
 13      0.5030651351      0.1469000657     -0.2678542834      0.0005060729
 14      0.5030651351      0.1469000657     -0.2295893858      0.0005060729
 15      0.5030651351      0.1469000657     -0.1913244881      0.0005060729
 16      0.5030651351      0.1469000657     -0.1530595905      0.0005060729
 17      0.5030651351      0.1469000657     -0.1147946929      0.0005060729
 18      0.5030651351      0.1469000657     -0.0765297953      0.0005060729
 19      0.5030651351      0.1469000657     -0.0382648976      0.0005060729
 20      0.5030651351      0.1469000657      0.0000000000      0.0002530364
================================================================================

Complex-valued NGWFs will be used.
Non Gamma point calculation with KP method will be performed.
Cartesian coordinates of k-point are          0.50000         0.50000         0.50000

Determining parallel strategy ...... done
Calculating Ewald energy ...              -48.008785 Hartree
Basis initialisation ...
... done
Sparse matrix initialisation ...
 done
Fully random NGWF initialisation ...
WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
 done

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
Density renormalisation ...
Target Charge:    40.000000000000 ; Input Charge:    38.876783015223
Density kernel initialisation

Writing density kernel to file "P95.dkn" ... done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.631959314682E+03     3.7683E-03     3.0147E-03
    2         1.631956523853E+03     1.6858E-03     1.3486E-03    -2.7908E-03
    3         1.631955882399E+03     1.0125E-03     8.0999E-04    -6.4145E-04
    4         1.631955628174E+03     7.0367E-04     5.6294E-04    -2.5422E-04
    5         1.631955496871E+03     5.3064E-04     4.2451E-04    -1.3130E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.63195549687058E+03  Eh
     Estimated bandgap           =   7.7536E-02  Eh
     RMS occupancy error         =   1.7115E-08
     [H,K] commutator            =   4.2451E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  001 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.5804E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       9.99724194889891E+02 Eh
   Predicted gain in energy  =      -6.32231301980692E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         8.701302573135E+02     1.3724E-01     1.0979E-01
    2         8.710793824277E+02     2.7551E-01     2.2041E-01     9.4913E-01
    3         8.743655960222E+02     5.2231E-01     4.1785E-01     3.2862E+00
    4         8.813832108140E+02     8.2672E-01     6.6140E-01     7.0176E+00
    5         8.739327860535E+02     5.0293E-01     4.0234E-01    -7.4504E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   8.73932786053547E+02  Eh
     Estimated bandgap           =   1.1337E+01  Eh
     RMS occupancy error         =   7.9210E-07
     [H,K] commutator            =   4.0234E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  002 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.4762E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       3.39560991675903E+02 Eh
   Predicted gain in energy  =      -5.34371794377645E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         3.109497881531E+02     3.7058E-01     2.9646E-01
    2         3.234412900899E+02     1.0734E+00     8.5871E-01     1.2492E+01
    3         3.251423039420E+02     1.1351E+00     9.0812E-01     1.7010E+00
    4         3.205887390693E+02     9.6153E-01     7.6923E-01    -4.5536E+00
    5         3.104000102624E+02     3.0237E-01     2.4190E-01    -1.0189E+01
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   3.10400010262446E+02  Eh
     Estimated bandgap           =   1.8392E+01  Eh
     RMS occupancy error         =   6.6430E-06
     [H,K] commutator            =   2.4190E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  003 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2850E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       1.48298245280242E+02 Eh
   Predicted gain in energy  =      -1.62101764982204E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.270494919227E+02     1.5278E-01     1.2222E-01
    2         1.286733864016E+02     3.6410E-01     2.9128E-01     1.6239E+00
    3         1.357146269221E+02     7.7110E-01     6.1688E-01     7.0412E+00
    4         1.323714473906E+02     6.1620E-01     4.9296E-01    -3.3432E+00
    5         1.278307127683E+02     2.7441E-01     2.1953E-01    -4.5407E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.27830712768331E+02  Eh
     Estimated bandgap           =   1.4203E+01  Eh
     RMS occupancy error         =   3.2920E-06
     [H,K] commutator            =   2.1953E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  004 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2615E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       4.81449088745136E+01 Eh
   Predicted gain in energy  =      -7.96858038938178E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         3.549472028886E+01     1.2818E-01     1.0254E-01
    2         3.548569236518E+01     1.2794E-01     1.0235E-01    -9.0279E-03
    3         3.547114052668E+01     1.2342E-01     9.8737E-02    -1.4552E-02
    4         3.542826247338E+01     1.1949E-01     9.5594E-02    -4.2878E-02
    5         3.537474651021E+01     1.0652E-01     8.5217E-02    -5.3516E-02
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   3.53747465102143E+01  Eh
     Estimated bandgap           =   8.0981E+00  Eh
     RMS occupancy error         =   1.1757E-10
     [H,K] commutator            =   8.5217E-02
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  005 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.3966E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -2.82324986045847E+01 Eh
   Predicted gain in energy  =      -6.36072451147990E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -3.089467259936E+01     6.1362E-02     4.9093E-02
    2        -3.112396194536E+01     1.3020E-02     1.0416E-02    -2.2929E-01
    3        -3.113540209348E+01     2.1941E-03     1.7553E-03    -1.1440E-02
    4        -3.113570947589E+01     3.6448E-04     2.9158E-04    -3.0738E-04
    5        -3.113571794051E+01     6.0464E-05     4.8371E-05    -8.4646E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -3.11357179405064E+01  Eh
     Estimated bandgap           =   3.0494E+00  Eh
     RMS occupancy error         =   3.2924E-12
     [H,K] commutator            =   4.8371E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  006 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.4897E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -5.22098609916958E+01 Eh
   Predicted gain in energy  =      -2.10741430511894E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -5.276557702365E+01     4.8882E-02     3.9107E-02
    2        -5.305780730964E+01     8.5927E-03     6.8741E-03    -2.9223E-01
    3        -5.306734060090E+01     1.8973E-03     1.5178E-03    -9.5333E-03
    4        -5.306779883087E+01     4.5057E-04     3.6046E-04    -4.5823E-04
    5        -5.306782444237E+01     1.1138E-04     8.9105E-05    -2.5611E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -5.30678244423672E+01  Eh
     Estimated bandgap           =   1.2629E+00  Eh
     RMS occupancy error         =   1.9133E-10
     [H,K] commutator            =   8.9105E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  007 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3998E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.21687808861935E+01 Eh
   Predicted gain in energy  =      -9.10095644382628E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.321430705148E+01     3.8275E-02     3.0620E-02
    2        -6.347641972192E+01     8.8823E-03     7.1058E-03    -2.6211E-01
    3        -6.349175326929E+01     2.6193E-03     2.0955E-03    -1.5334E-02
    4        -6.349308217421E+01     8.4274E-04     6.7419E-04    -1.3289E-03
    5        -6.349321787005E+01     2.8113E-04     2.2490E-04    -1.3570E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.34932178700535E+01  Eh
     Estimated bandgap           =   6.6639E-01  Eh
     RMS occupancy error         =   1.0071E-08
     [H,K] commutator            =   2.2490E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  008 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.6009E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.84123749464316E+01 Eh
   Predicted gain in energy  =      -4.91915707637808E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.883025894923E+01     3.0637E-02     2.4509E-02
    2        -6.904904192476E+01     8.5292E-03     6.8234E-03    -2.1878E-01
    3        -6.906792669776E+01     3.0374E-03     2.4299E-03    -1.8885E-02
    4        -6.907033785970E+01     1.1774E-03     9.4194E-04    -2.4112E-03
    5        -6.907069414058E+01     4.7502E-04     3.8002E-04    -3.5628E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.90706941405825E+01  Eh
     Estimated bandgap           =   3.8022E-01  Eh
     RMS occupancy error         =   1.3580E-07
     [H,K] commutator            =   3.8002E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  009 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.1941E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.18692993673609E+01 Eh
   Predicted gain in energy  =      -2.79860522677834E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.184939326404E+01     2.2508E-02     1.8007E-02
    2        -7.199229549026E+01     7.0204E-03     5.6163E-03    -1.4290E-01
    3        -7.200746651177E+01     2.7471E-03     2.1977E-03    -1.5171E-02
    4        -7.200980632956E+01     1.1581E-03     9.2645E-04    -2.3398E-03
    5        -7.201022066236E+01     5.1179E-04     4.0943E-04    -4.1433E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.20102206623614E+01  Eh
     Estimated bandgap           =   2.7014E-01  Eh
     RMS occupancy error         =   2.9061E-12
     [H,K] commutator            =   4.0943E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  010 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0225E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.41639585665663E+01 Eh
   Predicted gain in energy  =      -2.15373790420487E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.416599845011E+01     2.2292E-02     1.7835E-02
    2        -7.433868251213E+01     7.5152E-03     6.0121E-03    -1.7268E-01
    3        -7.436081135417E+01     3.2305E-03     2.5844E-03    -2.2129E-02
    4        -7.436502174246E+01     1.5225E-03     1.2180E-03    -4.2104E-03
    5        -7.436594883931E+01     7.5910E-04     6.0728E-04    -9.2710E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.43659488393057E+01  Eh
     Estimated bandgap           =   1.9239E-01  Eh
     RMS occupancy error         =   1.7446E-10
     [H,K] commutator            =   6.0728E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  011 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.0562E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.54093385239715E+01 Eh
   Predicted gain in energy  =      -1.04338968466575E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.537380655091E+01     1.1900E-02     9.5198E-03
    2        -7.543546502896E+01     4.5635E-03     3.6508E-03    -6.1658E-02
    3        -7.544506358489E+01     2.2313E-03     1.7851E-03    -9.5986E-03
    4        -7.544737063389E+01     1.1744E-03     9.3954E-04    -2.3070E-03
    5        -7.544801854350E+01     6.5298E-04     5.2238E-04    -6.4791E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.54480185435028E+01  Eh
     Estimated bandgap           =   1.8491E-01  Eh
     RMS occupancy error         =   2.7934E-10
     [H,K] commutator            =   5.2238E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  012 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.2814E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.60682985173491E+01 Eh
   Predicted gain in energy  =      -6.20279973846294E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.600605624380E+01     9.8843E-03     7.9075E-03
    2        -7.605706445753E+01     4.0902E-03     3.2722E-03    -5.1008E-02
    3        -7.606594663920E+01     2.1967E-03     1.7573E-03    -8.8822E-03
    4        -7.606849569775E+01     1.2643E-03     1.0115E-03    -2.5491E-03
    5        -7.606937167824E+01     7.5647E-04     6.0518E-04    -8.7598E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.60693716782355E+01  Eh
     Estimated bandgap           =   1.7800E-01  Eh
     RMS occupancy error         =   6.3391E-09
     [H,K] commutator            =   6.0518E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  013 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.6137E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.63689229777633E+01 Eh
   Predicted gain in energy  =      -2.99551299527820E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.636851989725E+01     3.4797E-03     2.7838E-03
    2        -7.637529088977E+01     1.7465E-03     1.3972E-03    -6.7710E-03
    3        -7.637702848894E+01     1.1523E-03     9.2186E-04    -1.7376E-03
    4        -7.637773707319E+01     7.0151E-04     5.6121E-04    -7.0858E-04
    5        -7.637800449960E+01     4.3294E-04     3.4635E-04    -2.6743E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.63780044995989E+01  Eh
     Estimated bandgap           =   1.7746E-01  Eh
     RMS occupancy error         =   3.3411E-09
     [H,K] commutator            =   3.4635E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  014 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.4265E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.66328215350196E+01 Eh
   Predicted gain in energy  =      -2.54817035420729E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.662935706368E+01     6.1717E-03     4.9374E-03
    2        -7.665422735541E+01     2.8357E-03     2.2685E-03    -2.4870E-02
    3        -7.665942737608E+01     1.6747E-03     1.3398E-03    -5.2000E-03
    4        -7.666114135547E+01     1.0535E-03     8.4284E-04    -1.7140E-03
    5        -7.666184015217E+01     6.6523E-04     5.3219E-04    -6.9880E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.66618401521700E+01  Eh
     Estimated bandgap           =   1.7395E-01  Eh
     RMS occupancy error         =   1.5293E-08
     [H,K] commutator            =   5.3219E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  015 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.2551E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.68849868339960E+01 Eh
   Predicted gain in energy  =      -2.23146681825966E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.686004951702E+01     5.8728E-03     4.6983E-03
    2        -7.688529772120E+01     2.5382E-03     2.0306E-03    -2.5248E-02
    3        -7.689017916716E+01     1.6014E-03     1.2811E-03    -4.8814E-03
    4        -7.689173475354E+01     1.0901E-03     8.7211E-04    -1.5556E-03
    5        -7.689250149169E+01     6.7852E-04     5.4282E-04    -7.6674E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.68925014916859E+01  Eh
     Estimated bandgap           =   1.7246E-01  Eh
     RMS occupancy error         =   4.5138E-08
     [H,K] commutator            =   5.4282E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  016 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.6745E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70382160734561E+01 Eh
   Predicted gain in energy  =      -1.45714581770221E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.699637994665E+01     4.1644E-03     3.3316E-03
    2        -7.700985792448E+01     2.0945E-03     1.6756E-03    -1.3478E-02
    3        -7.701283593171E+01     1.4546E-03     1.1637E-03    -2.9780E-03
    4        -7.701420339836E+01     9.0850E-04     7.2680E-04    -1.3675E-03
    5        -7.701483392376E+01     6.3385E-04     5.0708E-04    -6.3053E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70148339237641E+01  Eh
     Estimated bandgap           =   1.6841E-01  Eh
     RMS occupancy error         =   9.2235E-08
     [H,K] commutator            =   5.0708E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  017 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2900E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70963829176330E+01 Eh
   Predicted gain in energy  =      -8.15489938689495E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.709635032289E+01     1.3352E-03     1.0681E-03
    2        -7.709770261887E+01     8.3846E-04     6.7077E-04    -1.3523E-03
    3        -7.709816349219E+01     7.0670E-04     5.6536E-04    -4.6087E-04
    4        -7.709851307879E+01     4.9854E-04     3.9884E-04    -3.4959E-04
    5        -7.709869229451E+01     3.5810E-04     2.8648E-04    -1.7922E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70986922945133E+01  Eh
     Estimated bandgap           =   1.6762E-01  Eh
     RMS occupancy error         =   9.9809E-11
     [H,K] commutator            =   2.8648E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  018 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.7080E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71546565784302E+01 Eh
   Predicted gain in energy  =      -5.59642839169499E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.715433248082E+01     1.7581E-03     1.4064E-03
    2        -7.715675830463E+01     9.0220E-04     7.2176E-04    -2.4258E-03
    3        -7.715736481994E+01     6.6382E-04     5.3106E-04    -6.0652E-04
    4        -7.715765250346E+01     4.6809E-04     3.7447E-04    -2.8768E-04
    5        -7.715779030024E+01     3.5152E-04     2.8121E-04    -1.3780E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71577903002403E+01  Eh
     Estimated bandgap           =   1.6536E-01  Eh
     RMS occupancy error         =   3.2434E-08
     [H,K] commutator            =   2.8121E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  019 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.3822E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71944113977777E+01 Eh
   Predicted gain in energy  =      -3.66210975374770E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.719333370235E+01     1.6301E-03     1.3041E-03
    2        -7.719572448238E+01     7.6438E-04     6.1151E-04    -2.3908E-03
    3        -7.719628214779E+01     5.5788E-04     4.4630E-04    -5.5767E-04
    4        -7.719647238882E+01     3.8634E-04     3.0907E-04    -1.9024E-04
    5        -7.719658624452E+01     2.7076E-04     2.1661E-04    -1.1386E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71965862445228E+01  Eh
     Estimated bandgap           =   1.6310E-01  Eh
     RMS occupancy error         =   7.1508E-08
     [H,K] commutator            =   2.1661E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  020 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.1293E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72210047259877E+01 Eh
   Predicted gain in energy  =      -2.44184814648918E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.721908256380E+01     1.3936E-03     1.1149E-03
    2        -7.722088352568E+01     6.7232E-04     5.3785E-04    -1.8010E-03
    3        -7.722116988692E+01     6.0135E-04     4.8108E-04    -2.8636E-04
    4        -7.722135797410E+01     3.5102E-04     2.8081E-04    -1.8809E-04
    5        -7.722144901812E+01     2.8482E-04     2.2785E-04    -9.1044E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72214490181242E+01  Eh
     Estimated bandgap           =   1.5938E-01  Eh
     RMS occupancy error         =   1.7410E-08
     [H,K] commutator            =   2.2785E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  021 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  9.6401E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72342328230076E+01 Eh
   Predicted gain in energy  =      -1.27838048833979E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.723423310421E+01     3.8607E-04     3.0885E-04
    2        -7.723434650860E+01     2.6991E-04     2.1592E-04    -1.1340E-04
    3        -7.723439447394E+01     2.2769E-04     1.8215E-04    -4.7965E-05
    4        -7.723445404642E+01     1.7609E-04     1.4088E-04    -5.9572E-05
    5        -7.723447649573E+01     1.1343E-04     9.0745E-05    -2.2449E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72344764957280E+01  Eh
     Estimated bandgap           =   1.5791E-01  Eh
     RMS occupancy error         =   3.4181E-08
     [H,K] commutator            =   9.0745E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  022 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  6.9505E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72436940813130E+01 Eh
   Predicted gain in energy  =      -9.21758558497743E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.724368280815E+01     5.5817E-04     4.4653E-04
    2        -7.724392328860E+01     3.2585E-04     2.6068E-04    -2.4048E-04
    3        -7.724397281967E+01     2.2526E-04     1.8021E-04    -4.9531E-05
    4        -7.724400276015E+01     1.7087E-04     1.3670E-04    -2.9940E-05
    5        -7.724402185748E+01     1.1450E-04     9.1602E-05    -1.9097E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72440218574771E+01  Eh
     Estimated bandgap           =   1.5511E-01  Eh
     RMS occupancy error         =   2.1917E-10
     [H,K] commutator            =   9.1602E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  023 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.8866E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72505036689378E+01 Eh
   Predicted gain in energy  =      -6.48181146077320E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725044466005E+01     5.7081E-04     4.5665E-04
    2        -7.725074386004E+01     3.2953E-04     2.6362E-04    -2.9920E-04
    3        -7.725079176353E+01     2.6323E-04     2.1058E-04    -4.7903E-05
    4        -7.725083935586E+01     1.6124E-04     1.2899E-04    -4.7592E-05
    5        -7.725085848616E+01     1.2210E-04     9.7680E-05    -1.9130E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72508584861622E+01  Eh
     Estimated bandgap           =   1.5176E-01  Eh
     RMS occupancy error         =   1.1448E-09
     [H,K] commutator            =   9.7680E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  024 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.5860E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72548950859200E+01 Eh
   Predicted gain in energy  =      -4.03659975779647E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725479453072E+01     4.7764E-04     3.8212E-04
    2        -7.725501576817E+01     2.4221E-04     1.9377E-04    -2.2124E-04
    3        -7.725505501370E+01     2.1636E-04     1.7308E-04    -3.9246E-05
    4        -7.725508090950E+01     1.5924E-04     1.2739E-04    -2.5896E-05
    5        -7.725509432507E+01     1.0885E-04     8.7083E-05    -1.3416E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72550943250731E+01  Eh
     Estimated bandgap           =   1.4850E-01  Eh
     RMS occupancy error         =   1.3149E-10
     [H,K] commutator            =   8.7083E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  025 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.8751E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72573096184800E+01 Eh
   Predicted gain in energy  =      -2.21529340690552E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725730965646E+01     1.4128E-04     1.1302E-04
    2        -7.725732477541E+01     9.7128E-05     7.7703E-05    -1.5119E-05
    3        -7.725733188763E+01     9.1341E-05     7.3072E-05    -7.1122E-06
    4        -7.725734203630E+01     1.0435E-04     8.3476E-05    -1.0149E-05
    5        -7.725734688392E+01     6.9563E-05     5.5651E-05    -4.8476E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72573468839177E+01  Eh
     Estimated bandgap           =   1.4760E-01  Eh
     RMS occupancy error         =   5.1354E-09
     [H,K] commutator            =   5.5651E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  026 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.7910E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72589176958497E+01 Eh
   Predicted gain in energy  =      -1.57081193201236E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725891710474E+01     1.9428E-04     1.5543E-04
    2        -7.725894816587E+01     1.2725E-04     1.0180E-04    -3.1061E-05
    3        -7.725895564734E+01     9.5077E-05     7.6062E-05    -7.4815E-06
    4        -7.725896101676E+01     7.8280E-05     6.2624E-05    -5.3694E-06
    5        -7.725896597929E+01     6.4370E-05     5.1496E-05    -4.9625E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72589659792912E+01  Eh
     Estimated bandgap           =   1.4597E-01  Eh
     RMS occupancy error         =   4.9075E-10
     [H,K] commutator            =   5.1496E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  027 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3315E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72599786499556E+01 Eh
   Predicted gain in energy  =      -1.01267066440869E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725997592286E+01     2.0084E-04     1.6067E-04
    2        -7.726001430935E+01     1.4883E-04     1.1906E-04    -3.8386E-05
    3        -7.726002207305E+01     9.8289E-05     7.8631E-05    -7.7637E-06
    4        -7.726003162063E+01     8.5705E-05     6.8564E-05    -9.5476E-06
    5        -7.726003632197E+01     6.3222E-05     5.0578E-05    -4.7013E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72600363219678E+01  Eh
     Estimated bandgap           =   1.4424E-01  Eh
     RMS occupancy error         =   2.0545E-10
     [H,K] commutator            =   5.0578E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  028 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.8771E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72607020706790E+01 Eh
   Predicted gain in energy  =      -6.65748711185188E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726069651283E+01     1.8072E-04     1.4458E-04
    2        -7.726072929637E+01     1.1455E-04     9.1636E-05    -3.2784E-05
    3        -7.726073665595E+01     8.8063E-05     7.0450E-05    -7.3596E-06
    4        -7.726074358853E+01     8.9847E-05     7.1878E-05    -6.9326E-06
    5        -7.726074685462E+01     5.6991E-05     4.5593E-05    -3.2661E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72607468546170E+01  Eh
     Estimated bandgap           =   1.4263E-01  Eh
     RMS occupancy error         =   4.2939E-11
     [H,K] commutator            =   4.5593E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  029 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.7639E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72611385418717E+01 Eh
   Predicted gain in energy  =      -3.91687254690964E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726113857349E+01     5.6395E-05     4.5116E-05
    2        -7.726114110879E+01     4.4583E-05     3.5666E-05    -2.5353E-06
    3        -7.726114265948E+01     4.8694E-05     3.8955E-05    -1.5507E-06
    4        -7.726114489681E+01     6.2424E-05     4.9939E-05    -2.2373E-06
    5        -7.726114693491E+01     3.2053E-05     2.5643E-05    -2.0381E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72611469349100E+01  Eh
     Estimated bandgap           =   1.4227E-01  Eh
     RMS occupancy error         =   2.4234E-09
     [H,K] commutator            =   2.5643E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  030 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2223E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72614321230738E+01 Eh
   Predicted gain in energy  =      -2.85188163800854E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726143210967E+01     7.4848E-05     5.9879E-05
    2        -7.726143633745E+01     6.8979E-05     5.5183E-05    -4.2278E-06
    3        -7.726143815726E+01     3.8877E-05     3.1101E-05    -1.8198E-06
    4        -7.726143902334E+01     2.6035E-05     2.0828E-05    -8.6607E-07
    5        -7.726143962119E+01     2.2647E-05     1.8118E-05    -5.9785E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72614396211861E+01  Eh
     Estimated bandgap           =   1.4153E-01  Eh
     RMS occupancy error         =   1.1438E-08
     [H,K] commutator            =   1.8118E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  031 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0391E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72616480213621E+01 Eh
   Predicted gain in energy  =      -2.08400175992551E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726164780641E+01     8.7055E-05     6.9644E-05
    2        -7.726165500028E+01     8.6284E-05     6.9028E-05    -7.1939E-06
    3        -7.726165735790E+01     4.1742E-05     3.3393E-05    -2.3576E-06
    4        -7.726165916004E+01     4.1166E-05     3.2933E-05    -1.8021E-06
    5        -7.726166019128E+01     2.5042E-05     2.0033E-05    -1.0312E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72616601912770E+01  Eh
     Estimated bandgap           =   1.4062E-01  Eh
     RMS occupancy error         =   2.4568E-08
     [H,K] commutator            =   2.0033E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  032 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  8.2613E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72617979130942E+01 Eh
   Predicted gain in energy  =      -1.37721817239367E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726179738930E+01     7.8803E-05     6.3042E-05
    2        -7.726180415424E+01     6.3853E-05     5.1083E-05    -6.7649E-06
    3        -7.726180559426E+01     4.3441E-05     3.4753E-05    -1.4400E-06
    4        -7.726180721467E+01     4.2885E-05     3.4308E-05    -1.6204E-06
    5        -7.726180833948E+01     2.4746E-05     1.9797E-05    -1.1248E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72618083394759E+01  Eh
     Estimated bandgap           =   1.3975E-01  Eh
     RMS occupancy error         =   2.5066E-08
     [H,K] commutator            =   1.9797E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  033 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.5374E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72618911534587E+01 Eh
   Predicted gain in energy  =      -8.28139828001895E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726189115516E+01     2.5510E-05     2.0408E-05
    2        -7.726189169328E+01     2.1147E-05     1.6918E-05    -5.3813E-07
    3        -7.726189204954E+01     2.1221E-05     1.6977E-05    -3.5625E-07
    4        -7.726189250454E+01     2.9213E-05     2.3370E-05    -4.5500E-07
    5        -7.726189290956E+01     1.6054E-05     1.2843E-05    -4.0502E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72618929095557E+01  Eh
     Estimated bandgap           =   1.3954E-01  Eh
     RMS occupancy error         =   3.6536E-08
     [H,K] commutator            =   1.2843E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  034 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.4016E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72619539744815E+01 Eh
   Predicted gain in energy  =      -6.10649257311024E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726195397233E+01     3.3189E-05     2.6551E-05
    2        -7.726195505581E+01     2.8620E-05     2.2896E-05    -1.0835E-06
    3        -7.726195544186E+01     1.9139E-05     1.5311E-05    -3.8605E-07
    4        -7.726195559991E+01     1.3998E-05     1.1199E-05    -1.5805E-07
    5        -7.726195576504E+01     1.2250E-05     9.8004E-06    -1.6513E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72619557650379E+01  Eh
     Estimated bandgap           =   1.3911E-01  Eh
     RMS occupancy error         =   1.1588E-09
     [H,K] commutator            =   9.8004E-06
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  035 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.5913E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72619967475903E+01 Eh
   Predicted gain in energy  =      -4.09825524059215E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726199672793E+01     3.6264E-05     2.9011E-05
    2        -7.726199846920E+01     2.5110E-05     2.0088E-05    -1.7413E-06
    3        -7.726199886992E+01     2.1683E-05     1.7347E-05    -4.0072E-07
    4        -7.726199928348E+01     2.1767E-05     1.7414E-05    -4.1356E-07
    5        -7.726199946166E+01     1.4063E-05     1.1250E-05    -1.7819E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72619994616648E+01  Eh
     Estimated bandgap           =   1.3863E-01  Eh
     RMS occupancy error         =   4.4199E-09
     [H,K] commutator            =   1.1250E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  036 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.7874E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72620275276539E+01 Eh
   Predicted gain in energy  =      -2.80659890847801E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726202747623E+01     3.3910E-05     2.7128E-05
    2        -7.726202891981E+01     2.5405E-05     2.0324E-05    -1.4436E-06
    3        -7.726202928304E+01     2.2298E-05     1.7839E-05    -3.6323E-07
    4        -7.726202963874E+01     2.5065E-05     2.0052E-05    -3.5571E-07
    5        -7.726202996491E+01     1.4080E-05     1.1264E-05    -3.2617E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72620299649103E+01  Eh
     Estimated bandgap           =   1.3818E-01  Eh
     RMS occupancy error         =   1.1834E-08
     [H,K] commutator            =   1.1264E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  037 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.8854E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72620474750478E+01 Eh
   Predicted gain in energy  =      -1.75101374111364E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726204747698E+01     1.2737E-05     1.0189E-05
    2        -7.726204759729E+01     1.1541E-05     9.2329E-06    -1.2031E-07
    3        -7.726204768945E+01     1.2575E-05     1.0060E-05    -9.2155E-08
    4        -7.726204779325E+01     1.3747E-05     1.0998E-05    -1.0381E-07
    5        -7.726204799056E+01     1.1160E-05     8.9281E-06    -1.9731E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72620479905603E+01  Eh
     Estimated bandgap           =   1.3809E-01  Eh
     RMS occupancy error         =   4.7439E-08
     [H,K] commutator            =   8.9281E-06
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  038 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.6042E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72620612406191E+01 Eh
   Predicted gain in energy  =      -1.32500587994855E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726206124151E+01     1.6499E-05     1.3199E-05
    2        -7.726206152371E+01     1.5250E-05     1.2200E-05    -2.8221E-07
    3        -7.726206167481E+01     7.7200E-06     6.1760E-06    -1.5110E-07
    4        -7.726206172380E+01     7.2289E-06     5.7831E-06    -4.8989E-08
    5        -7.726206179061E+01     8.9540E-06     7.1632E-06    -6.6810E-08
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72620617906104E+01  Eh
     Estimated bandgap           =   1.3789E-01  Eh
     RMS occupancy error         =   4.7586E-09
     [H,K] commutator            =   7.1632E-06
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  039 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2440E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72620721246324E+01 Eh
   Predicted gain in energy  =      -1.03340219368420E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726207212238E+01     1.8054E-05     1.4443E-05
    2        -7.726207257833E+01     1.2194E-05     9.7555E-06    -4.5595E-07
    3        -7.726207267596E+01     1.3115E-05     1.0492E-05    -9.7629E-08
    4        -7.726207278038E+01     1.2936E-05     1.0349E-05    -1.0442E-07
    5        -7.726207289151E+01     8.2638E-06     6.6110E-06    -1.1112E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72620728915068E+01  Eh
     Estimated bandgap           =   1.3762E-01  Eh
     RMS occupancy error         =   5.5024E-09
     [H,K] commutator            =   6.6110E-06
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  040 #############################
################################################################################

>>> Checking for convergence of NGWFs: 
           ........................................................
           |         *** NGWF optimisation converged ***          |
           | RMS NGWF gradient =    0.00000184978097              |
           | Criteria satisfied:                                  |
           | -> RMS NGWF gradient lower than set threshold.       |
           ========================================================

================================================================================
           ---------------- ENERGY COMPONENTS (Eh) ----------------
           | Kinetic                    :       19.74620608381078 |
           | Pseudopotential (local)    :      -19.77996604293191 |
           | Pseudo (non-coul chg cor)  :        0.00000000000000
           | Pseudopotential (non-local):        1.27775530628713 |
           | Hartree                    :        8.18172235574239 |
           | Exchange-correlation       :      -38.67900598994461 |
           | Ewald                      :      -48.00878460447056 |
           | Total                      :      -77.26207289150678 |
           --------------------------------------------------------
           Integrated density           :       39.99999999999966
================================================================================


                        <<<<< CALCULATION SUMMARY >>>>>                         
|ITER|    RMS GRADIENT   |     TOTAL ENERGY    |   step   |     Epredicted              
   0     0.03580416910609   1631.95549687058292   0.634424    999.72419488989090        
   1     0.04476240104242    873.93278605354749   0.327931    339.56099167590253        
   2     0.02284973793351    310.40001026244573   0.480377    148.29824528024179        
   3     0.01261465193807    127.83071276833140   0.771093     48.14490887451363        
   4     0.00739661797452     35.37474651021434   2.516508    -28.23249860458470        
   5     0.00348971991258    -31.13571794050637   3.261410    -52.20986099169576        
   6     0.00239975139506    -53.06782444236722   3.046715    -62.16878088619350        
   7     0.00160093399949    -63.49321787005348   3.380137    -68.41237494643157        
   8     0.00119406776706    -69.07069414058253   4.248560    -71.86929936736087        
   9     0.00102250970177    -72.01022066236142   4.280447    -74.16395856656629        
  10     0.00070561667864    -74.36594883930570   4.171826    -75.40933852397146        
  11     0.00052813679209    -75.44801854350283   4.510258    -76.06829851734912        
  12     0.00046136855377    -76.06937167823547   3.046024    -76.36892297776329        
  13     0.00034264560657    -76.37800449959892   4.576705    -76.63282153501964        
  14     0.00032551222784    -76.66184015217000   4.164216    -76.88498683399597        
  15     0.00026744651956    -76.89250149168592   4.360184    -77.03821607345614        
  16     0.00022900440989    -77.01483392376407   3.365805    -77.09638291763302        
  17     0.00017080443608    -77.09869229451330   4.076349    -77.15465657843025        
  18     0.00013821540149    -77.15779030024025   3.956904    -77.19441139777773        
  19     0.00011293213404    -77.19658624452279   3.951469    -77.22100472598768        
  20     0.00009640104615    -77.22144901812419   2.977520    -77.23423282300759        
  21     0.00006950504514    -77.23447649572803   4.090909    -77.24369408131301        
  22     0.00005886648795    -77.24402185747707   3.918638    -77.25050366893784        
  23     0.00004585999765    -77.25085848616217   3.959594    -77.25489508591997        
  24     0.00003875138588    -77.25509432507309   3.193117    -77.25730961847999        
  25     0.00002791043082    -77.25734688391766   4.328743    -77.25891769584968        
  26     0.00002331497339    -77.25896597929118   3.914918    -77.25997864995558        
  27     0.00001877132747    -77.26003632196782   3.884351    -77.26070207067900        
  28     0.00001763941041    -77.26074685461698   2.724767    -77.26113854187167        
  29     0.00001222251282    -77.26114693490999   4.111201    -77.26143212307379        
  30     0.00001039055752    -77.26143962118613   4.078430    -77.26164802136212        
  31     0.00000826129873    -77.26166019127700   4.141717    -77.26179791309424        
  32     0.00000753735869    -77.26180833947589   3.155174    -77.26189115345869        
  33     0.00000540158007    -77.26189290955574   4.501966    -77.26195397448147        
  34     0.00000459130441    -77.26195576503788   4.092179    -77.26199674759029        
  35     0.00000378742276    -77.26199946166484   3.990148    -77.26202752765393        
  36     0.00000388537221    -77.26202996491034   2.510628    -77.26204747504775        
  37     0.00000260421263    -77.26204799056035   4.216306    -77.26206124061915        
  38     0.00000224396559    -77.26206179061042   4.315163    -77.26207212463235        
  39     0.00000184978097    -77.26207289150678  <-- CG                                 

------------------------------ TIMING INFORMATION ------------------------------
AVERAGE TIME:   10436.241s on      1 proc(s)                                    
TOTAL TIME:     10436.241s on      1 proc(s)                                    
==================== AVERAGE TIMINGS FROM ALL PROCS (CUMULATIVE) =====================
|| TAG                                         #calls     cpu time   %total  Gflops ||
|| onetep.F90 final imbalance                 :     1        0.00s   0.000%  ------ ||
|| onetep.F90 main loop imbalance             :     1        0.00s   0.000%  ------ ||
|| hash_table_free                            :    80        0.00s   0.000%  ------ ||
|| sparse_init                                :     1        0.00s   0.000%  ------ ||
|| pseudo_make_structure_factor               :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_core_density              :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_local_on_grid             :     1        0.01s   0.000%  ------ ||
|| ewald_calculate_energy                     :     1        0.01s   0.000%  ------ ||
|| linalg_dgemv                               :    49        0.03s   0.000%  ------ ||
|| palser_mano_kernel_optimise_spam3_embed    :    20        0.06s   0.001%  ------ ||
|| sparse_set_to_garbage                      :  9560        0.06s   0.001%  ------ ||
|| density_fftbox_interp_mult_imbal           : 245.8k       0.10s   0.001%  ------ ||
|| pseudopotentials_nonlocal_mat              :    80        0.16s   0.002%  ------ ||
|| density_init_guess_real                    :     1        0.17s   0.002%  ------ ||
|| sparse_embed_array_hotelling_invert        :    82        0.35s   0.003%  ------ ||
|| restart_kernel_write                       :    41        0.66s   0.006%  ------ ||
|| ngwfs_initialise_from_radial               :    20        1.11s   0.011%  ------ ||
|| sparse_trace                               : 164.1k       1.48s   0.014%  ------ ||
|| ngwf_gradient_coeffs                       :    40        3.10s   0.030%  ------ ||
|| lnv_gradient_norm                          :   200        3.14s   0.030%  ------ ||
|| hartree_on_grid_single                     :   385        4.18s   0.040%  ------ ||
|| sparse_product                             : 204.8k       5.17s   0.050%  ------ ||
|| basis_extract_function_from_box            : 51200        9.09s   0.087%  ------ ||
|| fourier_apply_cell_forward                 :  1925        9.90s   0.095%   2.068 ||
|| fourier_apply_cell_backward                :  1927       10.12s   0.097%   2.024 ||
|| restart_ngwfs_tightbox_output              :    39       11.56s   0.111%  ------ ||
|| energy_and_force_init_cell                 :     1       12.99s   0.125%  ------ ||
|| hamiltonian_energy_components              :     1       14.82s   0.142%  ------ ||
|| cell_grid_extract_box_real                 : 154.2k      16.92s   0.162%  ------ ||
|| projectors_init_fftbox_recip               :  3200       20.01s   0.192%  ------ ||
|| xc_energy_potential                        :   385       32.24s   0.309%  ------ ||
|| kernel_fix                                 :   203       45.23s   0.433%  ------ ||
|| kernel_purify                              :   623       45.53s   0.436%  ------ ||
|| cell_grid_deposit_box_real                 : 245.8k     108.11s   1.036%  ------ ||
|| density_fftbox_deposit_to_cell             : 245.8k     109.62s   1.050%  ------ ||
|| basis_copy_function_to_box                 : 450.6k     121.12s   1.161%  ------ ||
|| integrals_kinetic_spam3                    :  1600      132.07s   1.265%  ------ ||
|| function_ops_brappd_ketppd_spam3           :  1600      138.48s   1.327%  ------ ||
|| projectors_gradient_batch                  :  1600      199.18s   1.909%  ------ ||
|| projectors_func_ovlp_box_spam3             :  1600      289.55s   2.774%  ------ ||
|| integrals_locpot_mat_els_batch             :  8040      567.04s   5.433%  ------ ||
|| ngwf_gradient_build_batch                  :  1600      680.55s   6.521%  ------ ||
|| basis_dot_function_with_box                : 7.419M     896.47s   8.590%  ------ ||
|| ngwf_gradient_batch                        :  1600     1426.20s  13.666%  ------ ||
|| potential_apply_to_ngwf_batch              :  8040     1440.92s  13.807%  ------ ||
|| density_batch_row_sums                     : 15360     1459.97s  13.989%  ------ ||
|| ngwf_gradient_lnv                          :    40     1481.71s  14.198%  ------ ||
|| basis_add_function_to_box                  : 11.14M    1992.81s  19.095%  ------ ||
|| integrals_locpot_dbl_grid                  :  4020     2008.64s  19.247%  ------ ||
|| fourier_apply_box                          : 2.086M    3108.60s  29.787%   6.485 ||
|| density_fftbox_interpolate_multiply        : 245.8k    3671.88s  35.184%  ------ ||
|| density_batch_interp_deposit               : 15360     3804.39s  36.454%  ------ ||
|| density_on_dbl_grid                        :  7680     5306.19s  50.844%  ------ ||
|| hamiltonian_lhxc_calculate                 :   383     5796.08s  55.538%  ------ ||
|| lnv_denskernel_optimise_cg                 :    40     7464.75s  71.527%  ------ ||
|| ngwf_cg_optimise                           :     1    10403.96s  99.691%  ------ ||
|| energy_and_forces                          :     1    10422.74s  99.871%  ------ ||
|| total_time                                 :     1    10436.24s 100.000%  ------ ||
======================================================================================
Overhead of generating timer report: 
- 0 ms averaging over threads,
- 0 ms ensuring consistency across MPI ranks,
- 0 ms printing in order.

Job completed: 15-01-2025 23:51 (-0000)

