 Initialized kpar          95  with            1 processes.
If your calculation crashes here, before "Checking processes and threads..."
is displayed, then your stack size is insufficient.
If so, use "ulimit -s unlimited" at runtime.
You can disable this check with "check_stack_size F".

Checking processes and threads...
      Default threads: 1
   Running with 1 MPI process.
   There are 96 MPI processes running on the same node as the root process.
   Each MPI process is using: 
               1 threads for simulation cell FFTs.
               1 threads for threaded FFT box operations.
               1 threads for loops over batched FFT box operations.
               1 threads in other parallel regions.
   MPI Interface: S2 (use mpi) (-DMPI, no -DUSE_MPI_F08, no -DUSE_INCLUDE_MPIF).
   MPI_ASYNC_PROTECTS_NONBLOCKING:  No. MPI_SUBARRAYS_SUPPORTED:  No.
   FFTW Interface: OMP-capable and DEPRECATED. (Use -DUSE_MODERN_FFTW to switch to modern).
   GPU Interface: None.
   GPU FFT Backend: None.
... done

Basic input checks...... done

Reading geometry and species blocks from file "P.dat" ...
  <species_atomic_set> block not found: NGWF initialisation set to SOLVE
... done


--------------------------------------------------------------------------------
---------------------------------- INPUT FILE ----------------------------------
--------------------------------------------------------------------------------

cutoff_energy : 1280 eV                                                         
do_properties : F                                                               
edft : F                                                                        
extend_ngwf : T T T                                                             
forces_output_detail : verbose                                                  
full_rand_ngwf : T                                                              
kpoint_grid_shift : 1 1 0                                                       
kpoint_grid_size : 26 8 19                                                      
kpoint_method : KP                                                              
maxit_ngwf_cg : 1000                                                            
output_detail : Normal                                                          
paw : F                                                                         
permit_unusual_ngwf_count : T                                                   
pseudo_path : .                                                                 
rand_seed_ngwf_dynamic : F                                                      
read_denskern : F                                                               
read_tightbox_ngwfs : F                                                         
spin : 0                                                                        
spin_polarized : F                                                              
task : SinglePoint                                                              
use_cmplx_ngwfs : T                                                             
write_forces : F                                                                
xc_functional : PBE                                                             
%BLOCK LATTICE_CART                                                             
ang                                                                             
3.36947371       0.00000000       0.00000000                                    
0.00000000      11.53889713       0.00000000                                    
0.00000000       0.00000000       4.66296473                                    
%ENDBLOCK LATTICE_CART                                                          
%BLOCK POSITIONS_ABS                                                            
ang                                                                             
P     0.000000     1.079695     0.406564                                        
P     0.000000    10.459203     4.256401                                        
P     0.000000     4.689754     2.738046                                        
P     0.000000     6.849143     1.924918                                        
P     1.684737     6.849143     0.406564                                        
P     1.684737     4.689754     4.256401                                        
P     1.684737    10.459203     2.738046                                        
P     1.684737     1.079695     1.924918                                        
%ENDBLOCK POSITIONS_ABS                                                         
%BLOCK SPECIES                                                                  
P P 15 -1 9.0                                                                   
%ENDBLOCK SPECIES                                                               
%BLOCK SPECIES_POT                                                              
P P_NCP19_PBE_OTF.usp                                                           
%ENDBLOCK SPECIES_POT                                                           
num_kpars : 96                                                                  

--------------------------------------------------------------------------------
-------------------------------- END INPUT FILE --------------------------------
--------------------------------------------------------------------------------


 
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Full system >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<< Pseudopotential information >>>>>>>>>>>>>>>>>>>>>>>>>>
File: P_NCP19_PBE_OTF.usp [ 2001 points up to Gmax=  52.9 (1/bohr)]
  Atomic number: 15;  ionic charge:  5.000000
    Shell 1: l = 0; rc = 1.54 bohr
    Shell 2: l = 2; rc = 1.60 bohr
  Core charge supplied for Nonlinear Core Corrections
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

-------------------------- Atom counting information ---------------------------
Symbol    Natoms    Nngwfs    Nprojs
  P          8        32        48
.......   ......    ......    ......
Totals:      8        32        48
--------------------------------------------------------------------------------

=============================== PSINC grid sizes ===============================
                      Simulation cell:   21 x  55 x  25
                              FFT-box:   21 x  55 x  25
                                  PPD:   21 x  55 x  25
Grid space d1=  0.303208691885a0 (KE cutoff=  82.62676Eh =2248.38847eV)
Grid space d2=  0.396461008561a0 (KE cutoff=  48.32847Eh =1315.08456eV)
Grid space d3=  0.352469052597a0 (KE cutoff=  61.14515Eh =1663.84421eV)
================================================================================

********************* Fourier parallelisation information **********************
       Coarse grid (whole simulation cell) dimensions:     21    55    25
          Real-space ('12') slabs/proc (min max mean):     25    25    25
         Recip-space ('23') slabs/proc (min max mean):     11    11    11
********************************************************************************

********************* Fourier parallelisation information **********************
       Double grid (whole simulation cell) dimensions:     42   110    50
          Real-space ('12') slabs/proc (min max mean):     50    50    50
         Recip-space ('23') slabs/proc (min max mean):     22    22    22
********************************************************************************

Atom SCF Calculation for P  : Z (AE atom) =  15 : Z (PS atom) =   5
Config String: 3s2.0 3p3.0
Orbitals (num,occ):  2     2.00 3.00
Orbitals   (num,l):  2        0    1
Atom SCF converged after  24 iterations to a total energy of     -9.45760254

=============================== K-points summary ===============================
Number |             Fractional coordinates          |    Weight
    1   -0.4615384615   -0.3750000000   -0.4736842105    0.0005060729
    2   -0.4615384615   -0.3750000000   -0.4210526316    0.0005060729
    3   -0.4615384615   -0.3750000000   -0.3684210526    0.0005060729
    4   -0.4615384615   -0.3750000000   -0.3157894737    0.0005060729
    5   -0.4615384615   -0.3750000000   -0.2631578947    0.0005060729
    6   -0.4615384615   -0.3750000000   -0.2105263158    0.0005060729
    7   -0.4615384615   -0.3750000000   -0.1578947368    0.0005060729
    8   -0.4615384615   -0.3750000000   -0.1052631579    0.0005060729
    9   -0.4615384615   -0.3750000000   -0.0526315789    0.0005060729
   10   -0.4615384615   -0.3750000000    0.0000000000    0.0005060729
   11   -0.4615384615   -0.3750000000    0.0526315789    0.0005060729
   12   -0.4615384615   -0.3750000000    0.1052631579    0.0005060729
   13   -0.4615384615   -0.3750000000    0.1578947368    0.0005060729
   14   -0.4615384615   -0.3750000000    0.2105263158    0.0005060729
   15   -0.4615384615   -0.3750000000    0.2631578947    0.0005060729
   16   -0.4615384615   -0.3750000000    0.3157894737    0.0005060729
   17   -0.4615384615   -0.3750000000    0.3684210526    0.0005060729
   18   -0.4615384615   -0.3750000000    0.4210526316    0.0005060729
   19   -0.4615384615   -0.3750000000    0.4736842105    0.0005060729
   20   -0.4615384615   -0.2500000000   -0.4736842105    0.0005060729
   21   -0.4615384615   -0.2500000000   -0.4210526316    0.0005060729
   22   -0.4615384615   -0.2500000000   -0.3684210526    0.0005060729
   23   -0.4615384615   -0.2500000000   -0.3157894737    0.0005060729
   24   -0.4615384615   -0.2500000000   -0.2631578947    0.0005060729
   25   -0.4615384615   -0.2500000000   -0.2105263158    0.0005060729
   26   -0.4615384615   -0.2500000000   -0.1578947368    0.0005060729
   27   -0.4615384615   -0.2500000000   -0.1052631579    0.0005060729
   28   -0.4615384615   -0.2500000000   -0.0526315789    0.0005060729
   29   -0.4615384615   -0.2500000000    0.0000000000    0.0005060729
   30   -0.4615384615   -0.2500000000    0.0526315789    0.0005060729
   31   -0.4615384615   -0.2500000000    0.1052631579    0.0005060729
   32   -0.4615384615   -0.2500000000    0.1578947368    0.0005060729
   33   -0.4615384615   -0.2500000000    0.2105263158    0.0005060729
   34   -0.4615384615   -0.2500000000    0.2631578947    0.0005060729
   35   -0.4615384615   -0.2500000000    0.3157894737    0.0005060729
   36   -0.4615384615   -0.2500000000    0.3684210526    0.0005060729
   37   -0.4615384615   -0.2500000000    0.4210526316    0.0005060729
   38   -0.4615384615   -0.2500000000    0.4736842105    0.0005060729
   39   -0.4615384615   -0.1250000000   -0.4736842105    0.0005060729
   40   -0.4615384615   -0.1250000000   -0.4210526316    0.0005060729
   41   -0.4615384615   -0.1250000000   -0.3684210526    0.0005060729
   42   -0.4615384615   -0.1250000000   -0.3157894737    0.0005060729
   43   -0.4615384615   -0.1250000000   -0.2631578947    0.0005060729
   44   -0.4615384615   -0.1250000000   -0.2105263158    0.0005060729
   45   -0.4615384615   -0.1250000000   -0.1578947368    0.0005060729
   46   -0.4615384615   -0.1250000000   -0.1052631579    0.0005060729
   47   -0.4615384615   -0.1250000000   -0.0526315789    0.0005060729
   48   -0.4615384615   -0.1250000000    0.0000000000    0.0005060729
   49   -0.4615384615   -0.1250000000    0.0526315789    0.0005060729
   50   -0.4615384615   -0.1250000000    0.1052631579    0.0005060729
   51   -0.4615384615   -0.1250000000    0.1578947368    0.0005060729
   52   -0.4615384615   -0.1250000000    0.2105263158    0.0005060729
   53   -0.4615384615   -0.1250000000    0.2631578947    0.0005060729
   54   -0.4615384615   -0.1250000000    0.3157894737    0.0005060729
   55   -0.4615384615   -0.1250000000    0.3684210526    0.0005060729
   56   -0.4615384615   -0.1250000000    0.4210526316    0.0005060729
   57   -0.4615384615   -0.1250000000    0.4736842105    0.0005060729
   58   -0.4615384615    0.0000000000   -0.4736842105    0.0005060729
   59   -0.4615384615    0.0000000000   -0.4210526316    0.0005060729
   60   -0.4615384615    0.0000000000   -0.3684210526    0.0005060729
   61   -0.4615384615    0.0000000000   -0.3157894737    0.0005060729
   62   -0.4615384615    0.0000000000   -0.2631578947    0.0005060729
   63   -0.4615384615    0.0000000000   -0.2105263158    0.0005060729
   64   -0.4615384615    0.0000000000   -0.1578947368    0.0005060729
   65   -0.4615384615    0.0000000000   -0.1052631579    0.0005060729
   66   -0.4615384615    0.0000000000   -0.0526315789    0.0005060729
   67   -0.4615384615    0.0000000000    0.0000000000    0.0005060729
   68   -0.4615384615    0.0000000000    0.0526315789    0.0005060729
   69   -0.4615384615    0.0000000000    0.1052631579    0.0005060729
   70   -0.4615384615    0.0000000000    0.1578947368    0.0005060729
   71   -0.4615384615    0.0000000000    0.2105263158    0.0005060729
   72   -0.4615384615    0.0000000000    0.2631578947    0.0005060729
   73   -0.4615384615    0.0000000000    0.3157894737    0.0005060729
   74   -0.4615384615    0.0000000000    0.3684210526    0.0005060729
   75   -0.4615384615    0.0000000000    0.4210526316    0.0005060729
   76   -0.4615384615    0.0000000000    0.4736842105    0.0005060729
   77   -0.4615384615    0.1250000000   -0.4736842105    0.0005060729
   78   -0.4615384615    0.1250000000   -0.4210526316    0.0005060729
   79   -0.4615384615    0.1250000000   -0.3684210526    0.0005060729
   80   -0.4615384615    0.1250000000   -0.3157894737    0.0005060729
   81   -0.4615384615    0.1250000000   -0.2631578947    0.0005060729
   82   -0.4615384615    0.1250000000   -0.2105263158    0.0005060729
   83   -0.4615384615    0.1250000000   -0.1578947368    0.0005060729
   84   -0.4615384615    0.1250000000   -0.1052631579    0.0005060729
   85   -0.4615384615    0.1250000000   -0.0526315789    0.0005060729
   86   -0.4615384615    0.1250000000    0.0000000000    0.0005060729
   87   -0.4615384615    0.1250000000    0.0526315789    0.0005060729
   88   -0.4615384615    0.1250000000    0.1052631579    0.0005060729
   89   -0.4615384615    0.1250000000    0.1578947368    0.0005060729
   90   -0.4615384615    0.1250000000    0.2105263158    0.0005060729
   91   -0.4615384615    0.1250000000    0.2631578947    0.0005060729
   92   -0.4615384615    0.1250000000    0.3157894737    0.0005060729
   93   -0.4615384615    0.1250000000    0.3684210526    0.0005060729
   94   -0.4615384615    0.1250000000    0.4210526316    0.0005060729
   95   -0.4615384615    0.1250000000    0.4736842105    0.0005060729
   96   -0.4615384615    0.2500000000   -0.4736842105    0.0005060729
   97   -0.4615384615    0.2500000000   -0.4210526316    0.0005060729
   98   -0.4615384615    0.2500000000   -0.3684210526    0.0005060729
   99   -0.4615384615    0.2500000000   -0.3157894737    0.0005060729
  100   -0.4615384615    0.2500000000   -0.2631578947    0.0005060729
  101   -0.4615384615    0.2500000000   -0.2105263158    0.0005060729
  102   -0.4615384615    0.2500000000   -0.1578947368    0.0005060729
  103   -0.4615384615    0.2500000000   -0.1052631579    0.0005060729
  104   -0.4615384615    0.2500000000   -0.0526315789    0.0005060729
  105   -0.4615384615    0.2500000000    0.0000000000    0.0005060729
  106   -0.4615384615    0.2500000000    0.0526315789    0.0005060729
  107   -0.4615384615    0.2500000000    0.1052631579    0.0005060729
  108   -0.4615384615    0.2500000000    0.1578947368    0.0005060729
  109   -0.4615384615    0.2500000000    0.2105263158    0.0005060729
  110   -0.4615384615    0.2500000000    0.2631578947    0.0005060729
  111   -0.4615384615    0.2500000000    0.3157894737    0.0005060729
  112   -0.4615384615    0.2500000000    0.3684210526    0.0005060729
  113   -0.4615384615    0.2500000000    0.4210526316    0.0005060729
  114   -0.4615384615    0.2500000000    0.4736842105    0.0005060729
  115   -0.4615384615    0.3750000000   -0.4736842105    0.0005060729
  116   -0.4615384615    0.3750000000   -0.4210526316    0.0005060729
  117   -0.4615384615    0.3750000000   -0.3684210526    0.0005060729
  118   -0.4615384615    0.3750000000   -0.3157894737    0.0005060729
  119   -0.4615384615    0.3750000000   -0.2631578947    0.0005060729
  120   -0.4615384615    0.3750000000   -0.2105263158    0.0005060729
  121   -0.4615384615    0.3750000000   -0.1578947368    0.0005060729
  122   -0.4615384615    0.3750000000   -0.1052631579    0.0005060729
  123   -0.4615384615    0.3750000000   -0.0526315789    0.0005060729
  124   -0.4615384615    0.3750000000    0.0000000000    0.0005060729
  125   -0.4615384615    0.3750000000    0.0526315789    0.0005060729
  126   -0.4615384615    0.3750000000    0.1052631579    0.0005060729
  127   -0.4615384615    0.3750000000    0.1578947368    0.0005060729
  128   -0.4615384615    0.3750000000    0.2105263158    0.0005060729
  129   -0.4615384615    0.3750000000    0.2631578947    0.0005060729
  130   -0.4615384615    0.3750000000    0.3157894737    0.0005060729
  131   -0.4615384615    0.3750000000    0.3684210526    0.0005060729
  132   -0.4615384615    0.3750000000    0.4210526316    0.0005060729
  133   -0.4615384615    0.3750000000    0.4736842105    0.0005060729
  134   -0.4615384615    0.5000000000   -0.4736842105    0.0005060729
  135   -0.4615384615    0.5000000000   -0.4210526316    0.0005060729
  136   -0.4615384615    0.5000000000   -0.3684210526    0.0005060729
  137   -0.4615384615    0.5000000000   -0.3157894737    0.0005060729
  138   -0.4615384615    0.5000000000   -0.2631578947    0.0005060729
  139   -0.4615384615    0.5000000000   -0.2105263158    0.0005060729
  140   -0.4615384615    0.5000000000   -0.1578947368    0.0005060729
  141   -0.4615384615    0.5000000000   -0.1052631579    0.0005060729
  142   -0.4615384615    0.5000000000   -0.0526315789    0.0005060729
  143   -0.4615384615    0.5000000000    0.0000000000    0.0005060729
  144   -0.4615384615    0.5000000000    0.0526315789    0.0005060729
  145   -0.4615384615    0.5000000000    0.1052631579    0.0005060729
  146   -0.4615384615    0.5000000000    0.1578947368    0.0005060729
  147   -0.4615384615    0.5000000000    0.2105263158    0.0005060729
  148   -0.4615384615    0.5000000000    0.2631578947    0.0005060729
  149   -0.4615384615    0.5000000000    0.3157894737    0.0005060729
  150   -0.4615384615    0.5000000000    0.3684210526    0.0005060729
  151   -0.4615384615    0.5000000000    0.4210526316    0.0005060729
  152   -0.4615384615    0.5000000000    0.4736842105    0.0005060729
  153   -0.4230769231   -0.3750000000   -0.4736842105    0.0005060729
  154   -0.4230769231   -0.3750000000   -0.4210526316    0.0005060729
  155   -0.4230769231   -0.3750000000   -0.3684210526    0.0005060729
  156   -0.4230769231   -0.3750000000   -0.3157894737    0.0005060729
  157   -0.4230769231   -0.3750000000   -0.2631578947    0.0005060729
  158   -0.4230769231   -0.3750000000   -0.2105263158    0.0005060729
  159   -0.4230769231   -0.3750000000   -0.1578947368    0.0005060729
  160   -0.4230769231   -0.3750000000   -0.1052631579    0.0005060729
  161   -0.4230769231   -0.3750000000   -0.0526315789    0.0005060729
  162   -0.4230769231   -0.3750000000    0.0000000000    0.0005060729
  163   -0.4230769231   -0.3750000000    0.0526315789    0.0005060729
  164   -0.4230769231   -0.3750000000    0.1052631579    0.0005060729
  165   -0.4230769231   -0.3750000000    0.1578947368    0.0005060729
  166   -0.4230769231   -0.3750000000    0.2105263158    0.0005060729
  167   -0.4230769231   -0.3750000000    0.2631578947    0.0005060729
  168   -0.4230769231   -0.3750000000    0.3157894737    0.0005060729
  169   -0.4230769231   -0.3750000000    0.3684210526    0.0005060729
  170   -0.4230769231   -0.3750000000    0.4210526316    0.0005060729
  171   -0.4230769231   -0.3750000000    0.4736842105    0.0005060729
  172   -0.4230769231   -0.2500000000   -0.4736842105    0.0005060729
  173   -0.4230769231   -0.2500000000   -0.4210526316    0.0005060729
  174   -0.4230769231   -0.2500000000   -0.3684210526    0.0005060729
  175   -0.4230769231   -0.2500000000   -0.3157894737    0.0005060729
  176   -0.4230769231   -0.2500000000   -0.2631578947    0.0005060729
  177   -0.4230769231   -0.2500000000   -0.2105263158    0.0005060729
  178   -0.4230769231   -0.2500000000   -0.1578947368    0.0005060729
  179   -0.4230769231   -0.2500000000   -0.1052631579    0.0005060729
  180   -0.4230769231   -0.2500000000   -0.0526315789    0.0005060729
  181   -0.4230769231   -0.2500000000    0.0000000000    0.0005060729
  182   -0.4230769231   -0.2500000000    0.0526315789    0.0005060729
  183   -0.4230769231   -0.2500000000    0.1052631579    0.0005060729
  184   -0.4230769231   -0.2500000000    0.1578947368    0.0005060729
  185   -0.4230769231   -0.2500000000    0.2105263158    0.0005060729
  186   -0.4230769231   -0.2500000000    0.2631578947    0.0005060729
  187   -0.4230769231   -0.2500000000    0.3157894737    0.0005060729
  188   -0.4230769231   -0.2500000000    0.3684210526    0.0005060729
  189   -0.4230769231   -0.2500000000    0.4210526316    0.0005060729
  190   -0.4230769231   -0.2500000000    0.4736842105    0.0005060729
  191   -0.4230769231   -0.1250000000   -0.4736842105    0.0005060729
  192   -0.4230769231   -0.1250000000   -0.4210526316    0.0005060729
  193   -0.4230769231   -0.1250000000   -0.3684210526    0.0005060729
  194   -0.4230769231   -0.1250000000   -0.3157894737    0.0005060729
  195   -0.4230769231   -0.1250000000   -0.2631578947    0.0005060729
  196   -0.4230769231   -0.1250000000   -0.2105263158    0.0005060729
  197   -0.4230769231   -0.1250000000   -0.1578947368    0.0005060729
  198   -0.4230769231   -0.1250000000   -0.1052631579    0.0005060729
  199   -0.4230769231   -0.1250000000   -0.0526315789    0.0005060729
  200   -0.4230769231   -0.1250000000    0.0000000000    0.0005060729
  201   -0.4230769231   -0.1250000000    0.0526315789    0.0005060729
  202   -0.4230769231   -0.1250000000    0.1052631579    0.0005060729
  203   -0.4230769231   -0.1250000000    0.1578947368    0.0005060729
  204   -0.4230769231   -0.1250000000    0.2105263158    0.0005060729
  205   -0.4230769231   -0.1250000000    0.2631578947    0.0005060729
  206   -0.4230769231   -0.1250000000    0.3157894737    0.0005060729
  207   -0.4230769231   -0.1250000000    0.3684210526    0.0005060729
  208   -0.4230769231   -0.1250000000    0.4210526316    0.0005060729
  209   -0.4230769231   -0.1250000000    0.4736842105    0.0005060729
  210   -0.4230769231    0.0000000000   -0.4736842105    0.0005060729
  211   -0.4230769231    0.0000000000   -0.4210526316    0.0005060729
  212   -0.4230769231    0.0000000000   -0.3684210526    0.0005060729
  213   -0.4230769231    0.0000000000   -0.3157894737    0.0005060729
  214   -0.4230769231    0.0000000000   -0.2631578947    0.0005060729
  215   -0.4230769231    0.0000000000   -0.2105263158    0.0005060729
  216   -0.4230769231    0.0000000000   -0.1578947368    0.0005060729
  217   -0.4230769231    0.0000000000   -0.1052631579    0.0005060729
  218   -0.4230769231    0.0000000000   -0.0526315789    0.0005060729
  219   -0.4230769231    0.0000000000    0.0000000000    0.0005060729
  220   -0.4230769231    0.0000000000    0.0526315789    0.0005060729
  221   -0.4230769231    0.0000000000    0.1052631579    0.0005060729
  222   -0.4230769231    0.0000000000    0.1578947368    0.0005060729
  223   -0.4230769231    0.0000000000    0.2105263158    0.0005060729
  224   -0.4230769231    0.0000000000    0.2631578947    0.0005060729
  225   -0.4230769231    0.0000000000    0.3157894737    0.0005060729
  226   -0.4230769231    0.0000000000    0.3684210526    0.0005060729
  227   -0.4230769231    0.0000000000    0.4210526316    0.0005060729
  228   -0.4230769231    0.0000000000    0.4736842105    0.0005060729
  229   -0.4230769231    0.1250000000   -0.4736842105    0.0005060729
  230   -0.4230769231    0.1250000000   -0.4210526316    0.0005060729
  231   -0.4230769231    0.1250000000   -0.3684210526    0.0005060729
  232   -0.4230769231    0.1250000000   -0.3157894737    0.0005060729
  233   -0.4230769231    0.1250000000   -0.2631578947    0.0005060729
  234   -0.4230769231    0.1250000000   -0.2105263158    0.0005060729
  235   -0.4230769231    0.1250000000   -0.1578947368    0.0005060729
  236   -0.4230769231    0.1250000000   -0.1052631579    0.0005060729
  237   -0.4230769231    0.1250000000   -0.0526315789    0.0005060729
  238   -0.4230769231    0.1250000000    0.0000000000    0.0005060729
  239   -0.4230769231    0.1250000000    0.0526315789    0.0005060729
  240   -0.4230769231    0.1250000000    0.1052631579    0.0005060729
  241   -0.4230769231    0.1250000000    0.1578947368    0.0005060729
  242   -0.4230769231    0.1250000000    0.2105263158    0.0005060729
  243   -0.4230769231    0.1250000000    0.2631578947    0.0005060729
  244   -0.4230769231    0.1250000000    0.3157894737    0.0005060729
  245   -0.4230769231    0.1250000000    0.3684210526    0.0005060729
  246   -0.4230769231    0.1250000000    0.4210526316    0.0005060729
  247   -0.4230769231    0.1250000000    0.4736842105    0.0005060729
  248   -0.4230769231    0.2500000000   -0.4736842105    0.0005060729
  249   -0.4230769231    0.2500000000   -0.4210526316    0.0005060729
  250   -0.4230769231    0.2500000000   -0.3684210526    0.0005060729
  251   -0.4230769231    0.2500000000   -0.3157894737    0.0005060729
  252   -0.4230769231    0.2500000000   -0.2631578947    0.0005060729
  253   -0.4230769231    0.2500000000   -0.2105263158    0.0005060729
  254   -0.4230769231    0.2500000000   -0.1578947368    0.0005060729
  255   -0.4230769231    0.2500000000   -0.1052631579    0.0005060729
  256   -0.4230769231    0.2500000000   -0.0526315789    0.0005060729
  257   -0.4230769231    0.2500000000    0.0000000000    0.0005060729
  258   -0.4230769231    0.2500000000    0.0526315789    0.0005060729
  259   -0.4230769231    0.2500000000    0.1052631579    0.0005060729
  260   -0.4230769231    0.2500000000    0.1578947368    0.0005060729
  261   -0.4230769231    0.2500000000    0.2105263158    0.0005060729
  262   -0.4230769231    0.2500000000    0.2631578947    0.0005060729
  263   -0.4230769231    0.2500000000    0.3157894737    0.0005060729
  264   -0.4230769231    0.2500000000    0.3684210526    0.0005060729
  265   -0.4230769231    0.2500000000    0.4210526316    0.0005060729
  266   -0.4230769231    0.2500000000    0.4736842105    0.0005060729
  267   -0.4230769231    0.3750000000   -0.4736842105    0.0005060729
  268   -0.4230769231    0.3750000000   -0.4210526316    0.0005060729
  269   -0.4230769231    0.3750000000   -0.3684210526    0.0005060729
  270   -0.4230769231    0.3750000000   -0.3157894737    0.0005060729
  271   -0.4230769231    0.3750000000   -0.2631578947    0.0005060729
  272   -0.4230769231    0.3750000000   -0.2105263158    0.0005060729
  273   -0.4230769231    0.3750000000   -0.1578947368    0.0005060729
  274   -0.4230769231    0.3750000000   -0.1052631579    0.0005060729
  275   -0.4230769231    0.3750000000   -0.0526315789    0.0005060729
  276   -0.4230769231    0.3750000000    0.0000000000    0.0005060729
  277   -0.4230769231    0.3750000000    0.0526315789    0.0005060729
  278   -0.4230769231    0.3750000000    0.1052631579    0.0005060729
  279   -0.4230769231    0.3750000000    0.1578947368    0.0005060729
  280   -0.4230769231    0.3750000000    0.2105263158    0.0005060729
  281   -0.4230769231    0.3750000000    0.2631578947    0.0005060729
  282   -0.4230769231    0.3750000000    0.3157894737    0.0005060729
  283   -0.4230769231    0.3750000000    0.3684210526    0.0005060729
  284   -0.4230769231    0.3750000000    0.4210526316    0.0005060729
  285   -0.4230769231    0.3750000000    0.4736842105    0.0005060729
  286   -0.4230769231    0.5000000000   -0.4736842105    0.0005060729
  287   -0.4230769231    0.5000000000   -0.4210526316    0.0005060729
  288   -0.4230769231    0.5000000000   -0.3684210526    0.0005060729
  289   -0.4230769231    0.5000000000   -0.3157894737    0.0005060729
  290   -0.4230769231    0.5000000000   -0.2631578947    0.0005060729
  291   -0.4230769231    0.5000000000   -0.2105263158    0.0005060729
  292   -0.4230769231    0.5000000000   -0.1578947368    0.0005060729
  293   -0.4230769231    0.5000000000   -0.1052631579    0.0005060729
  294   -0.4230769231    0.5000000000   -0.0526315789    0.0005060729
  295   -0.4230769231    0.5000000000    0.0000000000    0.0005060729
  296   -0.4230769231    0.5000000000    0.0526315789    0.0005060729
  297   -0.4230769231    0.5000000000    0.1052631579    0.0005060729
  298   -0.4230769231    0.5000000000    0.1578947368    0.0005060729
  299   -0.4230769231    0.5000000000    0.2105263158    0.0005060729
  300   -0.4230769231    0.5000000000    0.2631578947    0.0005060729
  301   -0.4230769231    0.5000000000    0.3157894737    0.0005060729
  302   -0.4230769231    0.5000000000    0.3684210526    0.0005060729
  303   -0.4230769231    0.5000000000    0.4210526316    0.0005060729
  304   -0.4230769231    0.5000000000    0.4736842105    0.0005060729
  305   -0.3846153846   -0.3750000000   -0.4736842105    0.0005060729
  306   -0.3846153846   -0.3750000000   -0.4210526316    0.0005060729
  307   -0.3846153846   -0.3750000000   -0.3684210526    0.0005060729
  308   -0.3846153846   -0.3750000000   -0.3157894737    0.0005060729
  309   -0.3846153846   -0.3750000000   -0.2631578947    0.0005060729
  310   -0.3846153846   -0.3750000000   -0.2105263158    0.0005060729
  311   -0.3846153846   -0.3750000000   -0.1578947368    0.0005060729
  312   -0.3846153846   -0.3750000000   -0.1052631579    0.0005060729
  313   -0.3846153846   -0.3750000000   -0.0526315789    0.0005060729
  314   -0.3846153846   -0.3750000000    0.0000000000    0.0005060729
  315   -0.3846153846   -0.3750000000    0.0526315789    0.0005060729
  316   -0.3846153846   -0.3750000000    0.1052631579    0.0005060729
  317   -0.3846153846   -0.3750000000    0.1578947368    0.0005060729
  318   -0.3846153846   -0.3750000000    0.2105263158    0.0005060729
  319   -0.3846153846   -0.3750000000    0.2631578947    0.0005060729
  320   -0.3846153846   -0.3750000000    0.3157894737    0.0005060729
  321   -0.3846153846   -0.3750000000    0.3684210526    0.0005060729
  322   -0.3846153846   -0.3750000000    0.4210526316    0.0005060729
  323   -0.3846153846   -0.3750000000    0.4736842105    0.0005060729
  324   -0.3846153846   -0.2500000000   -0.4736842105    0.0005060729
  325   -0.3846153846   -0.2500000000   -0.4210526316    0.0005060729
  326   -0.3846153846   -0.2500000000   -0.3684210526    0.0005060729
  327   -0.3846153846   -0.2500000000   -0.3157894737    0.0005060729
  328   -0.3846153846   -0.2500000000   -0.2631578947    0.0005060729
  329   -0.3846153846   -0.2500000000   -0.2105263158    0.0005060729
  330   -0.3846153846   -0.2500000000   -0.1578947368    0.0005060729
  331   -0.3846153846   -0.2500000000   -0.1052631579    0.0005060729
  332   -0.3846153846   -0.2500000000   -0.0526315789    0.0005060729
  333   -0.3846153846   -0.2500000000    0.0000000000    0.0005060729
  334   -0.3846153846   -0.2500000000    0.0526315789    0.0005060729
  335   -0.3846153846   -0.2500000000    0.1052631579    0.0005060729
  336   -0.3846153846   -0.2500000000    0.1578947368    0.0005060729
  337   -0.3846153846   -0.2500000000    0.2105263158    0.0005060729
  338   -0.3846153846   -0.2500000000    0.2631578947    0.0005060729
  339   -0.3846153846   -0.2500000000    0.3157894737    0.0005060729
  340   -0.3846153846   -0.2500000000    0.3684210526    0.0005060729
  341   -0.3846153846   -0.2500000000    0.4210526316    0.0005060729
  342   -0.3846153846   -0.2500000000    0.4736842105    0.0005060729
  343   -0.3846153846   -0.1250000000   -0.4736842105    0.0005060729
  344   -0.3846153846   -0.1250000000   -0.4210526316    0.0005060729
  345   -0.3846153846   -0.1250000000   -0.3684210526    0.0005060729
  346   -0.3846153846   -0.1250000000   -0.3157894737    0.0005060729
  347   -0.3846153846   -0.1250000000   -0.2631578947    0.0005060729
  348   -0.3846153846   -0.1250000000   -0.2105263158    0.0005060729
  349   -0.3846153846   -0.1250000000   -0.1578947368    0.0005060729
  350   -0.3846153846   -0.1250000000   -0.1052631579    0.0005060729
  351   -0.3846153846   -0.1250000000   -0.0526315789    0.0005060729
  352   -0.3846153846   -0.1250000000    0.0000000000    0.0005060729
  353   -0.3846153846   -0.1250000000    0.0526315789    0.0005060729
  354   -0.3846153846   -0.1250000000    0.1052631579    0.0005060729
  355   -0.3846153846   -0.1250000000    0.1578947368    0.0005060729
  356   -0.3846153846   -0.1250000000    0.2105263158    0.0005060729
  357   -0.3846153846   -0.1250000000    0.2631578947    0.0005060729
  358   -0.3846153846   -0.1250000000    0.3157894737    0.0005060729
  359   -0.3846153846   -0.1250000000    0.3684210526    0.0005060729
  360   -0.3846153846   -0.1250000000    0.4210526316    0.0005060729
  361   -0.3846153846   -0.1250000000    0.4736842105    0.0005060729
  362   -0.3846153846    0.0000000000   -0.4736842105    0.0005060729
  363   -0.3846153846    0.0000000000   -0.4210526316    0.0005060729
  364   -0.3846153846    0.0000000000   -0.3684210526    0.0005060729
  365   -0.3846153846    0.0000000000   -0.3157894737    0.0005060729
  366   -0.3846153846    0.0000000000   -0.2631578947    0.0005060729
  367   -0.3846153846    0.0000000000   -0.2105263158    0.0005060729
  368   -0.3846153846    0.0000000000   -0.1578947368    0.0005060729
  369   -0.3846153846    0.0000000000   -0.1052631579    0.0005060729
  370   -0.3846153846    0.0000000000   -0.0526315789    0.0005060729
  371   -0.3846153846    0.0000000000    0.0000000000    0.0005060729
  372   -0.3846153846    0.0000000000    0.0526315789    0.0005060729
  373   -0.3846153846    0.0000000000    0.1052631579    0.0005060729
  374   -0.3846153846    0.0000000000    0.1578947368    0.0005060729
  375   -0.3846153846    0.0000000000    0.2105263158    0.0005060729
  376   -0.3846153846    0.0000000000    0.2631578947    0.0005060729
  377   -0.3846153846    0.0000000000    0.3157894737    0.0005060729
  378   -0.3846153846    0.0000000000    0.3684210526    0.0005060729
  379   -0.3846153846    0.0000000000    0.4210526316    0.0005060729
  380   -0.3846153846    0.0000000000    0.4736842105    0.0005060729
  381   -0.3846153846    0.1250000000   -0.4736842105    0.0005060729
  382   -0.3846153846    0.1250000000   -0.4210526316    0.0005060729
  383   -0.3846153846    0.1250000000   -0.3684210526    0.0005060729
  384   -0.3846153846    0.1250000000   -0.3157894737    0.0005060729
  385   -0.3846153846    0.1250000000   -0.2631578947    0.0005060729
  386   -0.3846153846    0.1250000000   -0.2105263158    0.0005060729
  387   -0.3846153846    0.1250000000   -0.1578947368    0.0005060729
  388   -0.3846153846    0.1250000000   -0.1052631579    0.0005060729
  389   -0.3846153846    0.1250000000   -0.0526315789    0.0005060729
  390   -0.3846153846    0.1250000000    0.0000000000    0.0005060729
  391   -0.3846153846    0.1250000000    0.0526315789    0.0005060729
  392   -0.3846153846    0.1250000000    0.1052631579    0.0005060729
  393   -0.3846153846    0.1250000000    0.1578947368    0.0005060729
  394   -0.3846153846    0.1250000000    0.2105263158    0.0005060729
  395   -0.3846153846    0.1250000000    0.2631578947    0.0005060729
  396   -0.3846153846    0.1250000000    0.3157894737    0.0005060729
  397   -0.3846153846    0.1250000000    0.3684210526    0.0005060729
  398   -0.3846153846    0.1250000000    0.4210526316    0.0005060729
  399   -0.3846153846    0.1250000000    0.4736842105    0.0005060729
  400   -0.3846153846    0.2500000000   -0.4736842105    0.0005060729
  401   -0.3846153846    0.2500000000   -0.4210526316    0.0005060729
  402   -0.3846153846    0.2500000000   -0.3684210526    0.0005060729
  403   -0.3846153846    0.2500000000   -0.3157894737    0.0005060729
  404   -0.3846153846    0.2500000000   -0.2631578947    0.0005060729
  405   -0.3846153846    0.2500000000   -0.2105263158    0.0005060729
  406   -0.3846153846    0.2500000000   -0.1578947368    0.0005060729
  407   -0.3846153846    0.2500000000   -0.1052631579    0.0005060729
  408   -0.3846153846    0.2500000000   -0.0526315789    0.0005060729
  409   -0.3846153846    0.2500000000    0.0000000000    0.0005060729
  410   -0.3846153846    0.2500000000    0.0526315789    0.0005060729
  411   -0.3846153846    0.2500000000    0.1052631579    0.0005060729
  412   -0.3846153846    0.2500000000    0.1578947368    0.0005060729
  413   -0.3846153846    0.2500000000    0.2105263158    0.0005060729
  414   -0.3846153846    0.2500000000    0.2631578947    0.0005060729
  415   -0.3846153846    0.2500000000    0.3157894737    0.0005060729
  416   -0.3846153846    0.2500000000    0.3684210526    0.0005060729
  417   -0.3846153846    0.2500000000    0.4210526316    0.0005060729
  418   -0.3846153846    0.2500000000    0.4736842105    0.0005060729
  419   -0.3846153846    0.3750000000   -0.4736842105    0.0005060729
  420   -0.3846153846    0.3750000000   -0.4210526316    0.0005060729
  421   -0.3846153846    0.3750000000   -0.3684210526    0.0005060729
  422   -0.3846153846    0.3750000000   -0.3157894737    0.0005060729
  423   -0.3846153846    0.3750000000   -0.2631578947    0.0005060729
  424   -0.3846153846    0.3750000000   -0.2105263158    0.0005060729
  425   -0.3846153846    0.3750000000   -0.1578947368    0.0005060729
  426   -0.3846153846    0.3750000000   -0.1052631579    0.0005060729
  427   -0.3846153846    0.3750000000   -0.0526315789    0.0005060729
  428   -0.3846153846    0.3750000000    0.0000000000    0.0005060729
  429   -0.3846153846    0.3750000000    0.0526315789    0.0005060729
  430   -0.3846153846    0.3750000000    0.1052631579    0.0005060729
  431   -0.3846153846    0.3750000000    0.1578947368    0.0005060729
  432   -0.3846153846    0.3750000000    0.2105263158    0.0005060729
  433   -0.3846153846    0.3750000000    0.2631578947    0.0005060729
  434   -0.3846153846    0.3750000000    0.3157894737    0.0005060729
  435   -0.3846153846    0.3750000000    0.3684210526    0.0005060729
  436   -0.3846153846    0.3750000000    0.4210526316    0.0005060729
  437   -0.3846153846    0.3750000000    0.4736842105    0.0005060729
  438   -0.3846153846    0.5000000000   -0.4736842105    0.0005060729
  439   -0.3846153846    0.5000000000   -0.4210526316    0.0005060729
  440   -0.3846153846    0.5000000000   -0.3684210526    0.0005060729
  441   -0.3846153846    0.5000000000   -0.3157894737    0.0005060729
  442   -0.3846153846    0.5000000000   -0.2631578947    0.0005060729
  443   -0.3846153846    0.5000000000   -0.2105263158    0.0005060729
  444   -0.3846153846    0.5000000000   -0.1578947368    0.0005060729
  445   -0.3846153846    0.5000000000   -0.1052631579    0.0005060729
  446   -0.3846153846    0.5000000000   -0.0526315789    0.0005060729
  447   -0.3846153846    0.5000000000    0.0000000000    0.0005060729
  448   -0.3846153846    0.5000000000    0.0526315789    0.0005060729
  449   -0.3846153846    0.5000000000    0.1052631579    0.0005060729
  450   -0.3846153846    0.5000000000    0.1578947368    0.0005060729
  451   -0.3846153846    0.5000000000    0.2105263158    0.0005060729
  452   -0.3846153846    0.5000000000    0.2631578947    0.0005060729
  453   -0.3846153846    0.5000000000    0.3157894737    0.0005060729
  454   -0.3846153846    0.5000000000    0.3684210526    0.0005060729
  455   -0.3846153846    0.5000000000    0.4210526316    0.0005060729
  456   -0.3846153846    0.5000000000    0.4736842105    0.0005060729
  457   -0.3461538462   -0.3750000000   -0.4736842105    0.0005060729
  458   -0.3461538462   -0.3750000000   -0.4210526316    0.0005060729
  459   -0.3461538462   -0.3750000000   -0.3684210526    0.0005060729
  460   -0.3461538462   -0.3750000000   -0.3157894737    0.0005060729
  461   -0.3461538462   -0.3750000000   -0.2631578947    0.0005060729
  462   -0.3461538462   -0.3750000000   -0.2105263158    0.0005060729
  463   -0.3461538462   -0.3750000000   -0.1578947368    0.0005060729
  464   -0.3461538462   -0.3750000000   -0.1052631579    0.0005060729
  465   -0.3461538462   -0.3750000000   -0.0526315789    0.0005060729
  466   -0.3461538462   -0.3750000000    0.0000000000    0.0005060729
  467   -0.3461538462   -0.3750000000    0.0526315789    0.0005060729
  468   -0.3461538462   -0.3750000000    0.1052631579    0.0005060729
  469   -0.3461538462   -0.3750000000    0.1578947368    0.0005060729
  470   -0.3461538462   -0.3750000000    0.2105263158    0.0005060729
  471   -0.3461538462   -0.3750000000    0.2631578947    0.0005060729
  472   -0.3461538462   -0.3750000000    0.3157894737    0.0005060729
  473   -0.3461538462   -0.3750000000    0.3684210526    0.0005060729
  474   -0.3461538462   -0.3750000000    0.4210526316    0.0005060729
  475   -0.3461538462   -0.3750000000    0.4736842105    0.0005060729
  476   -0.3461538462   -0.2500000000   -0.4736842105    0.0005060729
  477   -0.3461538462   -0.2500000000   -0.4210526316    0.0005060729
  478   -0.3461538462   -0.2500000000   -0.3684210526    0.0005060729
  479   -0.3461538462   -0.2500000000   -0.3157894737    0.0005060729
  480   -0.3461538462   -0.2500000000   -0.2631578947    0.0005060729
  481   -0.3461538462   -0.2500000000   -0.2105263158    0.0005060729
  482   -0.3461538462   -0.2500000000   -0.1578947368    0.0005060729
  483   -0.3461538462   -0.2500000000   -0.1052631579    0.0005060729
  484   -0.3461538462   -0.2500000000   -0.0526315789    0.0005060729
  485   -0.3461538462   -0.2500000000    0.0000000000    0.0005060729
  486   -0.3461538462   -0.2500000000    0.0526315789    0.0005060729
  487   -0.3461538462   -0.2500000000    0.1052631579    0.0005060729
  488   -0.3461538462   -0.2500000000    0.1578947368    0.0005060729
  489   -0.3461538462   -0.2500000000    0.2105263158    0.0005060729
  490   -0.3461538462   -0.2500000000    0.2631578947    0.0005060729
  491   -0.3461538462   -0.2500000000    0.3157894737    0.0005060729
  492   -0.3461538462   -0.2500000000    0.3684210526    0.0005060729
  493   -0.3461538462   -0.2500000000    0.4210526316    0.0005060729
  494   -0.3461538462   -0.2500000000    0.4736842105    0.0005060729
  495   -0.3461538462   -0.1250000000   -0.4736842105    0.0005060729
  496   -0.3461538462   -0.1250000000   -0.4210526316    0.0005060729
  497   -0.3461538462   -0.1250000000   -0.3684210526    0.0005060729
  498   -0.3461538462   -0.1250000000   -0.3157894737    0.0005060729
  499   -0.3461538462   -0.1250000000   -0.2631578947    0.0005060729
  500   -0.3461538462   -0.1250000000   -0.2105263158    0.0005060729
  501   -0.3461538462   -0.1250000000   -0.1578947368    0.0005060729
  502   -0.3461538462   -0.1250000000   -0.1052631579    0.0005060729
  503   -0.3461538462   -0.1250000000   -0.0526315789    0.0005060729
  504   -0.3461538462   -0.1250000000    0.0000000000    0.0005060729
  505   -0.3461538462   -0.1250000000    0.0526315789    0.0005060729
  506   -0.3461538462   -0.1250000000    0.1052631579    0.0005060729
  507   -0.3461538462   -0.1250000000    0.1578947368    0.0005060729
  508   -0.3461538462   -0.1250000000    0.2105263158    0.0005060729
  509   -0.3461538462   -0.1250000000    0.2631578947    0.0005060729
  510   -0.3461538462   -0.1250000000    0.3157894737    0.0005060729
  511   -0.3461538462   -0.1250000000    0.3684210526    0.0005060729
  512   -0.3461538462   -0.1250000000    0.4210526316    0.0005060729
  513   -0.3461538462   -0.1250000000    0.4736842105    0.0005060729
  514   -0.3461538462    0.0000000000   -0.4736842105    0.0005060729
  515   -0.3461538462    0.0000000000   -0.4210526316    0.0005060729
  516   -0.3461538462    0.0000000000   -0.3684210526    0.0005060729
  517   -0.3461538462    0.0000000000   -0.3157894737    0.0005060729
  518   -0.3461538462    0.0000000000   -0.2631578947    0.0005060729
  519   -0.3461538462    0.0000000000   -0.2105263158    0.0005060729
  520   -0.3461538462    0.0000000000   -0.1578947368    0.0005060729
  521   -0.3461538462    0.0000000000   -0.1052631579    0.0005060729
  522   -0.3461538462    0.0000000000   -0.0526315789    0.0005060729
  523   -0.3461538462    0.0000000000    0.0000000000    0.0005060729
  524   -0.3461538462    0.0000000000    0.0526315789    0.0005060729
  525   -0.3461538462    0.0000000000    0.1052631579    0.0005060729
  526   -0.3461538462    0.0000000000    0.1578947368    0.0005060729
  527   -0.3461538462    0.0000000000    0.2105263158    0.0005060729
  528   -0.3461538462    0.0000000000    0.2631578947    0.0005060729
  529   -0.3461538462    0.0000000000    0.3157894737    0.0005060729
  530   -0.3461538462    0.0000000000    0.3684210526    0.0005060729
  531   -0.3461538462    0.0000000000    0.4210526316    0.0005060729
  532   -0.3461538462    0.0000000000    0.4736842105    0.0005060729
  533   -0.3461538462    0.1250000000   -0.4736842105    0.0005060729
  534   -0.3461538462    0.1250000000   -0.4210526316    0.0005060729
  535   -0.3461538462    0.1250000000   -0.3684210526    0.0005060729
  536   -0.3461538462    0.1250000000   -0.3157894737    0.0005060729
  537   -0.3461538462    0.1250000000   -0.2631578947    0.0005060729
  538   -0.3461538462    0.1250000000   -0.2105263158    0.0005060729
  539   -0.3461538462    0.1250000000   -0.1578947368    0.0005060729
  540   -0.3461538462    0.1250000000   -0.1052631579    0.0005060729
  541   -0.3461538462    0.1250000000   -0.0526315789    0.0005060729
  542   -0.3461538462    0.1250000000    0.0000000000    0.0005060729
  543   -0.3461538462    0.1250000000    0.0526315789    0.0005060729
  544   -0.3461538462    0.1250000000    0.1052631579    0.0005060729
  545   -0.3461538462    0.1250000000    0.1578947368    0.0005060729
  546   -0.3461538462    0.1250000000    0.2105263158    0.0005060729
  547   -0.3461538462    0.1250000000    0.2631578947    0.0005060729
  548   -0.3461538462    0.1250000000    0.3157894737    0.0005060729
  549   -0.3461538462    0.1250000000    0.3684210526    0.0005060729
  550   -0.3461538462    0.1250000000    0.4210526316    0.0005060729
  551   -0.3461538462    0.1250000000    0.4736842105    0.0005060729
  552   -0.3461538462    0.2500000000   -0.4736842105    0.0005060729
  553   -0.3461538462    0.2500000000   -0.4210526316    0.0005060729
  554   -0.3461538462    0.2500000000   -0.3684210526    0.0005060729
  555   -0.3461538462    0.2500000000   -0.3157894737    0.0005060729
  556   -0.3461538462    0.2500000000   -0.2631578947    0.0005060729
  557   -0.3461538462    0.2500000000   -0.2105263158    0.0005060729
  558   -0.3461538462    0.2500000000   -0.1578947368    0.0005060729
  559   -0.3461538462    0.2500000000   -0.1052631579    0.0005060729
  560   -0.3461538462    0.2500000000   -0.0526315789    0.0005060729
  561   -0.3461538462    0.2500000000    0.0000000000    0.0005060729
  562   -0.3461538462    0.2500000000    0.0526315789    0.0005060729
  563   -0.3461538462    0.2500000000    0.1052631579    0.0005060729
  564   -0.3461538462    0.2500000000    0.1578947368    0.0005060729
  565   -0.3461538462    0.2500000000    0.2105263158    0.0005060729
  566   -0.3461538462    0.2500000000    0.2631578947    0.0005060729
  567   -0.3461538462    0.2500000000    0.3157894737    0.0005060729
  568   -0.3461538462    0.2500000000    0.3684210526    0.0005060729
  569   -0.3461538462    0.2500000000    0.4210526316    0.0005060729
  570   -0.3461538462    0.2500000000    0.4736842105    0.0005060729
  571   -0.3461538462    0.3750000000   -0.4736842105    0.0005060729
  572   -0.3461538462    0.3750000000   -0.4210526316    0.0005060729
  573   -0.3461538462    0.3750000000   -0.3684210526    0.0005060729
  574   -0.3461538462    0.3750000000   -0.3157894737    0.0005060729
  575   -0.3461538462    0.3750000000   -0.2631578947    0.0005060729
  576   -0.3461538462    0.3750000000   -0.2105263158    0.0005060729
  577   -0.3461538462    0.3750000000   -0.1578947368    0.0005060729
  578   -0.3461538462    0.3750000000   -0.1052631579    0.0005060729
  579   -0.3461538462    0.3750000000   -0.0526315789    0.0005060729
  580   -0.3461538462    0.3750000000    0.0000000000    0.0005060729
  581   -0.3461538462    0.3750000000    0.0526315789    0.0005060729
  582   -0.3461538462    0.3750000000    0.1052631579    0.0005060729
  583   -0.3461538462    0.3750000000    0.1578947368    0.0005060729
  584   -0.3461538462    0.3750000000    0.2105263158    0.0005060729
  585   -0.3461538462    0.3750000000    0.2631578947    0.0005060729
  586   -0.3461538462    0.3750000000    0.3157894737    0.0005060729
  587   -0.3461538462    0.3750000000    0.3684210526    0.0005060729
  588   -0.3461538462    0.3750000000    0.4210526316    0.0005060729
  589   -0.3461538462    0.3750000000    0.4736842105    0.0005060729
  590   -0.3461538462    0.5000000000   -0.4736842105    0.0005060729
  591   -0.3461538462    0.5000000000   -0.4210526316    0.0005060729
  592   -0.3461538462    0.5000000000   -0.3684210526    0.0005060729
  593   -0.3461538462    0.5000000000   -0.3157894737    0.0005060729
  594   -0.3461538462    0.5000000000   -0.2631578947    0.0005060729
  595   -0.3461538462    0.5000000000   -0.2105263158    0.0005060729
  596   -0.3461538462    0.5000000000   -0.1578947368    0.0005060729
  597   -0.3461538462    0.5000000000   -0.1052631579    0.0005060729
  598   -0.3461538462    0.5000000000   -0.0526315789    0.0005060729
  599   -0.3461538462    0.5000000000    0.0000000000    0.0005060729
  600   -0.3461538462    0.5000000000    0.0526315789    0.0005060729
  601   -0.3461538462    0.5000000000    0.1052631579    0.0005060729
  602   -0.3461538462    0.5000000000    0.1578947368    0.0005060729
  603   -0.3461538462    0.5000000000    0.2105263158    0.0005060729
  604   -0.3461538462    0.5000000000    0.2631578947    0.0005060729
  605   -0.3461538462    0.5000000000    0.3157894737    0.0005060729
  606   -0.3461538462    0.5000000000    0.3684210526    0.0005060729
  607   -0.3461538462    0.5000000000    0.4210526316    0.0005060729
  608   -0.3461538462    0.5000000000    0.4736842105    0.0005060729
  609   -0.3076923077   -0.3750000000   -0.4736842105    0.0005060729
  610   -0.3076923077   -0.3750000000   -0.4210526316    0.0005060729
  611   -0.3076923077   -0.3750000000   -0.3684210526    0.0005060729
  612   -0.3076923077   -0.3750000000   -0.3157894737    0.0005060729
  613   -0.3076923077   -0.3750000000   -0.2631578947    0.0005060729
  614   -0.3076923077   -0.3750000000   -0.2105263158    0.0005060729
  615   -0.3076923077   -0.3750000000   -0.1578947368    0.0005060729
  616   -0.3076923077   -0.3750000000   -0.1052631579    0.0005060729
  617   -0.3076923077   -0.3750000000   -0.0526315789    0.0005060729
  618   -0.3076923077   -0.3750000000    0.0000000000    0.0005060729
  619   -0.3076923077   -0.3750000000    0.0526315789    0.0005060729
  620   -0.3076923077   -0.3750000000    0.1052631579    0.0005060729
  621   -0.3076923077   -0.3750000000    0.1578947368    0.0005060729
  622   -0.3076923077   -0.3750000000    0.2105263158    0.0005060729
  623   -0.3076923077   -0.3750000000    0.2631578947    0.0005060729
  624   -0.3076923077   -0.3750000000    0.3157894737    0.0005060729
  625   -0.3076923077   -0.3750000000    0.3684210526    0.0005060729
  626   -0.3076923077   -0.3750000000    0.4210526316    0.0005060729
  627   -0.3076923077   -0.3750000000    0.4736842105    0.0005060729
  628   -0.3076923077   -0.2500000000   -0.4736842105    0.0005060729
  629   -0.3076923077   -0.2500000000   -0.4210526316    0.0005060729
  630   -0.3076923077   -0.2500000000   -0.3684210526    0.0005060729
  631   -0.3076923077   -0.2500000000   -0.3157894737    0.0005060729
  632   -0.3076923077   -0.2500000000   -0.2631578947    0.0005060729
  633   -0.3076923077   -0.2500000000   -0.2105263158    0.0005060729
  634   -0.3076923077   -0.2500000000   -0.1578947368    0.0005060729
  635   -0.3076923077   -0.2500000000   -0.1052631579    0.0005060729
  636   -0.3076923077   -0.2500000000   -0.0526315789    0.0005060729
  637   -0.3076923077   -0.2500000000    0.0000000000    0.0005060729
  638   -0.3076923077   -0.2500000000    0.0526315789    0.0005060729
  639   -0.3076923077   -0.2500000000    0.1052631579    0.0005060729
  640   -0.3076923077   -0.2500000000    0.1578947368    0.0005060729
  641   -0.3076923077   -0.2500000000    0.2105263158    0.0005060729
  642   -0.3076923077   -0.2500000000    0.2631578947    0.0005060729
  643   -0.3076923077   -0.2500000000    0.3157894737    0.0005060729
  644   -0.3076923077   -0.2500000000    0.3684210526    0.0005060729
  645   -0.3076923077   -0.2500000000    0.4210526316    0.0005060729
  646   -0.3076923077   -0.2500000000    0.4736842105    0.0005060729
  647   -0.3076923077   -0.1250000000   -0.4736842105    0.0005060729
  648   -0.3076923077   -0.1250000000   -0.4210526316    0.0005060729
  649   -0.3076923077   -0.1250000000   -0.3684210526    0.0005060729
  650   -0.3076923077   -0.1250000000   -0.3157894737    0.0005060729
  651   -0.3076923077   -0.1250000000   -0.2631578947    0.0005060729
  652   -0.3076923077   -0.1250000000   -0.2105263158    0.0005060729
  653   -0.3076923077   -0.1250000000   -0.1578947368    0.0005060729
  654   -0.3076923077   -0.1250000000   -0.1052631579    0.0005060729
  655   -0.3076923077   -0.1250000000   -0.0526315789    0.0005060729
  656   -0.3076923077   -0.1250000000    0.0000000000    0.0005060729
  657   -0.3076923077   -0.1250000000    0.0526315789    0.0005060729
  658   -0.3076923077   -0.1250000000    0.1052631579    0.0005060729
  659   -0.3076923077   -0.1250000000    0.1578947368    0.0005060729
  660   -0.3076923077   -0.1250000000    0.2105263158    0.0005060729
  661   -0.3076923077   -0.1250000000    0.2631578947    0.0005060729
  662   -0.3076923077   -0.1250000000    0.3157894737    0.0005060729
  663   -0.3076923077   -0.1250000000    0.3684210526    0.0005060729
  664   -0.3076923077   -0.1250000000    0.4210526316    0.0005060729
  665   -0.3076923077   -0.1250000000    0.4736842105    0.0005060729
  666   -0.3076923077    0.0000000000   -0.4736842105    0.0005060729
  667   -0.3076923077    0.0000000000   -0.4210526316    0.0005060729
  668   -0.3076923077    0.0000000000   -0.3684210526    0.0005060729
  669   -0.3076923077    0.0000000000   -0.3157894737    0.0005060729
  670   -0.3076923077    0.0000000000   -0.2631578947    0.0005060729
  671   -0.3076923077    0.0000000000   -0.2105263158    0.0005060729
  672   -0.3076923077    0.0000000000   -0.1578947368    0.0005060729
  673   -0.3076923077    0.0000000000   -0.1052631579    0.0005060729
  674   -0.3076923077    0.0000000000   -0.0526315789    0.0005060729
  675   -0.3076923077    0.0000000000    0.0000000000    0.0005060729
  676   -0.3076923077    0.0000000000    0.0526315789    0.0005060729
  677   -0.3076923077    0.0000000000    0.1052631579    0.0005060729
  678   -0.3076923077    0.0000000000    0.1578947368    0.0005060729
  679   -0.3076923077    0.0000000000    0.2105263158    0.0005060729
  680   -0.3076923077    0.0000000000    0.2631578947    0.0005060729
  681   -0.3076923077    0.0000000000    0.3157894737    0.0005060729
  682   -0.3076923077    0.0000000000    0.3684210526    0.0005060729
  683   -0.3076923077    0.0000000000    0.4210526316    0.0005060729
  684   -0.3076923077    0.0000000000    0.4736842105    0.0005060729
  685   -0.3076923077    0.1250000000   -0.4736842105    0.0005060729
  686   -0.3076923077    0.1250000000   -0.4210526316    0.0005060729
  687   -0.3076923077    0.1250000000   -0.3684210526    0.0005060729
  688   -0.3076923077    0.1250000000   -0.3157894737    0.0005060729
  689   -0.3076923077    0.1250000000   -0.2631578947    0.0005060729
  690   -0.3076923077    0.1250000000   -0.2105263158    0.0005060729
  691   -0.3076923077    0.1250000000   -0.1578947368    0.0005060729
  692   -0.3076923077    0.1250000000   -0.1052631579    0.0005060729
  693   -0.3076923077    0.1250000000   -0.0526315789    0.0005060729
  694   -0.3076923077    0.1250000000    0.0000000000    0.0005060729
  695   -0.3076923077    0.1250000000    0.0526315789    0.0005060729
  696   -0.3076923077    0.1250000000    0.1052631579    0.0005060729
  697   -0.3076923077    0.1250000000    0.1578947368    0.0005060729
  698   -0.3076923077    0.1250000000    0.2105263158    0.0005060729
  699   -0.3076923077    0.1250000000    0.2631578947    0.0005060729
  700   -0.3076923077    0.1250000000    0.3157894737    0.0005060729
  701   -0.3076923077    0.1250000000    0.3684210526    0.0005060729
  702   -0.3076923077    0.1250000000    0.4210526316    0.0005060729
  703   -0.3076923077    0.1250000000    0.4736842105    0.0005060729
  704   -0.3076923077    0.2500000000   -0.4736842105    0.0005060729
  705   -0.3076923077    0.2500000000   -0.4210526316    0.0005060729
  706   -0.3076923077    0.2500000000   -0.3684210526    0.0005060729
  707   -0.3076923077    0.2500000000   -0.3157894737    0.0005060729
  708   -0.3076923077    0.2500000000   -0.2631578947    0.0005060729
  709   -0.3076923077    0.2500000000   -0.2105263158    0.0005060729
  710   -0.3076923077    0.2500000000   -0.1578947368    0.0005060729
  711   -0.3076923077    0.2500000000   -0.1052631579    0.0005060729
  712   -0.3076923077    0.2500000000   -0.0526315789    0.0005060729
  713   -0.3076923077    0.2500000000    0.0000000000    0.0005060729
  714   -0.3076923077    0.2500000000    0.0526315789    0.0005060729
  715   -0.3076923077    0.2500000000    0.1052631579    0.0005060729
  716   -0.3076923077    0.2500000000    0.1578947368    0.0005060729
  717   -0.3076923077    0.2500000000    0.2105263158    0.0005060729
  718   -0.3076923077    0.2500000000    0.2631578947    0.0005060729
  719   -0.3076923077    0.2500000000    0.3157894737    0.0005060729
  720   -0.3076923077    0.2500000000    0.3684210526    0.0005060729
  721   -0.3076923077    0.2500000000    0.4210526316    0.0005060729
  722   -0.3076923077    0.2500000000    0.4736842105    0.0005060729
  723   -0.3076923077    0.3750000000   -0.4736842105    0.0005060729
  724   -0.3076923077    0.3750000000   -0.4210526316    0.0005060729
  725   -0.3076923077    0.3750000000   -0.3684210526    0.0005060729
  726   -0.3076923077    0.3750000000   -0.3157894737    0.0005060729
  727   -0.3076923077    0.3750000000   -0.2631578947    0.0005060729
  728   -0.3076923077    0.3750000000   -0.2105263158    0.0005060729
  729   -0.3076923077    0.3750000000   -0.1578947368    0.0005060729
  730   -0.3076923077    0.3750000000   -0.1052631579    0.0005060729
  731   -0.3076923077    0.3750000000   -0.0526315789    0.0005060729
  732   -0.3076923077    0.3750000000    0.0000000000    0.0005060729
  733   -0.3076923077    0.3750000000    0.0526315789    0.0005060729
  734   -0.3076923077    0.3750000000    0.1052631579    0.0005060729
  735   -0.3076923077    0.3750000000    0.1578947368    0.0005060729
  736   -0.3076923077    0.3750000000    0.2105263158    0.0005060729
  737   -0.3076923077    0.3750000000    0.2631578947    0.0005060729
  738   -0.3076923077    0.3750000000    0.3157894737    0.0005060729
  739   -0.3076923077    0.3750000000    0.3684210526    0.0005060729
  740   -0.3076923077    0.3750000000    0.4210526316    0.0005060729
  741   -0.3076923077    0.3750000000    0.4736842105    0.0005060729
  742   -0.3076923077    0.5000000000   -0.4736842105    0.0005060729
  743   -0.3076923077    0.5000000000   -0.4210526316    0.0005060729
  744   -0.3076923077    0.5000000000   -0.3684210526    0.0005060729
  745   -0.3076923077    0.5000000000   -0.3157894737    0.0005060729
  746   -0.3076923077    0.5000000000   -0.2631578947    0.0005060729
  747   -0.3076923077    0.5000000000   -0.2105263158    0.0005060729
  748   -0.3076923077    0.5000000000   -0.1578947368    0.0005060729
  749   -0.3076923077    0.5000000000   -0.1052631579    0.0005060729
  750   -0.3076923077    0.5000000000   -0.0526315789    0.0005060729
  751   -0.3076923077    0.5000000000    0.0000000000    0.0005060729
  752   -0.3076923077    0.5000000000    0.0526315789    0.0005060729
  753   -0.3076923077    0.5000000000    0.1052631579    0.0005060729
  754   -0.3076923077    0.5000000000    0.1578947368    0.0005060729
  755   -0.3076923077    0.5000000000    0.2105263158    0.0005060729
  756   -0.3076923077    0.5000000000    0.2631578947    0.0005060729
  757   -0.3076923077    0.5000000000    0.3157894737    0.0005060729
  758   -0.3076923077    0.5000000000    0.3684210526    0.0005060729
  759   -0.3076923077    0.5000000000    0.4210526316    0.0005060729
  760   -0.3076923077    0.5000000000    0.4736842105    0.0005060729
  761   -0.2692307692   -0.3750000000   -0.4736842105    0.0005060729
  762   -0.2692307692   -0.3750000000   -0.4210526316    0.0005060729
  763   -0.2692307692   -0.3750000000   -0.3684210526    0.0005060729
  764   -0.2692307692   -0.3750000000   -0.3157894737    0.0005060729
  765   -0.2692307692   -0.3750000000   -0.2631578947    0.0005060729
  766   -0.2692307692   -0.3750000000   -0.2105263158    0.0005060729
  767   -0.2692307692   -0.3750000000   -0.1578947368    0.0005060729
  768   -0.2692307692   -0.3750000000   -0.1052631579    0.0005060729
  769   -0.2692307692   -0.3750000000   -0.0526315789    0.0005060729
  770   -0.2692307692   -0.3750000000    0.0000000000    0.0005060729
  771   -0.2692307692   -0.3750000000    0.0526315789    0.0005060729
  772   -0.2692307692   -0.3750000000    0.1052631579    0.0005060729
  773   -0.2692307692   -0.3750000000    0.1578947368    0.0005060729
  774   -0.2692307692   -0.3750000000    0.2105263158    0.0005060729
  775   -0.2692307692   -0.3750000000    0.2631578947    0.0005060729
  776   -0.2692307692   -0.3750000000    0.3157894737    0.0005060729
  777   -0.2692307692   -0.3750000000    0.3684210526    0.0005060729
  778   -0.2692307692   -0.3750000000    0.4210526316    0.0005060729
  779   -0.2692307692   -0.3750000000    0.4736842105    0.0005060729
  780   -0.2692307692   -0.2500000000   -0.4736842105    0.0005060729
  781   -0.2692307692   -0.2500000000   -0.4210526316    0.0005060729
  782   -0.2692307692   -0.2500000000   -0.3684210526    0.0005060729
  783   -0.2692307692   -0.2500000000   -0.3157894737    0.0005060729
  784   -0.2692307692   -0.2500000000   -0.2631578947    0.0005060729
  785   -0.2692307692   -0.2500000000   -0.2105263158    0.0005060729
  786   -0.2692307692   -0.2500000000   -0.1578947368    0.0005060729
  787   -0.2692307692   -0.2500000000   -0.1052631579    0.0005060729
  788   -0.2692307692   -0.2500000000   -0.0526315789    0.0005060729
  789   -0.2692307692   -0.2500000000    0.0000000000    0.0005060729
  790   -0.2692307692   -0.2500000000    0.0526315789    0.0005060729
  791   -0.2692307692   -0.2500000000    0.1052631579    0.0005060729
  792   -0.2692307692   -0.2500000000    0.1578947368    0.0005060729
  793   -0.2692307692   -0.2500000000    0.2105263158    0.0005060729
  794   -0.2692307692   -0.2500000000    0.2631578947    0.0005060729
  795   -0.2692307692   -0.2500000000    0.3157894737    0.0005060729
  796   -0.2692307692   -0.2500000000    0.3684210526    0.0005060729
  797   -0.2692307692   -0.2500000000    0.4210526316    0.0005060729
  798   -0.2692307692   -0.2500000000    0.4736842105    0.0005060729
  799   -0.2692307692   -0.1250000000   -0.4736842105    0.0005060729
  800   -0.2692307692   -0.1250000000   -0.4210526316    0.0005060729
  801   -0.2692307692   -0.1250000000   -0.3684210526    0.0005060729
  802   -0.2692307692   -0.1250000000   -0.3157894737    0.0005060729
  803   -0.2692307692   -0.1250000000   -0.2631578947    0.0005060729
  804   -0.2692307692   -0.1250000000   -0.2105263158    0.0005060729
  805   -0.2692307692   -0.1250000000   -0.1578947368    0.0005060729
  806   -0.2692307692   -0.1250000000   -0.1052631579    0.0005060729
  807   -0.2692307692   -0.1250000000   -0.0526315789    0.0005060729
  808   -0.2692307692   -0.1250000000    0.0000000000    0.0005060729
  809   -0.2692307692   -0.1250000000    0.0526315789    0.0005060729
  810   -0.2692307692   -0.1250000000    0.1052631579    0.0005060729
  811   -0.2692307692   -0.1250000000    0.1578947368    0.0005060729
  812   -0.2692307692   -0.1250000000    0.2105263158    0.0005060729
  813   -0.2692307692   -0.1250000000    0.2631578947    0.0005060729
  814   -0.2692307692   -0.1250000000    0.3157894737    0.0005060729
  815   -0.2692307692   -0.1250000000    0.3684210526    0.0005060729
  816   -0.2692307692   -0.1250000000    0.4210526316    0.0005060729
  817   -0.2692307692   -0.1250000000    0.4736842105    0.0005060729
  818   -0.2692307692    0.0000000000   -0.4736842105    0.0005060729
  819   -0.2692307692    0.0000000000   -0.4210526316    0.0005060729
  820   -0.2692307692    0.0000000000   -0.3684210526    0.0005060729
  821   -0.2692307692    0.0000000000   -0.3157894737    0.0005060729
  822   -0.2692307692    0.0000000000   -0.2631578947    0.0005060729
  823   -0.2692307692    0.0000000000   -0.2105263158    0.0005060729
  824   -0.2692307692    0.0000000000   -0.1578947368    0.0005060729
  825   -0.2692307692    0.0000000000   -0.1052631579    0.0005060729
  826   -0.2692307692    0.0000000000   -0.0526315789    0.0005060729
  827   -0.2692307692    0.0000000000    0.0000000000    0.0005060729
  828   -0.2692307692    0.0000000000    0.0526315789    0.0005060729
  829   -0.2692307692    0.0000000000    0.1052631579    0.0005060729
  830   -0.2692307692    0.0000000000    0.1578947368    0.0005060729
  831   -0.2692307692    0.0000000000    0.2105263158    0.0005060729
  832   -0.2692307692    0.0000000000    0.2631578947    0.0005060729
  833   -0.2692307692    0.0000000000    0.3157894737    0.0005060729
  834   -0.2692307692    0.0000000000    0.3684210526    0.0005060729
  835   -0.2692307692    0.0000000000    0.4210526316    0.0005060729
  836   -0.2692307692    0.0000000000    0.4736842105    0.0005060729
  837   -0.2692307692    0.1250000000   -0.4736842105    0.0005060729
  838   -0.2692307692    0.1250000000   -0.4210526316    0.0005060729
  839   -0.2692307692    0.1250000000   -0.3684210526    0.0005060729
  840   -0.2692307692    0.1250000000   -0.3157894737    0.0005060729
  841   -0.2692307692    0.1250000000   -0.2631578947    0.0005060729
  842   -0.2692307692    0.1250000000   -0.2105263158    0.0005060729
  843   -0.2692307692    0.1250000000   -0.1578947368    0.0005060729
  844   -0.2692307692    0.1250000000   -0.1052631579    0.0005060729
  845   -0.2692307692    0.1250000000   -0.0526315789    0.0005060729
  846   -0.2692307692    0.1250000000    0.0000000000    0.0005060729
  847   -0.2692307692    0.1250000000    0.0526315789    0.0005060729
  848   -0.2692307692    0.1250000000    0.1052631579    0.0005060729
  849   -0.2692307692    0.1250000000    0.1578947368    0.0005060729
  850   -0.2692307692    0.1250000000    0.2105263158    0.0005060729
  851   -0.2692307692    0.1250000000    0.2631578947    0.0005060729
  852   -0.2692307692    0.1250000000    0.3157894737    0.0005060729
  853   -0.2692307692    0.1250000000    0.3684210526    0.0005060729
  854   -0.2692307692    0.1250000000    0.4210526316    0.0005060729
  855   -0.2692307692    0.1250000000    0.4736842105    0.0005060729
  856   -0.2692307692    0.2500000000   -0.4736842105    0.0005060729
  857   -0.2692307692    0.2500000000   -0.4210526316    0.0005060729
  858   -0.2692307692    0.2500000000   -0.3684210526    0.0005060729
  859   -0.2692307692    0.2500000000   -0.3157894737    0.0005060729
  860   -0.2692307692    0.2500000000   -0.2631578947    0.0005060729
  861   -0.2692307692    0.2500000000   -0.2105263158    0.0005060729
  862   -0.2692307692    0.2500000000   -0.1578947368    0.0005060729
  863   -0.2692307692    0.2500000000   -0.1052631579    0.0005060729
  864   -0.2692307692    0.2500000000   -0.0526315789    0.0005060729
  865   -0.2692307692    0.2500000000    0.0000000000    0.0005060729
  866   -0.2692307692    0.2500000000    0.0526315789    0.0005060729
  867   -0.2692307692    0.2500000000    0.1052631579    0.0005060729
  868   -0.2692307692    0.2500000000    0.1578947368    0.0005060729
  869   -0.2692307692    0.2500000000    0.2105263158    0.0005060729
  870   -0.2692307692    0.2500000000    0.2631578947    0.0005060729
  871   -0.2692307692    0.2500000000    0.3157894737    0.0005060729
  872   -0.2692307692    0.2500000000    0.3684210526    0.0005060729
  873   -0.2692307692    0.2500000000    0.4210526316    0.0005060729
  874   -0.2692307692    0.2500000000    0.4736842105    0.0005060729
  875   -0.2692307692    0.3750000000   -0.4736842105    0.0005060729
  876   -0.2692307692    0.3750000000   -0.4210526316    0.0005060729
  877   -0.2692307692    0.3750000000   -0.3684210526    0.0005060729
  878   -0.2692307692    0.3750000000   -0.3157894737    0.0005060729
  879   -0.2692307692    0.3750000000   -0.2631578947    0.0005060729
  880   -0.2692307692    0.3750000000   -0.2105263158    0.0005060729
  881   -0.2692307692    0.3750000000   -0.1578947368    0.0005060729
  882   -0.2692307692    0.3750000000   -0.1052631579    0.0005060729
  883   -0.2692307692    0.3750000000   -0.0526315789    0.0005060729
  884   -0.2692307692    0.3750000000    0.0000000000    0.0005060729
  885   -0.2692307692    0.3750000000    0.0526315789    0.0005060729
  886   -0.2692307692    0.3750000000    0.1052631579    0.0005060729
  887   -0.2692307692    0.3750000000    0.1578947368    0.0005060729
  888   -0.2692307692    0.3750000000    0.2105263158    0.0005060729
  889   -0.2692307692    0.3750000000    0.2631578947    0.0005060729
  890   -0.2692307692    0.3750000000    0.3157894737    0.0005060729
  891   -0.2692307692    0.3750000000    0.3684210526    0.0005060729
  892   -0.2692307692    0.3750000000    0.4210526316    0.0005060729
  893   -0.2692307692    0.3750000000    0.4736842105    0.0005060729
  894   -0.2692307692    0.5000000000   -0.4736842105    0.0005060729
  895   -0.2692307692    0.5000000000   -0.4210526316    0.0005060729
  896   -0.2692307692    0.5000000000   -0.3684210526    0.0005060729
  897   -0.2692307692    0.5000000000   -0.3157894737    0.0005060729
  898   -0.2692307692    0.5000000000   -0.2631578947    0.0005060729
  899   -0.2692307692    0.5000000000   -0.2105263158    0.0005060729
  900   -0.2692307692    0.5000000000   -0.1578947368    0.0005060729
  901   -0.2692307692    0.5000000000   -0.1052631579    0.0005060729
  902   -0.2692307692    0.5000000000   -0.0526315789    0.0005060729
  903   -0.2692307692    0.5000000000    0.0000000000    0.0005060729
  904   -0.2692307692    0.5000000000    0.0526315789    0.0005060729
  905   -0.2692307692    0.5000000000    0.1052631579    0.0005060729
  906   -0.2692307692    0.5000000000    0.1578947368    0.0005060729
  907   -0.2692307692    0.5000000000    0.2105263158    0.0005060729
  908   -0.2692307692    0.5000000000    0.2631578947    0.0005060729
  909   -0.2692307692    0.5000000000    0.3157894737    0.0005060729
  910   -0.2692307692    0.5000000000    0.3684210526    0.0005060729
  911   -0.2692307692    0.5000000000    0.4210526316    0.0005060729
  912   -0.2692307692    0.5000000000    0.4736842105    0.0005060729
  913   -0.2307692308   -0.3750000000   -0.4736842105    0.0005060729
  914   -0.2307692308   -0.3750000000   -0.4210526316    0.0005060729
  915   -0.2307692308   -0.3750000000   -0.3684210526    0.0005060729
  916   -0.2307692308   -0.3750000000   -0.3157894737    0.0005060729
  917   -0.2307692308   -0.3750000000   -0.2631578947    0.0005060729
  918   -0.2307692308   -0.3750000000   -0.2105263158    0.0005060729
  919   -0.2307692308   -0.3750000000   -0.1578947368    0.0005060729
  920   -0.2307692308   -0.3750000000   -0.1052631579    0.0005060729
  921   -0.2307692308   -0.3750000000   -0.0526315789    0.0005060729
  922   -0.2307692308   -0.3750000000    0.0000000000    0.0005060729
  923   -0.2307692308   -0.3750000000    0.0526315789    0.0005060729
  924   -0.2307692308   -0.3750000000    0.1052631579    0.0005060729
  925   -0.2307692308   -0.3750000000    0.1578947368    0.0005060729
  926   -0.2307692308   -0.3750000000    0.2105263158    0.0005060729
  927   -0.2307692308   -0.3750000000    0.2631578947    0.0005060729
  928   -0.2307692308   -0.3750000000    0.3157894737    0.0005060729
  929   -0.2307692308   -0.3750000000    0.3684210526    0.0005060729
  930   -0.2307692308   -0.3750000000    0.4210526316    0.0005060729
  931   -0.2307692308   -0.3750000000    0.4736842105    0.0005060729
  932   -0.2307692308   -0.2500000000   -0.4736842105    0.0005060729
  933   -0.2307692308   -0.2500000000   -0.4210526316    0.0005060729
  934   -0.2307692308   -0.2500000000   -0.3684210526    0.0005060729
  935   -0.2307692308   -0.2500000000   -0.3157894737    0.0005060729
  936   -0.2307692308   -0.2500000000   -0.2631578947    0.0005060729
  937   -0.2307692308   -0.2500000000   -0.2105263158    0.0005060729
  938   -0.2307692308   -0.2500000000   -0.1578947368    0.0005060729
  939   -0.2307692308   -0.2500000000   -0.1052631579    0.0005060729
  940   -0.2307692308   -0.2500000000   -0.0526315789    0.0005060729
  941   -0.2307692308   -0.2500000000    0.0000000000    0.0005060729
  942   -0.2307692308   -0.2500000000    0.0526315789    0.0005060729
  943   -0.2307692308   -0.2500000000    0.1052631579    0.0005060729
  944   -0.2307692308   -0.2500000000    0.1578947368    0.0005060729
  945   -0.2307692308   -0.2500000000    0.2105263158    0.0005060729
  946   -0.2307692308   -0.2500000000    0.2631578947    0.0005060729
  947   -0.2307692308   -0.2500000000    0.3157894737    0.0005060729
  948   -0.2307692308   -0.2500000000    0.3684210526    0.0005060729
  949   -0.2307692308   -0.2500000000    0.4210526316    0.0005060729
  950   -0.2307692308   -0.2500000000    0.4736842105    0.0005060729
  951   -0.2307692308   -0.1250000000   -0.4736842105    0.0005060729
  952   -0.2307692308   -0.1250000000   -0.4210526316    0.0005060729
  953   -0.2307692308   -0.1250000000   -0.3684210526    0.0005060729
  954   -0.2307692308   -0.1250000000   -0.3157894737    0.0005060729
  955   -0.2307692308   -0.1250000000   -0.2631578947    0.0005060729
  956   -0.2307692308   -0.1250000000   -0.2105263158    0.0005060729
  957   -0.2307692308   -0.1250000000   -0.1578947368    0.0005060729
  958   -0.2307692308   -0.1250000000   -0.1052631579    0.0005060729
  959   -0.2307692308   -0.1250000000   -0.0526315789    0.0005060729
  960   -0.2307692308   -0.1250000000    0.0000000000    0.0005060729
  961   -0.2307692308   -0.1250000000    0.0526315789    0.0005060729
  962   -0.2307692308   -0.1250000000    0.1052631579    0.0005060729
  963   -0.2307692308   -0.1250000000    0.1578947368    0.0005060729
  964   -0.2307692308   -0.1250000000    0.2105263158    0.0005060729
  965   -0.2307692308   -0.1250000000    0.2631578947    0.0005060729
  966   -0.2307692308   -0.1250000000    0.3157894737    0.0005060729
  967   -0.2307692308   -0.1250000000    0.3684210526    0.0005060729
  968   -0.2307692308   -0.1250000000    0.4210526316    0.0005060729
  969   -0.2307692308   -0.1250000000    0.4736842105    0.0005060729
  970   -0.2307692308    0.0000000000   -0.4736842105    0.0005060729
  971   -0.2307692308    0.0000000000   -0.4210526316    0.0005060729
  972   -0.2307692308    0.0000000000   -0.3684210526    0.0005060729
  973   -0.2307692308    0.0000000000   -0.3157894737    0.0005060729
  974   -0.2307692308    0.0000000000   -0.2631578947    0.0005060729
  975   -0.2307692308    0.0000000000   -0.2105263158    0.0005060729
  976   -0.2307692308    0.0000000000   -0.1578947368    0.0005060729
  977   -0.2307692308    0.0000000000   -0.1052631579    0.0005060729
  978   -0.2307692308    0.0000000000   -0.0526315789    0.0005060729
  979   -0.2307692308    0.0000000000    0.0000000000    0.0005060729
  980   -0.2307692308    0.0000000000    0.0526315789    0.0005060729
  981   -0.2307692308    0.0000000000    0.1052631579    0.0005060729
  982   -0.2307692308    0.0000000000    0.1578947368    0.0005060729
  983   -0.2307692308    0.0000000000    0.2105263158    0.0005060729
  984   -0.2307692308    0.0000000000    0.2631578947    0.0005060729
  985   -0.2307692308    0.0000000000    0.3157894737    0.0005060729
  986   -0.2307692308    0.0000000000    0.3684210526    0.0005060729
  987   -0.2307692308    0.0000000000    0.4210526316    0.0005060729
  988   -0.2307692308    0.0000000000    0.4736842105    0.0005060729
  989   -0.2307692308    0.1250000000   -0.4736842105    0.0005060729
  990   -0.2307692308    0.1250000000   -0.4210526316    0.0005060729
  991   -0.2307692308    0.1250000000   -0.3684210526    0.0005060729
  992   -0.2307692308    0.1250000000   -0.3157894737    0.0005060729
  993   -0.2307692308    0.1250000000   -0.2631578947    0.0005060729
  994   -0.2307692308    0.1250000000   -0.2105263158    0.0005060729
  995   -0.2307692308    0.1250000000   -0.1578947368    0.0005060729
  996   -0.2307692308    0.1250000000   -0.1052631579    0.0005060729
  997   -0.2307692308    0.1250000000   -0.0526315789    0.0005060729
  998   -0.2307692308    0.1250000000    0.0000000000    0.0005060729
  999   -0.2307692308    0.1250000000    0.0526315789    0.0005060729
 1000   -0.2307692308    0.1250000000    0.1052631579    0.0005060729
 1001   -0.2307692308    0.1250000000    0.1578947368    0.0005060729
 1002   -0.2307692308    0.1250000000    0.2105263158    0.0005060729
 1003   -0.2307692308    0.1250000000    0.2631578947    0.0005060729
 1004   -0.2307692308    0.1250000000    0.3157894737    0.0005060729
 1005   -0.2307692308    0.1250000000    0.3684210526    0.0005060729
 1006   -0.2307692308    0.1250000000    0.4210526316    0.0005060729
 1007   -0.2307692308    0.1250000000    0.4736842105    0.0005060729
 1008   -0.2307692308    0.2500000000   -0.4736842105    0.0005060729
 1009   -0.2307692308    0.2500000000   -0.4210526316    0.0005060729
 1010   -0.2307692308    0.2500000000   -0.3684210526    0.0005060729
 1011   -0.2307692308    0.2500000000   -0.3157894737    0.0005060729
 1012   -0.2307692308    0.2500000000   -0.2631578947    0.0005060729
 1013   -0.2307692308    0.2500000000   -0.2105263158    0.0005060729
 1014   -0.2307692308    0.2500000000   -0.1578947368    0.0005060729
 1015   -0.2307692308    0.2500000000   -0.1052631579    0.0005060729
 1016   -0.2307692308    0.2500000000   -0.0526315789    0.0005060729
 1017   -0.2307692308    0.2500000000    0.0000000000    0.0005060729
 1018   -0.2307692308    0.2500000000    0.0526315789    0.0005060729
 1019   -0.2307692308    0.2500000000    0.1052631579    0.0005060729
 1020   -0.2307692308    0.2500000000    0.1578947368    0.0005060729
 1021   -0.2307692308    0.2500000000    0.2105263158    0.0005060729
 1022   -0.2307692308    0.2500000000    0.2631578947    0.0005060729
 1023   -0.2307692308    0.2500000000    0.3157894737    0.0005060729
 1024   -0.2307692308    0.2500000000    0.3684210526    0.0005060729
 1025   -0.2307692308    0.2500000000    0.4210526316    0.0005060729
 1026   -0.2307692308    0.2500000000    0.4736842105    0.0005060729
 1027   -0.2307692308    0.3750000000   -0.4736842105    0.0005060729
 1028   -0.2307692308    0.3750000000   -0.4210526316    0.0005060729
 1029   -0.2307692308    0.3750000000   -0.3684210526    0.0005060729
 1030   -0.2307692308    0.3750000000   -0.3157894737    0.0005060729
 1031   -0.2307692308    0.3750000000   -0.2631578947    0.0005060729
 1032   -0.2307692308    0.3750000000   -0.2105263158    0.0005060729
 1033   -0.2307692308    0.3750000000   -0.1578947368    0.0005060729
 1034   -0.2307692308    0.3750000000   -0.1052631579    0.0005060729
 1035   -0.2307692308    0.3750000000   -0.0526315789    0.0005060729
 1036   -0.2307692308    0.3750000000    0.0000000000    0.0005060729
 1037   -0.2307692308    0.3750000000    0.0526315789    0.0005060729
 1038   -0.2307692308    0.3750000000    0.1052631579    0.0005060729
 1039   -0.2307692308    0.3750000000    0.1578947368    0.0005060729
 1040   -0.2307692308    0.3750000000    0.2105263158    0.0005060729
 1041   -0.2307692308    0.3750000000    0.2631578947    0.0005060729
 1042   -0.2307692308    0.3750000000    0.3157894737    0.0005060729
 1043   -0.2307692308    0.3750000000    0.3684210526    0.0005060729
 1044   -0.2307692308    0.3750000000    0.4210526316    0.0005060729
 1045   -0.2307692308    0.3750000000    0.4736842105    0.0005060729
 1046   -0.2307692308    0.5000000000   -0.4736842105    0.0005060729
 1047   -0.2307692308    0.5000000000   -0.4210526316    0.0005060729
 1048   -0.2307692308    0.5000000000   -0.3684210526    0.0005060729
 1049   -0.2307692308    0.5000000000   -0.3157894737    0.0005060729
 1050   -0.2307692308    0.5000000000   -0.2631578947    0.0005060729
 1051   -0.2307692308    0.5000000000   -0.2105263158    0.0005060729
 1052   -0.2307692308    0.5000000000   -0.1578947368    0.0005060729
 1053   -0.2307692308    0.5000000000   -0.1052631579    0.0005060729
 1054   -0.2307692308    0.5000000000   -0.0526315789    0.0005060729
 1055   -0.2307692308    0.5000000000    0.0000000000    0.0005060729
 1056   -0.2307692308    0.5000000000    0.0526315789    0.0005060729
 1057   -0.2307692308    0.5000000000    0.1052631579    0.0005060729
 1058   -0.2307692308    0.5000000000    0.1578947368    0.0005060729
 1059   -0.2307692308    0.5000000000    0.2105263158    0.0005060729
 1060   -0.2307692308    0.5000000000    0.2631578947    0.0005060729
 1061   -0.2307692308    0.5000000000    0.3157894737    0.0005060729
 1062   -0.2307692308    0.5000000000    0.3684210526    0.0005060729
 1063   -0.2307692308    0.5000000000    0.4210526316    0.0005060729
 1064   -0.2307692308    0.5000000000    0.4736842105    0.0005060729
 1065   -0.1923076923   -0.3750000000   -0.4736842105    0.0005060729
 1066   -0.1923076923   -0.3750000000   -0.4210526316    0.0005060729
 1067   -0.1923076923   -0.3750000000   -0.3684210526    0.0005060729
 1068   -0.1923076923   -0.3750000000   -0.3157894737    0.0005060729
 1069   -0.1923076923   -0.3750000000   -0.2631578947    0.0005060729
 1070   -0.1923076923   -0.3750000000   -0.2105263158    0.0005060729
 1071   -0.1923076923   -0.3750000000   -0.1578947368    0.0005060729
 1072   -0.1923076923   -0.3750000000   -0.1052631579    0.0005060729
 1073   -0.1923076923   -0.3750000000   -0.0526315789    0.0005060729
 1074   -0.1923076923   -0.3750000000    0.0000000000    0.0005060729
 1075   -0.1923076923   -0.3750000000    0.0526315789    0.0005060729
 1076   -0.1923076923   -0.3750000000    0.1052631579    0.0005060729
 1077   -0.1923076923   -0.3750000000    0.1578947368    0.0005060729
 1078   -0.1923076923   -0.3750000000    0.2105263158    0.0005060729
 1079   -0.1923076923   -0.3750000000    0.2631578947    0.0005060729
 1080   -0.1923076923   -0.3750000000    0.3157894737    0.0005060729
 1081   -0.1923076923   -0.3750000000    0.3684210526    0.0005060729
 1082   -0.1923076923   -0.3750000000    0.4210526316    0.0005060729
 1083   -0.1923076923   -0.3750000000    0.4736842105    0.0005060729
 1084   -0.1923076923   -0.2500000000   -0.4736842105    0.0005060729
 1085   -0.1923076923   -0.2500000000   -0.4210526316    0.0005060729
 1086   -0.1923076923   -0.2500000000   -0.3684210526    0.0005060729
 1087   -0.1923076923   -0.2500000000   -0.3157894737    0.0005060729
 1088   -0.1923076923   -0.2500000000   -0.2631578947    0.0005060729
 1089   -0.1923076923   -0.2500000000   -0.2105263158    0.0005060729
 1090   -0.1923076923   -0.2500000000   -0.1578947368    0.0005060729
 1091   -0.1923076923   -0.2500000000   -0.1052631579    0.0005060729
 1092   -0.1923076923   -0.2500000000   -0.0526315789    0.0005060729
 1093   -0.1923076923   -0.2500000000    0.0000000000    0.0005060729
 1094   -0.1923076923   -0.2500000000    0.0526315789    0.0005060729
 1095   -0.1923076923   -0.2500000000    0.1052631579    0.0005060729
 1096   -0.1923076923   -0.2500000000    0.1578947368    0.0005060729
 1097   -0.1923076923   -0.2500000000    0.2105263158    0.0005060729
 1098   -0.1923076923   -0.2500000000    0.2631578947    0.0005060729
 1099   -0.1923076923   -0.2500000000    0.3157894737    0.0005060729
 1100   -0.1923076923   -0.2500000000    0.3684210526    0.0005060729
 1101   -0.1923076923   -0.2500000000    0.4210526316    0.0005060729
 1102   -0.1923076923   -0.2500000000    0.4736842105    0.0005060729
 1103   -0.1923076923   -0.1250000000   -0.4736842105    0.0005060729
 1104   -0.1923076923   -0.1250000000   -0.4210526316    0.0005060729
 1105   -0.1923076923   -0.1250000000   -0.3684210526    0.0005060729
 1106   -0.1923076923   -0.1250000000   -0.3157894737    0.0005060729
 1107   -0.1923076923   -0.1250000000   -0.2631578947    0.0005060729
 1108   -0.1923076923   -0.1250000000   -0.2105263158    0.0005060729
 1109   -0.1923076923   -0.1250000000   -0.1578947368    0.0005060729
 1110   -0.1923076923   -0.1250000000   -0.1052631579    0.0005060729
 1111   -0.1923076923   -0.1250000000   -0.0526315789    0.0005060729
 1112   -0.1923076923   -0.1250000000    0.0000000000    0.0005060729
 1113   -0.1923076923   -0.1250000000    0.0526315789    0.0005060729
 1114   -0.1923076923   -0.1250000000    0.1052631579    0.0005060729
 1115   -0.1923076923   -0.1250000000    0.1578947368    0.0005060729
 1116   -0.1923076923   -0.1250000000    0.2105263158    0.0005060729
 1117   -0.1923076923   -0.1250000000    0.2631578947    0.0005060729
 1118   -0.1923076923   -0.1250000000    0.3157894737    0.0005060729
 1119   -0.1923076923   -0.1250000000    0.3684210526    0.0005060729
 1120   -0.1923076923   -0.1250000000    0.4210526316    0.0005060729
 1121   -0.1923076923   -0.1250000000    0.4736842105    0.0005060729
 1122   -0.1923076923    0.0000000000   -0.4736842105    0.0005060729
 1123   -0.1923076923    0.0000000000   -0.4210526316    0.0005060729
 1124   -0.1923076923    0.0000000000   -0.3684210526    0.0005060729
 1125   -0.1923076923    0.0000000000   -0.3157894737    0.0005060729
 1126   -0.1923076923    0.0000000000   -0.2631578947    0.0005060729
 1127   -0.1923076923    0.0000000000   -0.2105263158    0.0005060729
 1128   -0.1923076923    0.0000000000   -0.1578947368    0.0005060729
 1129   -0.1923076923    0.0000000000   -0.1052631579    0.0005060729
 1130   -0.1923076923    0.0000000000   -0.0526315789    0.0005060729
 1131   -0.1923076923    0.0000000000    0.0000000000    0.0005060729
 1132   -0.1923076923    0.0000000000    0.0526315789    0.0005060729
 1133   -0.1923076923    0.0000000000    0.1052631579    0.0005060729
 1134   -0.1923076923    0.0000000000    0.1578947368    0.0005060729
 1135   -0.1923076923    0.0000000000    0.2105263158    0.0005060729
 1136   -0.1923076923    0.0000000000    0.2631578947    0.0005060729
 1137   -0.1923076923    0.0000000000    0.3157894737    0.0005060729
 1138   -0.1923076923    0.0000000000    0.3684210526    0.0005060729
 1139   -0.1923076923    0.0000000000    0.4210526316    0.0005060729
 1140   -0.1923076923    0.0000000000    0.4736842105    0.0005060729
 1141   -0.1923076923    0.1250000000   -0.4736842105    0.0005060729
 1142   -0.1923076923    0.1250000000   -0.4210526316    0.0005060729
 1143   -0.1923076923    0.1250000000   -0.3684210526    0.0005060729
 1144   -0.1923076923    0.1250000000   -0.3157894737    0.0005060729
 1145   -0.1923076923    0.1250000000   -0.2631578947    0.0005060729
 1146   -0.1923076923    0.1250000000   -0.2105263158    0.0005060729
 1147   -0.1923076923    0.1250000000   -0.1578947368    0.0005060729
 1148   -0.1923076923    0.1250000000   -0.1052631579    0.0005060729
 1149   -0.1923076923    0.1250000000   -0.0526315789    0.0005060729
 1150   -0.1923076923    0.1250000000    0.0000000000    0.0005060729
 1151   -0.1923076923    0.1250000000    0.0526315789    0.0005060729
 1152   -0.1923076923    0.1250000000    0.1052631579    0.0005060729
 1153   -0.1923076923    0.1250000000    0.1578947368    0.0005060729
 1154   -0.1923076923    0.1250000000    0.2105263158    0.0005060729
 1155   -0.1923076923    0.1250000000    0.2631578947    0.0005060729
 1156   -0.1923076923    0.1250000000    0.3157894737    0.0005060729
 1157   -0.1923076923    0.1250000000    0.3684210526    0.0005060729
 1158   -0.1923076923    0.1250000000    0.4210526316    0.0005060729
 1159   -0.1923076923    0.1250000000    0.4736842105    0.0005060729
 1160   -0.1923076923    0.2500000000   -0.4736842105    0.0005060729
 1161   -0.1923076923    0.2500000000   -0.4210526316    0.0005060729
 1162   -0.1923076923    0.2500000000   -0.3684210526    0.0005060729
 1163   -0.1923076923    0.2500000000   -0.3157894737    0.0005060729
 1164   -0.1923076923    0.2500000000   -0.2631578947    0.0005060729
 1165   -0.1923076923    0.2500000000   -0.2105263158    0.0005060729
 1166   -0.1923076923    0.2500000000   -0.1578947368    0.0005060729
 1167   -0.1923076923    0.2500000000   -0.1052631579    0.0005060729
 1168   -0.1923076923    0.2500000000   -0.0526315789    0.0005060729
 1169   -0.1923076923    0.2500000000    0.0000000000    0.0005060729
 1170   -0.1923076923    0.2500000000    0.0526315789    0.0005060729
 1171   -0.1923076923    0.2500000000    0.1052631579    0.0005060729
 1172   -0.1923076923    0.2500000000    0.1578947368    0.0005060729
 1173   -0.1923076923    0.2500000000    0.2105263158    0.0005060729
 1174   -0.1923076923    0.2500000000    0.2631578947    0.0005060729
 1175   -0.1923076923    0.2500000000    0.3157894737    0.0005060729
 1176   -0.1923076923    0.2500000000    0.3684210526    0.0005060729
 1177   -0.1923076923    0.2500000000    0.4210526316    0.0005060729
 1178   -0.1923076923    0.2500000000    0.4736842105    0.0005060729
 1179   -0.1923076923    0.3750000000   -0.4736842105    0.0005060729
 1180   -0.1923076923    0.3750000000   -0.4210526316    0.0005060729
 1181   -0.1923076923    0.3750000000   -0.3684210526    0.0005060729
 1182   -0.1923076923    0.3750000000   -0.3157894737    0.0005060729
 1183   -0.1923076923    0.3750000000   -0.2631578947    0.0005060729
 1184   -0.1923076923    0.3750000000   -0.2105263158    0.0005060729
 1185   -0.1923076923    0.3750000000   -0.1578947368    0.0005060729
 1186   -0.1923076923    0.3750000000   -0.1052631579    0.0005060729
 1187   -0.1923076923    0.3750000000   -0.0526315789    0.0005060729
 1188   -0.1923076923    0.3750000000    0.0000000000    0.0005060729
 1189   -0.1923076923    0.3750000000    0.0526315789    0.0005060729
 1190   -0.1923076923    0.3750000000    0.1052631579    0.0005060729
 1191   -0.1923076923    0.3750000000    0.1578947368    0.0005060729
 1192   -0.1923076923    0.3750000000    0.2105263158    0.0005060729
 1193   -0.1923076923    0.3750000000    0.2631578947    0.0005060729
 1194   -0.1923076923    0.3750000000    0.3157894737    0.0005060729
 1195   -0.1923076923    0.3750000000    0.3684210526    0.0005060729
 1196   -0.1923076923    0.3750000000    0.4210526316    0.0005060729
 1197   -0.1923076923    0.3750000000    0.4736842105    0.0005060729
 1198   -0.1923076923    0.5000000000   -0.4736842105    0.0005060729
 1199   -0.1923076923    0.5000000000   -0.4210526316    0.0005060729
 1200   -0.1923076923    0.5000000000   -0.3684210526    0.0005060729
 1201   -0.1923076923    0.5000000000   -0.3157894737    0.0005060729
 1202   -0.1923076923    0.5000000000   -0.2631578947    0.0005060729
 1203   -0.1923076923    0.5000000000   -0.2105263158    0.0005060729
 1204   -0.1923076923    0.5000000000   -0.1578947368    0.0005060729
 1205   -0.1923076923    0.5000000000   -0.1052631579    0.0005060729
 1206   -0.1923076923    0.5000000000   -0.0526315789    0.0005060729
 1207   -0.1923076923    0.5000000000    0.0000000000    0.0005060729
 1208   -0.1923076923    0.5000000000    0.0526315789    0.0005060729
 1209   -0.1923076923    0.5000000000    0.1052631579    0.0005060729
 1210   -0.1923076923    0.5000000000    0.1578947368    0.0005060729
 1211   -0.1923076923    0.5000000000    0.2105263158    0.0005060729
 1212   -0.1923076923    0.5000000000    0.2631578947    0.0005060729
 1213   -0.1923076923    0.5000000000    0.3157894737    0.0005060729
 1214   -0.1923076923    0.5000000000    0.3684210526    0.0005060729
 1215   -0.1923076923    0.5000000000    0.4210526316    0.0005060729
 1216   -0.1923076923    0.5000000000    0.4736842105    0.0005060729
 1217   -0.1538461538   -0.3750000000   -0.4736842105    0.0005060729
 1218   -0.1538461538   -0.3750000000   -0.4210526316    0.0005060729
 1219   -0.1538461538   -0.3750000000   -0.3684210526    0.0005060729
 1220   -0.1538461538   -0.3750000000   -0.3157894737    0.0005060729
 1221   -0.1538461538   -0.3750000000   -0.2631578947    0.0005060729
 1222   -0.1538461538   -0.3750000000   -0.2105263158    0.0005060729
 1223   -0.1538461538   -0.3750000000   -0.1578947368    0.0005060729
 1224   -0.1538461538   -0.3750000000   -0.1052631579    0.0005060729
 1225   -0.1538461538   -0.3750000000   -0.0526315789    0.0005060729
 1226   -0.1538461538   -0.3750000000    0.0000000000    0.0005060729
 1227   -0.1538461538   -0.3750000000    0.0526315789    0.0005060729
 1228   -0.1538461538   -0.3750000000    0.1052631579    0.0005060729
 1229   -0.1538461538   -0.3750000000    0.1578947368    0.0005060729
 1230   -0.1538461538   -0.3750000000    0.2105263158    0.0005060729
 1231   -0.1538461538   -0.3750000000    0.2631578947    0.0005060729
 1232   -0.1538461538   -0.3750000000    0.3157894737    0.0005060729
 1233   -0.1538461538   -0.3750000000    0.3684210526    0.0005060729
 1234   -0.1538461538   -0.3750000000    0.4210526316    0.0005060729
 1235   -0.1538461538   -0.3750000000    0.4736842105    0.0005060729
 1236   -0.1538461538   -0.2500000000   -0.4736842105    0.0005060729
 1237   -0.1538461538   -0.2500000000   -0.4210526316    0.0005060729
 1238   -0.1538461538   -0.2500000000   -0.3684210526    0.0005060729
 1239   -0.1538461538   -0.2500000000   -0.3157894737    0.0005060729
 1240   -0.1538461538   -0.2500000000   -0.2631578947    0.0005060729
 1241   -0.1538461538   -0.2500000000   -0.2105263158    0.0005060729
 1242   -0.1538461538   -0.2500000000   -0.1578947368    0.0005060729
 1243   -0.1538461538   -0.2500000000   -0.1052631579    0.0005060729
 1244   -0.1538461538   -0.2500000000   -0.0526315789    0.0005060729
 1245   -0.1538461538   -0.2500000000    0.0000000000    0.0005060729
 1246   -0.1538461538   -0.2500000000    0.0526315789    0.0005060729
 1247   -0.1538461538   -0.2500000000    0.1052631579    0.0005060729
 1248   -0.1538461538   -0.2500000000    0.1578947368    0.0005060729
 1249   -0.1538461538   -0.2500000000    0.2105263158    0.0005060729
 1250   -0.1538461538   -0.2500000000    0.2631578947    0.0005060729
 1251   -0.1538461538   -0.2500000000    0.3157894737    0.0005060729
 1252   -0.1538461538   -0.2500000000    0.3684210526    0.0005060729
 1253   -0.1538461538   -0.2500000000    0.4210526316    0.0005060729
 1254   -0.1538461538   -0.2500000000    0.4736842105    0.0005060729
 1255   -0.1538461538   -0.1250000000   -0.4736842105    0.0005060729
 1256   -0.1538461538   -0.1250000000   -0.4210526316    0.0005060729
 1257   -0.1538461538   -0.1250000000   -0.3684210526    0.0005060729
 1258   -0.1538461538   -0.1250000000   -0.3157894737    0.0005060729
 1259   -0.1538461538   -0.1250000000   -0.2631578947    0.0005060729
 1260   -0.1538461538   -0.1250000000   -0.2105263158    0.0005060729
 1261   -0.1538461538   -0.1250000000   -0.1578947368    0.0005060729
 1262   -0.1538461538   -0.1250000000   -0.1052631579    0.0005060729
 1263   -0.1538461538   -0.1250000000   -0.0526315789    0.0005060729
 1264   -0.1538461538   -0.1250000000    0.0000000000    0.0005060729
 1265   -0.1538461538   -0.1250000000    0.0526315789    0.0005060729
 1266   -0.1538461538   -0.1250000000    0.1052631579    0.0005060729
 1267   -0.1538461538   -0.1250000000    0.1578947368    0.0005060729
 1268   -0.1538461538   -0.1250000000    0.2105263158    0.0005060729
 1269   -0.1538461538   -0.1250000000    0.2631578947    0.0005060729
 1270   -0.1538461538   -0.1250000000    0.3157894737    0.0005060729
 1271   -0.1538461538   -0.1250000000    0.3684210526    0.0005060729
 1272   -0.1538461538   -0.1250000000    0.4210526316    0.0005060729
 1273   -0.1538461538   -0.1250000000    0.4736842105    0.0005060729
 1274   -0.1538461538    0.0000000000   -0.4736842105    0.0005060729
 1275   -0.1538461538    0.0000000000   -0.4210526316    0.0005060729
 1276   -0.1538461538    0.0000000000   -0.3684210526    0.0005060729
 1277   -0.1538461538    0.0000000000   -0.3157894737    0.0005060729
 1278   -0.1538461538    0.0000000000   -0.2631578947    0.0005060729
 1279   -0.1538461538    0.0000000000   -0.2105263158    0.0005060729
 1280   -0.1538461538    0.0000000000   -0.1578947368    0.0005060729
 1281   -0.1538461538    0.0000000000   -0.1052631579    0.0005060729
 1282   -0.1538461538    0.0000000000   -0.0526315789    0.0005060729
 1283   -0.1538461538    0.0000000000    0.0000000000    0.0005060729
 1284   -0.1538461538    0.0000000000    0.0526315789    0.0005060729
 1285   -0.1538461538    0.0000000000    0.1052631579    0.0005060729
 1286   -0.1538461538    0.0000000000    0.1578947368    0.0005060729
 1287   -0.1538461538    0.0000000000    0.2105263158    0.0005060729
 1288   -0.1538461538    0.0000000000    0.2631578947    0.0005060729
 1289   -0.1538461538    0.0000000000    0.3157894737    0.0005060729
 1290   -0.1538461538    0.0000000000    0.3684210526    0.0005060729
 1291   -0.1538461538    0.0000000000    0.4210526316    0.0005060729
 1292   -0.1538461538    0.0000000000    0.4736842105    0.0005060729
 1293   -0.1538461538    0.1250000000   -0.4736842105    0.0005060729
 1294   -0.1538461538    0.1250000000   -0.4210526316    0.0005060729
 1295   -0.1538461538    0.1250000000   -0.3684210526    0.0005060729
 1296   -0.1538461538    0.1250000000   -0.3157894737    0.0005060729
 1297   -0.1538461538    0.1250000000   -0.2631578947    0.0005060729
 1298   -0.1538461538    0.1250000000   -0.2105263158    0.0005060729
 1299   -0.1538461538    0.1250000000   -0.1578947368    0.0005060729
 1300   -0.1538461538    0.1250000000   -0.1052631579    0.0005060729
 1301   -0.1538461538    0.1250000000   -0.0526315789    0.0005060729
 1302   -0.1538461538    0.1250000000    0.0000000000    0.0005060729
 1303   -0.1538461538    0.1250000000    0.0526315789    0.0005060729
 1304   -0.1538461538    0.1250000000    0.1052631579    0.0005060729
 1305   -0.1538461538    0.1250000000    0.1578947368    0.0005060729
 1306   -0.1538461538    0.1250000000    0.2105263158    0.0005060729
 1307   -0.1538461538    0.1250000000    0.2631578947    0.0005060729
 1308   -0.1538461538    0.1250000000    0.3157894737    0.0005060729
 1309   -0.1538461538    0.1250000000    0.3684210526    0.0005060729
 1310   -0.1538461538    0.1250000000    0.4210526316    0.0005060729
 1311   -0.1538461538    0.1250000000    0.4736842105    0.0005060729
 1312   -0.1538461538    0.2500000000   -0.4736842105    0.0005060729
 1313   -0.1538461538    0.2500000000   -0.4210526316    0.0005060729
 1314   -0.1538461538    0.2500000000   -0.3684210526    0.0005060729
 1315   -0.1538461538    0.2500000000   -0.3157894737    0.0005060729
 1316   -0.1538461538    0.2500000000   -0.2631578947    0.0005060729
 1317   -0.1538461538    0.2500000000   -0.2105263158    0.0005060729
 1318   -0.1538461538    0.2500000000   -0.1578947368    0.0005060729
 1319   -0.1538461538    0.2500000000   -0.1052631579    0.0005060729
 1320   -0.1538461538    0.2500000000   -0.0526315789    0.0005060729
 1321   -0.1538461538    0.2500000000    0.0000000000    0.0005060729
 1322   -0.1538461538    0.2500000000    0.0526315789    0.0005060729
 1323   -0.1538461538    0.2500000000    0.1052631579    0.0005060729
 1324   -0.1538461538    0.2500000000    0.1578947368    0.0005060729
 1325   -0.1538461538    0.2500000000    0.2105263158    0.0005060729
 1326   -0.1538461538    0.2500000000    0.2631578947    0.0005060729
 1327   -0.1538461538    0.2500000000    0.3157894737    0.0005060729
 1328   -0.1538461538    0.2500000000    0.3684210526    0.0005060729
 1329   -0.1538461538    0.2500000000    0.4210526316    0.0005060729
 1330   -0.1538461538    0.2500000000    0.4736842105    0.0005060729
 1331   -0.1538461538    0.3750000000   -0.4736842105    0.0005060729
 1332   -0.1538461538    0.3750000000   -0.4210526316    0.0005060729
 1333   -0.1538461538    0.3750000000   -0.3684210526    0.0005060729
 1334   -0.1538461538    0.3750000000   -0.3157894737    0.0005060729
 1335   -0.1538461538    0.3750000000   -0.2631578947    0.0005060729
 1336   -0.1538461538    0.3750000000   -0.2105263158    0.0005060729
 1337   -0.1538461538    0.3750000000   -0.1578947368    0.0005060729
 1338   -0.1538461538    0.3750000000   -0.1052631579    0.0005060729
 1339   -0.1538461538    0.3750000000   -0.0526315789    0.0005060729
 1340   -0.1538461538    0.3750000000    0.0000000000    0.0005060729
 1341   -0.1538461538    0.3750000000    0.0526315789    0.0005060729
 1342   -0.1538461538    0.3750000000    0.1052631579    0.0005060729
 1343   -0.1538461538    0.3750000000    0.1578947368    0.0005060729
 1344   -0.1538461538    0.3750000000    0.2105263158    0.0005060729
 1345   -0.1538461538    0.3750000000    0.2631578947    0.0005060729
 1346   -0.1538461538    0.3750000000    0.3157894737    0.0005060729
 1347   -0.1538461538    0.3750000000    0.3684210526    0.0005060729
 1348   -0.1538461538    0.3750000000    0.4210526316    0.0005060729
 1349   -0.1538461538    0.3750000000    0.4736842105    0.0005060729
 1350   -0.1538461538    0.5000000000   -0.4736842105    0.0005060729
 1351   -0.1538461538    0.5000000000   -0.4210526316    0.0005060729
 1352   -0.1538461538    0.5000000000   -0.3684210526    0.0005060729
 1353   -0.1538461538    0.5000000000   -0.3157894737    0.0005060729
 1354   -0.1538461538    0.5000000000   -0.2631578947    0.0005060729
 1355   -0.1538461538    0.5000000000   -0.2105263158    0.0005060729
 1356   -0.1538461538    0.5000000000   -0.1578947368    0.0005060729
 1357   -0.1538461538    0.5000000000   -0.1052631579    0.0005060729
 1358   -0.1538461538    0.5000000000   -0.0526315789    0.0005060729
 1359   -0.1538461538    0.5000000000    0.0000000000    0.0005060729
 1360   -0.1538461538    0.5000000000    0.0526315789    0.0005060729
 1361   -0.1538461538    0.5000000000    0.1052631579    0.0005060729
 1362   -0.1538461538    0.5000000000    0.1578947368    0.0005060729
 1363   -0.1538461538    0.5000000000    0.2105263158    0.0005060729
 1364   -0.1538461538    0.5000000000    0.2631578947    0.0005060729
 1365   -0.1538461538    0.5000000000    0.3157894737    0.0005060729
 1366   -0.1538461538    0.5000000000    0.3684210526    0.0005060729
 1367   -0.1538461538    0.5000000000    0.4210526316    0.0005060729
 1368   -0.1538461538    0.5000000000    0.4736842105    0.0005060729
 1369   -0.1153846154   -0.3750000000   -0.4736842105    0.0005060729
 1370   -0.1153846154   -0.3750000000   -0.4210526316    0.0005060729
 1371   -0.1153846154   -0.3750000000   -0.3684210526    0.0005060729
 1372   -0.1153846154   -0.3750000000   -0.3157894737    0.0005060729
 1373   -0.1153846154   -0.3750000000   -0.2631578947    0.0005060729
 1374   -0.1153846154   -0.3750000000   -0.2105263158    0.0005060729
 1375   -0.1153846154   -0.3750000000   -0.1578947368    0.0005060729
 1376   -0.1153846154   -0.3750000000   -0.1052631579    0.0005060729
 1377   -0.1153846154   -0.3750000000   -0.0526315789    0.0005060729
 1378   -0.1153846154   -0.3750000000    0.0000000000    0.0005060729
 1379   -0.1153846154   -0.3750000000    0.0526315789    0.0005060729
 1380   -0.1153846154   -0.3750000000    0.1052631579    0.0005060729
 1381   -0.1153846154   -0.3750000000    0.1578947368    0.0005060729
 1382   -0.1153846154   -0.3750000000    0.2105263158    0.0005060729
 1383   -0.1153846154   -0.3750000000    0.2631578947    0.0005060729
 1384   -0.1153846154   -0.3750000000    0.3157894737    0.0005060729
 1385   -0.1153846154   -0.3750000000    0.3684210526    0.0005060729
 1386   -0.1153846154   -0.3750000000    0.4210526316    0.0005060729
 1387   -0.1153846154   -0.3750000000    0.4736842105    0.0005060729
 1388   -0.1153846154   -0.2500000000   -0.4736842105    0.0005060729
 1389   -0.1153846154   -0.2500000000   -0.4210526316    0.0005060729
 1390   -0.1153846154   -0.2500000000   -0.3684210526    0.0005060729
 1391   -0.1153846154   -0.2500000000   -0.3157894737    0.0005060729
 1392   -0.1153846154   -0.2500000000   -0.2631578947    0.0005060729
 1393   -0.1153846154   -0.2500000000   -0.2105263158    0.0005060729
 1394   -0.1153846154   -0.2500000000   -0.1578947368    0.0005060729
 1395   -0.1153846154   -0.2500000000   -0.1052631579    0.0005060729
 1396   -0.1153846154   -0.2500000000   -0.0526315789    0.0005060729
 1397   -0.1153846154   -0.2500000000    0.0000000000    0.0005060729
 1398   -0.1153846154   -0.2500000000    0.0526315789    0.0005060729
 1399   -0.1153846154   -0.2500000000    0.1052631579    0.0005060729
 1400   -0.1153846154   -0.2500000000    0.1578947368    0.0005060729
 1401   -0.1153846154   -0.2500000000    0.2105263158    0.0005060729
 1402   -0.1153846154   -0.2500000000    0.2631578947    0.0005060729
 1403   -0.1153846154   -0.2500000000    0.3157894737    0.0005060729
 1404   -0.1153846154   -0.2500000000    0.3684210526    0.0005060729
 1405   -0.1153846154   -0.2500000000    0.4210526316    0.0005060729
 1406   -0.1153846154   -0.2500000000    0.4736842105    0.0005060729
 1407   -0.1153846154   -0.1250000000   -0.4736842105    0.0005060729
 1408   -0.1153846154   -0.1250000000   -0.4210526316    0.0005060729
 1409   -0.1153846154   -0.1250000000   -0.3684210526    0.0005060729
 1410   -0.1153846154   -0.1250000000   -0.3157894737    0.0005060729
 1411   -0.1153846154   -0.1250000000   -0.2631578947    0.0005060729
 1412   -0.1153846154   -0.1250000000   -0.2105263158    0.0005060729
 1413   -0.1153846154   -0.1250000000   -0.1578947368    0.0005060729
 1414   -0.1153846154   -0.1250000000   -0.1052631579    0.0005060729
 1415   -0.1153846154   -0.1250000000   -0.0526315789    0.0005060729
 1416   -0.1153846154   -0.1250000000    0.0000000000    0.0005060729
 1417   -0.1153846154   -0.1250000000    0.0526315789    0.0005060729
 1418   -0.1153846154   -0.1250000000    0.1052631579    0.0005060729
 1419   -0.1153846154   -0.1250000000    0.1578947368    0.0005060729
 1420   -0.1153846154   -0.1250000000    0.2105263158    0.0005060729
 1421   -0.1153846154   -0.1250000000    0.2631578947    0.0005060729
 1422   -0.1153846154   -0.1250000000    0.3157894737    0.0005060729
 1423   -0.1153846154   -0.1250000000    0.3684210526    0.0005060729
 1424   -0.1153846154   -0.1250000000    0.4210526316    0.0005060729
 1425   -0.1153846154   -0.1250000000    0.4736842105    0.0005060729
 1426   -0.1153846154    0.0000000000   -0.4736842105    0.0005060729
 1427   -0.1153846154    0.0000000000   -0.4210526316    0.0005060729
 1428   -0.1153846154    0.0000000000   -0.3684210526    0.0005060729
 1429   -0.1153846154    0.0000000000   -0.3157894737    0.0005060729
 1430   -0.1153846154    0.0000000000   -0.2631578947    0.0005060729
 1431   -0.1153846154    0.0000000000   -0.2105263158    0.0005060729
 1432   -0.1153846154    0.0000000000   -0.1578947368    0.0005060729
 1433   -0.1153846154    0.0000000000   -0.1052631579    0.0005060729
 1434   -0.1153846154    0.0000000000   -0.0526315789    0.0005060729
 1435   -0.1153846154    0.0000000000    0.0000000000    0.0005060729
 1436   -0.1153846154    0.0000000000    0.0526315789    0.0005060729
 1437   -0.1153846154    0.0000000000    0.1052631579    0.0005060729
 1438   -0.1153846154    0.0000000000    0.1578947368    0.0005060729
 1439   -0.1153846154    0.0000000000    0.2105263158    0.0005060729
 1440   -0.1153846154    0.0000000000    0.2631578947    0.0005060729
 1441   -0.1153846154    0.0000000000    0.3157894737    0.0005060729
 1442   -0.1153846154    0.0000000000    0.3684210526    0.0005060729
 1443   -0.1153846154    0.0000000000    0.4210526316    0.0005060729
 1444   -0.1153846154    0.0000000000    0.4736842105    0.0005060729
 1445   -0.1153846154    0.1250000000   -0.4736842105    0.0005060729
 1446   -0.1153846154    0.1250000000   -0.4210526316    0.0005060729
 1447   -0.1153846154    0.1250000000   -0.3684210526    0.0005060729
 1448   -0.1153846154    0.1250000000   -0.3157894737    0.0005060729
 1449   -0.1153846154    0.1250000000   -0.2631578947    0.0005060729
 1450   -0.1153846154    0.1250000000   -0.2105263158    0.0005060729
 1451   -0.1153846154    0.1250000000   -0.1578947368    0.0005060729
 1452   -0.1153846154    0.1250000000   -0.1052631579    0.0005060729
 1453   -0.1153846154    0.1250000000   -0.0526315789    0.0005060729
 1454   -0.1153846154    0.1250000000    0.0000000000    0.0005060729
 1455   -0.1153846154    0.1250000000    0.0526315789    0.0005060729
 1456   -0.1153846154    0.1250000000    0.1052631579    0.0005060729
 1457   -0.1153846154    0.1250000000    0.1578947368    0.0005060729
 1458   -0.1153846154    0.1250000000    0.2105263158    0.0005060729
 1459   -0.1153846154    0.1250000000    0.2631578947    0.0005060729
 1460   -0.1153846154    0.1250000000    0.3157894737    0.0005060729
 1461   -0.1153846154    0.1250000000    0.3684210526    0.0005060729
 1462   -0.1153846154    0.1250000000    0.4210526316    0.0005060729
 1463   -0.1153846154    0.1250000000    0.4736842105    0.0005060729
 1464   -0.1153846154    0.2500000000   -0.4736842105    0.0005060729
 1465   -0.1153846154    0.2500000000   -0.4210526316    0.0005060729
 1466   -0.1153846154    0.2500000000   -0.3684210526    0.0005060729
 1467   -0.1153846154    0.2500000000   -0.3157894737    0.0005060729
 1468   -0.1153846154    0.2500000000   -0.2631578947    0.0005060729
 1469   -0.1153846154    0.2500000000   -0.2105263158    0.0005060729
 1470   -0.1153846154    0.2500000000   -0.1578947368    0.0005060729
 1471   -0.1153846154    0.2500000000   -0.1052631579    0.0005060729
 1472   -0.1153846154    0.2500000000   -0.0526315789    0.0005060729
 1473   -0.1153846154    0.2500000000    0.0000000000    0.0005060729
 1474   -0.1153846154    0.2500000000    0.0526315789    0.0005060729
 1475   -0.1153846154    0.2500000000    0.1052631579    0.0005060729
 1476   -0.1153846154    0.2500000000    0.1578947368    0.0005060729
 1477   -0.1153846154    0.2500000000    0.2105263158    0.0005060729
 1478   -0.1153846154    0.2500000000    0.2631578947    0.0005060729
 1479   -0.1153846154    0.2500000000    0.3157894737    0.0005060729
 1480   -0.1153846154    0.2500000000    0.3684210526    0.0005060729
 1481   -0.1153846154    0.2500000000    0.4210526316    0.0005060729
 1482   -0.1153846154    0.2500000000    0.4736842105    0.0005060729
 1483   -0.1153846154    0.3750000000   -0.4736842105    0.0005060729
 1484   -0.1153846154    0.3750000000   -0.4210526316    0.0005060729
 1485   -0.1153846154    0.3750000000   -0.3684210526    0.0005060729
 1486   -0.1153846154    0.3750000000   -0.3157894737    0.0005060729
 1487   -0.1153846154    0.3750000000   -0.2631578947    0.0005060729
 1488   -0.1153846154    0.3750000000   -0.2105263158    0.0005060729
 1489   -0.1153846154    0.3750000000   -0.1578947368    0.0005060729
 1490   -0.1153846154    0.3750000000   -0.1052631579    0.0005060729
 1491   -0.1153846154    0.3750000000   -0.0526315789    0.0005060729
 1492   -0.1153846154    0.3750000000    0.0000000000    0.0005060729
 1493   -0.1153846154    0.3750000000    0.0526315789    0.0005060729
 1494   -0.1153846154    0.3750000000    0.1052631579    0.0005060729
 1495   -0.1153846154    0.3750000000    0.1578947368    0.0005060729
 1496   -0.1153846154    0.3750000000    0.2105263158    0.0005060729
 1497   -0.1153846154    0.3750000000    0.2631578947    0.0005060729
 1498   -0.1153846154    0.3750000000    0.3157894737    0.0005060729
 1499   -0.1153846154    0.3750000000    0.3684210526    0.0005060729
 1500   -0.1153846154    0.3750000000    0.4210526316    0.0005060729
 1501   -0.1153846154    0.3750000000    0.4736842105    0.0005060729
 1502   -0.1153846154    0.5000000000   -0.4736842105    0.0005060729
 1503   -0.1153846154    0.5000000000   -0.4210526316    0.0005060729
 1504   -0.1153846154    0.5000000000   -0.3684210526    0.0005060729
 1505   -0.1153846154    0.5000000000   -0.3157894737    0.0005060729
 1506   -0.1153846154    0.5000000000   -0.2631578947    0.0005060729
 1507   -0.1153846154    0.5000000000   -0.2105263158    0.0005060729
 1508   -0.1153846154    0.5000000000   -0.1578947368    0.0005060729
 1509   -0.1153846154    0.5000000000   -0.1052631579    0.0005060729
 1510   -0.1153846154    0.5000000000   -0.0526315789    0.0005060729
 1511   -0.1153846154    0.5000000000    0.0000000000    0.0005060729
 1512   -0.1153846154    0.5000000000    0.0526315789    0.0005060729
 1513   -0.1153846154    0.5000000000    0.1052631579    0.0005060729
 1514   -0.1153846154    0.5000000000    0.1578947368    0.0005060729
 1515   -0.1153846154    0.5000000000    0.2105263158    0.0005060729
 1516   -0.1153846154    0.5000000000    0.2631578947    0.0005060729
 1517   -0.1153846154    0.5000000000    0.3157894737    0.0005060729
 1518   -0.1153846154    0.5000000000    0.3684210526    0.0005060729
 1519   -0.1153846154    0.5000000000    0.4210526316    0.0005060729
 1520   -0.1153846154    0.5000000000    0.4736842105    0.0005060729
 1521   -0.0769230769   -0.3750000000   -0.4736842105    0.0005060729
 1522   -0.0769230769   -0.3750000000   -0.4210526316    0.0005060729
 1523   -0.0769230769   -0.3750000000   -0.3684210526    0.0005060729
 1524   -0.0769230769   -0.3750000000   -0.3157894737    0.0005060729
 1525   -0.0769230769   -0.3750000000   -0.2631578947    0.0005060729
 1526   -0.0769230769   -0.3750000000   -0.2105263158    0.0005060729
 1527   -0.0769230769   -0.3750000000   -0.1578947368    0.0005060729
 1528   -0.0769230769   -0.3750000000   -0.1052631579    0.0005060729
 1529   -0.0769230769   -0.3750000000   -0.0526315789    0.0005060729
 1530   -0.0769230769   -0.3750000000    0.0000000000    0.0005060729
 1531   -0.0769230769   -0.3750000000    0.0526315789    0.0005060729
 1532   -0.0769230769   -0.3750000000    0.1052631579    0.0005060729
 1533   -0.0769230769   -0.3750000000    0.1578947368    0.0005060729
 1534   -0.0769230769   -0.3750000000    0.2105263158    0.0005060729
 1535   -0.0769230769   -0.3750000000    0.2631578947    0.0005060729
 1536   -0.0769230769   -0.3750000000    0.3157894737    0.0005060729
 1537   -0.0769230769   -0.3750000000    0.3684210526    0.0005060729
 1538   -0.0769230769   -0.3750000000    0.4210526316    0.0005060729
 1539   -0.0769230769   -0.3750000000    0.4736842105    0.0005060729
 1540   -0.0769230769   -0.2500000000   -0.4736842105    0.0005060729
 1541   -0.0769230769   -0.2500000000   -0.4210526316    0.0005060729
 1542   -0.0769230769   -0.2500000000   -0.3684210526    0.0005060729
 1543   -0.0769230769   -0.2500000000   -0.3157894737    0.0005060729
 1544   -0.0769230769   -0.2500000000   -0.2631578947    0.0005060729
 1545   -0.0769230769   -0.2500000000   -0.2105263158    0.0005060729
 1546   -0.0769230769   -0.2500000000   -0.1578947368    0.0005060729
 1547   -0.0769230769   -0.2500000000   -0.1052631579    0.0005060729
 1548   -0.0769230769   -0.2500000000   -0.0526315789    0.0005060729
 1549   -0.0769230769   -0.2500000000    0.0000000000    0.0005060729
 1550   -0.0769230769   -0.2500000000    0.0526315789    0.0005060729
 1551   -0.0769230769   -0.2500000000    0.1052631579    0.0005060729
 1552   -0.0769230769   -0.2500000000    0.1578947368    0.0005060729
 1553   -0.0769230769   -0.2500000000    0.2105263158    0.0005060729
 1554   -0.0769230769   -0.2500000000    0.2631578947    0.0005060729
 1555   -0.0769230769   -0.2500000000    0.3157894737    0.0005060729
 1556   -0.0769230769   -0.2500000000    0.3684210526    0.0005060729
 1557   -0.0769230769   -0.2500000000    0.4210526316    0.0005060729
 1558   -0.0769230769   -0.2500000000    0.4736842105    0.0005060729
 1559   -0.0769230769   -0.1250000000   -0.4736842105    0.0005060729
 1560   -0.0769230769   -0.1250000000   -0.4210526316    0.0005060729
 1561   -0.0769230769   -0.1250000000   -0.3684210526    0.0005060729
 1562   -0.0769230769   -0.1250000000   -0.3157894737    0.0005060729
 1563   -0.0769230769   -0.1250000000   -0.2631578947    0.0005060729
 1564   -0.0769230769   -0.1250000000   -0.2105263158    0.0005060729
 1565   -0.0769230769   -0.1250000000   -0.1578947368    0.0005060729
 1566   -0.0769230769   -0.1250000000   -0.1052631579    0.0005060729
 1567   -0.0769230769   -0.1250000000   -0.0526315789    0.0005060729
 1568   -0.0769230769   -0.1250000000    0.0000000000    0.0005060729
 1569   -0.0769230769   -0.1250000000    0.0526315789    0.0005060729
 1570   -0.0769230769   -0.1250000000    0.1052631579    0.0005060729
 1571   -0.0769230769   -0.1250000000    0.1578947368    0.0005060729
 1572   -0.0769230769   -0.1250000000    0.2105263158    0.0005060729
 1573   -0.0769230769   -0.1250000000    0.2631578947    0.0005060729
 1574   -0.0769230769   -0.1250000000    0.3157894737    0.0005060729
 1575   -0.0769230769   -0.1250000000    0.3684210526    0.0005060729
 1576   -0.0769230769   -0.1250000000    0.4210526316    0.0005060729
 1577   -0.0769230769   -0.1250000000    0.4736842105    0.0005060729
 1578   -0.0769230769    0.0000000000   -0.4736842105    0.0005060729
 1579   -0.0769230769    0.0000000000   -0.4210526316    0.0005060729
 1580   -0.0769230769    0.0000000000   -0.3684210526    0.0005060729
 1581   -0.0769230769    0.0000000000   -0.3157894737    0.0005060729
 1582   -0.0769230769    0.0000000000   -0.2631578947    0.0005060729
 1583   -0.0769230769    0.0000000000   -0.2105263158    0.0005060729
 1584   -0.0769230769    0.0000000000   -0.1578947368    0.0005060729
 1585   -0.0769230769    0.0000000000   -0.1052631579    0.0005060729
 1586   -0.0769230769    0.0000000000   -0.0526315789    0.0005060729
 1587   -0.0769230769    0.0000000000    0.0000000000    0.0005060729
 1588   -0.0769230769    0.0000000000    0.0526315789    0.0005060729
 1589   -0.0769230769    0.0000000000    0.1052631579    0.0005060729
 1590   -0.0769230769    0.0000000000    0.1578947368    0.0005060729
 1591   -0.0769230769    0.0000000000    0.2105263158    0.0005060729
 1592   -0.0769230769    0.0000000000    0.2631578947    0.0005060729
 1593   -0.0769230769    0.0000000000    0.3157894737    0.0005060729
 1594   -0.0769230769    0.0000000000    0.3684210526    0.0005060729
 1595   -0.0769230769    0.0000000000    0.4210526316    0.0005060729
 1596   -0.0769230769    0.0000000000    0.4736842105    0.0005060729
 1597   -0.0769230769    0.1250000000   -0.4736842105    0.0005060729
 1598   -0.0769230769    0.1250000000   -0.4210526316    0.0005060729
 1599   -0.0769230769    0.1250000000   -0.3684210526    0.0005060729
 1600   -0.0769230769    0.1250000000   -0.3157894737    0.0005060729
 1601   -0.0769230769    0.1250000000   -0.2631578947    0.0005060729
 1602   -0.0769230769    0.1250000000   -0.2105263158    0.0005060729
 1603   -0.0769230769    0.1250000000   -0.1578947368    0.0005060729
 1604   -0.0769230769    0.1250000000   -0.1052631579    0.0005060729
 1605   -0.0769230769    0.1250000000   -0.0526315789    0.0005060729
 1606   -0.0769230769    0.1250000000    0.0000000000    0.0005060729
 1607   -0.0769230769    0.1250000000    0.0526315789    0.0005060729
 1608   -0.0769230769    0.1250000000    0.1052631579    0.0005060729
 1609   -0.0769230769    0.1250000000    0.1578947368    0.0005060729
 1610   -0.0769230769    0.1250000000    0.2105263158    0.0005060729
 1611   -0.0769230769    0.1250000000    0.2631578947    0.0005060729
 1612   -0.0769230769    0.1250000000    0.3157894737    0.0005060729
 1613   -0.0769230769    0.1250000000    0.3684210526    0.0005060729
 1614   -0.0769230769    0.1250000000    0.4210526316    0.0005060729
 1615   -0.0769230769    0.1250000000    0.4736842105    0.0005060729
 1616   -0.0769230769    0.2500000000   -0.4736842105    0.0005060729
 1617   -0.0769230769    0.2500000000   -0.4210526316    0.0005060729
 1618   -0.0769230769    0.2500000000   -0.3684210526    0.0005060729
 1619   -0.0769230769    0.2500000000   -0.3157894737    0.0005060729
 1620   -0.0769230769    0.2500000000   -0.2631578947    0.0005060729
 1621   -0.0769230769    0.2500000000   -0.2105263158    0.0005060729
 1622   -0.0769230769    0.2500000000   -0.1578947368    0.0005060729
 1623   -0.0769230769    0.2500000000   -0.1052631579    0.0005060729
 1624   -0.0769230769    0.2500000000   -0.0526315789    0.0005060729
 1625   -0.0769230769    0.2500000000    0.0000000000    0.0005060729
 1626   -0.0769230769    0.2500000000    0.0526315789    0.0005060729
 1627   -0.0769230769    0.2500000000    0.1052631579    0.0005060729
 1628   -0.0769230769    0.2500000000    0.1578947368    0.0005060729
 1629   -0.0769230769    0.2500000000    0.2105263158    0.0005060729
 1630   -0.0769230769    0.2500000000    0.2631578947    0.0005060729
 1631   -0.0769230769    0.2500000000    0.3157894737    0.0005060729
 1632   -0.0769230769    0.2500000000    0.3684210526    0.0005060729
 1633   -0.0769230769    0.2500000000    0.4210526316    0.0005060729
 1634   -0.0769230769    0.2500000000    0.4736842105    0.0005060729
 1635   -0.0769230769    0.3750000000   -0.4736842105    0.0005060729
 1636   -0.0769230769    0.3750000000   -0.4210526316    0.0005060729
 1637   -0.0769230769    0.3750000000   -0.3684210526    0.0005060729
 1638   -0.0769230769    0.3750000000   -0.3157894737    0.0005060729
 1639   -0.0769230769    0.3750000000   -0.2631578947    0.0005060729
 1640   -0.0769230769    0.3750000000   -0.2105263158    0.0005060729
 1641   -0.0769230769    0.3750000000   -0.1578947368    0.0005060729
 1642   -0.0769230769    0.3750000000   -0.1052631579    0.0005060729
 1643   -0.0769230769    0.3750000000   -0.0526315789    0.0005060729
 1644   -0.0769230769    0.3750000000    0.0000000000    0.0005060729
 1645   -0.0769230769    0.3750000000    0.0526315789    0.0005060729
 1646   -0.0769230769    0.3750000000    0.1052631579    0.0005060729
 1647   -0.0769230769    0.3750000000    0.1578947368    0.0005060729
 1648   -0.0769230769    0.3750000000    0.2105263158    0.0005060729
 1649   -0.0769230769    0.3750000000    0.2631578947    0.0005060729
 1650   -0.0769230769    0.3750000000    0.3157894737    0.0005060729
 1651   -0.0769230769    0.3750000000    0.3684210526    0.0005060729
 1652   -0.0769230769    0.3750000000    0.4210526316    0.0005060729
 1653   -0.0769230769    0.3750000000    0.4736842105    0.0005060729
 1654   -0.0769230769    0.5000000000   -0.4736842105    0.0005060729
 1655   -0.0769230769    0.5000000000   -0.4210526316    0.0005060729
 1656   -0.0769230769    0.5000000000   -0.3684210526    0.0005060729
 1657   -0.0769230769    0.5000000000   -0.3157894737    0.0005060729
 1658   -0.0769230769    0.5000000000   -0.2631578947    0.0005060729
 1659   -0.0769230769    0.5000000000   -0.2105263158    0.0005060729
 1660   -0.0769230769    0.5000000000   -0.1578947368    0.0005060729
 1661   -0.0769230769    0.5000000000   -0.1052631579    0.0005060729
 1662   -0.0769230769    0.5000000000   -0.0526315789    0.0005060729
 1663   -0.0769230769    0.5000000000    0.0000000000    0.0005060729
 1664   -0.0769230769    0.5000000000    0.0526315789    0.0005060729
 1665   -0.0769230769    0.5000000000    0.1052631579    0.0005060729
 1666   -0.0769230769    0.5000000000    0.1578947368    0.0005060729
 1667   -0.0769230769    0.5000000000    0.2105263158    0.0005060729
 1668   -0.0769230769    0.5000000000    0.2631578947    0.0005060729
 1669   -0.0769230769    0.5000000000    0.3157894737    0.0005060729
 1670   -0.0769230769    0.5000000000    0.3684210526    0.0005060729
 1671   -0.0769230769    0.5000000000    0.4210526316    0.0005060729
 1672   -0.0769230769    0.5000000000    0.4736842105    0.0005060729
 1673   -0.0384615385   -0.3750000000   -0.4736842105    0.0005060729
 1674   -0.0384615385   -0.3750000000   -0.4210526316    0.0005060729
 1675   -0.0384615385   -0.3750000000   -0.3684210526    0.0005060729
 1676   -0.0384615385   -0.3750000000   -0.3157894737    0.0005060729
 1677   -0.0384615385   -0.3750000000   -0.2631578947    0.0005060729
 1678   -0.0384615385   -0.3750000000   -0.2105263158    0.0005060729
 1679   -0.0384615385   -0.3750000000   -0.1578947368    0.0005060729
 1680   -0.0384615385   -0.3750000000   -0.1052631579    0.0005060729
 1681   -0.0384615385   -0.3750000000   -0.0526315789    0.0005060729
 1682   -0.0384615385   -0.3750000000    0.0000000000    0.0005060729
 1683   -0.0384615385   -0.3750000000    0.0526315789    0.0005060729
 1684   -0.0384615385   -0.3750000000    0.1052631579    0.0005060729
 1685   -0.0384615385   -0.3750000000    0.1578947368    0.0005060729
 1686   -0.0384615385   -0.3750000000    0.2105263158    0.0005060729
 1687   -0.0384615385   -0.3750000000    0.2631578947    0.0005060729
 1688   -0.0384615385   -0.3750000000    0.3157894737    0.0005060729
 1689   -0.0384615385   -0.3750000000    0.3684210526    0.0005060729
 1690   -0.0384615385   -0.3750000000    0.4210526316    0.0005060729
 1691   -0.0384615385   -0.3750000000    0.4736842105    0.0005060729
 1692   -0.0384615385   -0.2500000000   -0.4736842105    0.0005060729
 1693   -0.0384615385   -0.2500000000   -0.4210526316    0.0005060729
 1694   -0.0384615385   -0.2500000000   -0.3684210526    0.0005060729
 1695   -0.0384615385   -0.2500000000   -0.3157894737    0.0005060729
 1696   -0.0384615385   -0.2500000000   -0.2631578947    0.0005060729
 1697   -0.0384615385   -0.2500000000   -0.2105263158    0.0005060729
 1698   -0.0384615385   -0.2500000000   -0.1578947368    0.0005060729
 1699   -0.0384615385   -0.2500000000   -0.1052631579    0.0005060729
 1700   -0.0384615385   -0.2500000000   -0.0526315789    0.0005060729
 1701   -0.0384615385   -0.2500000000    0.0000000000    0.0005060729
 1702   -0.0384615385   -0.2500000000    0.0526315789    0.0005060729
 1703   -0.0384615385   -0.2500000000    0.1052631579    0.0005060729
 1704   -0.0384615385   -0.2500000000    0.1578947368    0.0005060729
 1705   -0.0384615385   -0.2500000000    0.2105263158    0.0005060729
 1706   -0.0384615385   -0.2500000000    0.2631578947    0.0005060729
 1707   -0.0384615385   -0.2500000000    0.3157894737    0.0005060729
 1708   -0.0384615385   -0.2500000000    0.3684210526    0.0005060729
 1709   -0.0384615385   -0.2500000000    0.4210526316    0.0005060729
 1710   -0.0384615385   -0.2500000000    0.4736842105    0.0005060729
 1711   -0.0384615385   -0.1250000000   -0.4736842105    0.0005060729
 1712   -0.0384615385   -0.1250000000   -0.4210526316    0.0005060729
 1713   -0.0384615385   -0.1250000000   -0.3684210526    0.0005060729
 1714   -0.0384615385   -0.1250000000   -0.3157894737    0.0005060729
 1715   -0.0384615385   -0.1250000000   -0.2631578947    0.0005060729
 1716   -0.0384615385   -0.1250000000   -0.2105263158    0.0005060729
 1717   -0.0384615385   -0.1250000000   -0.1578947368    0.0005060729
 1718   -0.0384615385   -0.1250000000   -0.1052631579    0.0005060729
 1719   -0.0384615385   -0.1250000000   -0.0526315789    0.0005060729
 1720   -0.0384615385   -0.1250000000    0.0000000000    0.0005060729
 1721   -0.0384615385   -0.1250000000    0.0526315789    0.0005060729
 1722   -0.0384615385   -0.1250000000    0.1052631579    0.0005060729
 1723   -0.0384615385   -0.1250000000    0.1578947368    0.0005060729
 1724   -0.0384615385   -0.1250000000    0.2105263158    0.0005060729
 1725   -0.0384615385   -0.1250000000    0.2631578947    0.0005060729
 1726   -0.0384615385   -0.1250000000    0.3157894737    0.0005060729
 1727   -0.0384615385   -0.1250000000    0.3684210526    0.0005060729
 1728   -0.0384615385   -0.1250000000    0.4210526316    0.0005060729
 1729   -0.0384615385   -0.1250000000    0.4736842105    0.0005060729
 1730   -0.0384615385    0.0000000000   -0.4736842105    0.0005060729
 1731   -0.0384615385    0.0000000000   -0.4210526316    0.0005060729
 1732   -0.0384615385    0.0000000000   -0.3684210526    0.0005060729
 1733   -0.0384615385    0.0000000000   -0.3157894737    0.0005060729
 1734   -0.0384615385    0.0000000000   -0.2631578947    0.0005060729
 1735   -0.0384615385    0.0000000000   -0.2105263158    0.0005060729
 1736   -0.0384615385    0.0000000000   -0.1578947368    0.0005060729
 1737   -0.0384615385    0.0000000000   -0.1052631579    0.0005060729
 1738   -0.0384615385    0.0000000000   -0.0526315789    0.0005060729
 1739   -0.0384615385    0.0000000000    0.0000000000    0.0005060729
 1740   -0.0384615385    0.0000000000    0.0526315789    0.0005060729
 1741   -0.0384615385    0.0000000000    0.1052631579    0.0005060729
 1742   -0.0384615385    0.0000000000    0.1578947368    0.0005060729
 1743   -0.0384615385    0.0000000000    0.2105263158    0.0005060729
 1744   -0.0384615385    0.0000000000    0.2631578947    0.0005060729
 1745   -0.0384615385    0.0000000000    0.3157894737    0.0005060729
 1746   -0.0384615385    0.0000000000    0.3684210526    0.0005060729
 1747   -0.0384615385    0.0000000000    0.4210526316    0.0005060729
 1748   -0.0384615385    0.0000000000    0.4736842105    0.0005060729
 1749   -0.0384615385    0.1250000000   -0.4736842105    0.0005060729
 1750   -0.0384615385    0.1250000000   -0.4210526316    0.0005060729
 1751   -0.0384615385    0.1250000000   -0.3684210526    0.0005060729
 1752   -0.0384615385    0.1250000000   -0.3157894737    0.0005060729
 1753   -0.0384615385    0.1250000000   -0.2631578947    0.0005060729
 1754   -0.0384615385    0.1250000000   -0.2105263158    0.0005060729
 1755   -0.0384615385    0.1250000000   -0.1578947368    0.0005060729
 1756   -0.0384615385    0.1250000000   -0.1052631579    0.0005060729
 1757   -0.0384615385    0.1250000000   -0.0526315789    0.0005060729
 1758   -0.0384615385    0.1250000000    0.0000000000    0.0005060729
 1759   -0.0384615385    0.1250000000    0.0526315789    0.0005060729
 1760   -0.0384615385    0.1250000000    0.1052631579    0.0005060729
 1761   -0.0384615385    0.1250000000    0.1578947368    0.0005060729
 1762   -0.0384615385    0.1250000000    0.2105263158    0.0005060729
 1763   -0.0384615385    0.1250000000    0.2631578947    0.0005060729
 1764   -0.0384615385    0.1250000000    0.3157894737    0.0005060729
 1765   -0.0384615385    0.1250000000    0.3684210526    0.0005060729
 1766   -0.0384615385    0.1250000000    0.4210526316    0.0005060729
 1767   -0.0384615385    0.1250000000    0.4736842105    0.0005060729
 1768   -0.0384615385    0.2500000000   -0.4736842105    0.0005060729
 1769   -0.0384615385    0.2500000000   -0.4210526316    0.0005060729
 1770   -0.0384615385    0.2500000000   -0.3684210526    0.0005060729
 1771   -0.0384615385    0.2500000000   -0.3157894737    0.0005060729
 1772   -0.0384615385    0.2500000000   -0.2631578947    0.0005060729
 1773   -0.0384615385    0.2500000000   -0.2105263158    0.0005060729
 1774   -0.0384615385    0.2500000000   -0.1578947368    0.0005060729
 1775   -0.0384615385    0.2500000000   -0.1052631579    0.0005060729
 1776   -0.0384615385    0.2500000000   -0.0526315789    0.0005060729
 1777   -0.0384615385    0.2500000000    0.0000000000    0.0005060729
 1778   -0.0384615385    0.2500000000    0.0526315789    0.0005060729
 1779   -0.0384615385    0.2500000000    0.1052631579    0.0005060729
 1780   -0.0384615385    0.2500000000    0.1578947368    0.0005060729
 1781   -0.0384615385    0.2500000000    0.2105263158    0.0005060729
 1782   -0.0384615385    0.2500000000    0.2631578947    0.0005060729
 1783   -0.0384615385    0.2500000000    0.3157894737    0.0005060729
 1784   -0.0384615385    0.2500000000    0.3684210526    0.0005060729
 1785   -0.0384615385    0.2500000000    0.4210526316    0.0005060729
 1786   -0.0384615385    0.2500000000    0.4736842105    0.0005060729
 1787   -0.0384615385    0.3750000000   -0.4736842105    0.0005060729
 1788   -0.0384615385    0.3750000000   -0.4210526316    0.0005060729
 1789   -0.0384615385    0.3750000000   -0.3684210526    0.0005060729
 1790   -0.0384615385    0.3750000000   -0.3157894737    0.0005060729
 1791   -0.0384615385    0.3750000000   -0.2631578947    0.0005060729
 1792   -0.0384615385    0.3750000000   -0.2105263158    0.0005060729
 1793   -0.0384615385    0.3750000000   -0.1578947368    0.0005060729
 1794   -0.0384615385    0.3750000000   -0.1052631579    0.0005060729
 1795   -0.0384615385    0.3750000000   -0.0526315789    0.0005060729
 1796   -0.0384615385    0.3750000000    0.0000000000    0.0005060729
 1797   -0.0384615385    0.3750000000    0.0526315789    0.0005060729
 1798   -0.0384615385    0.3750000000    0.1052631579    0.0005060729
 1799   -0.0384615385    0.3750000000    0.1578947368    0.0005060729
 1800   -0.0384615385    0.3750000000    0.2105263158    0.0005060729
 1801   -0.0384615385    0.3750000000    0.2631578947    0.0005060729
 1802   -0.0384615385    0.3750000000    0.3157894737    0.0005060729
 1803   -0.0384615385    0.3750000000    0.3684210526    0.0005060729
 1804   -0.0384615385    0.3750000000    0.4210526316    0.0005060729
 1805   -0.0384615385    0.3750000000    0.4736842105    0.0005060729
 1806   -0.0384615385    0.5000000000   -0.4736842105    0.0005060729
 1807   -0.0384615385    0.5000000000   -0.4210526316    0.0005060729
 1808   -0.0384615385    0.5000000000   -0.3684210526    0.0005060729
 1809   -0.0384615385    0.5000000000   -0.3157894737    0.0005060729
 1810   -0.0384615385    0.5000000000   -0.2631578947    0.0005060729
 1811   -0.0384615385    0.5000000000   -0.2105263158    0.0005060729
 1812   -0.0384615385    0.5000000000   -0.1578947368    0.0005060729
 1813   -0.0384615385    0.5000000000   -0.1052631579    0.0005060729
 1814   -0.0384615385    0.5000000000   -0.0526315789    0.0005060729
 1815   -0.0384615385    0.5000000000    0.0000000000    0.0005060729
 1816   -0.0384615385    0.5000000000    0.0526315789    0.0005060729
 1817   -0.0384615385    0.5000000000    0.1052631579    0.0005060729
 1818   -0.0384615385    0.5000000000    0.1578947368    0.0005060729
 1819   -0.0384615385    0.5000000000    0.2105263158    0.0005060729
 1820   -0.0384615385    0.5000000000    0.2631578947    0.0005060729
 1821   -0.0384615385    0.5000000000    0.3157894737    0.0005060729
 1822   -0.0384615385    0.5000000000    0.3684210526    0.0005060729
 1823   -0.0384615385    0.5000000000    0.4210526316    0.0005060729
 1824   -0.0384615385    0.5000000000    0.4736842105    0.0005060729
 1825    0.0000000000   -0.3750000000   -0.4736842105    0.0005060729
 1826    0.0000000000   -0.3750000000   -0.4210526316    0.0005060729
 1827    0.0000000000   -0.3750000000   -0.3684210526    0.0005060729
 1828    0.0000000000   -0.3750000000   -0.3157894737    0.0005060729
 1829    0.0000000000   -0.3750000000   -0.2631578947    0.0005060729
 1830    0.0000000000   -0.3750000000   -0.2105263158    0.0005060729
 1831    0.0000000000   -0.3750000000   -0.1578947368    0.0005060729
 1832    0.0000000000   -0.3750000000   -0.1052631579    0.0005060729
 1833    0.0000000000   -0.3750000000   -0.0526315789    0.0005060729
 1834    0.0000000000   -0.3750000000    0.0000000000    0.0005060729
 1835    0.0000000000   -0.3750000000    0.0526315789    0.0005060729
 1836    0.0000000000   -0.3750000000    0.1052631579    0.0005060729
 1837    0.0000000000   -0.3750000000    0.1578947368    0.0005060729
 1838    0.0000000000   -0.3750000000    0.2105263158    0.0005060729
 1839    0.0000000000   -0.3750000000    0.2631578947    0.0005060729
 1840    0.0000000000   -0.3750000000    0.3157894737    0.0005060729
 1841    0.0000000000   -0.3750000000    0.3684210526    0.0005060729
 1842    0.0000000000   -0.3750000000    0.4210526316    0.0005060729
 1843    0.0000000000   -0.3750000000    0.4736842105    0.0005060729
 1844    0.0000000000   -0.2500000000   -0.4736842105    0.0005060729
 1845    0.0000000000   -0.2500000000   -0.4210526316    0.0005060729
 1846    0.0000000000   -0.2500000000   -0.3684210526    0.0005060729
 1847    0.0000000000   -0.2500000000   -0.3157894737    0.0005060729
 1848    0.0000000000   -0.2500000000   -0.2631578947    0.0005060729
 1849    0.0000000000   -0.2500000000   -0.2105263158    0.0005060729
 1850    0.0000000000   -0.2500000000   -0.1578947368    0.0005060729
 1851    0.0000000000   -0.2500000000   -0.1052631579    0.0005060729
 1852    0.0000000000   -0.2500000000   -0.0526315789    0.0005060729
 1853    0.0000000000   -0.2500000000    0.0000000000    0.0005060729
 1854    0.0000000000   -0.2500000000    0.0526315789    0.0005060729
 1855    0.0000000000   -0.2500000000    0.1052631579    0.0005060729
 1856    0.0000000000   -0.2500000000    0.1578947368    0.0005060729
 1857    0.0000000000   -0.2500000000    0.2105263158    0.0005060729
 1858    0.0000000000   -0.2500000000    0.2631578947    0.0005060729
 1859    0.0000000000   -0.2500000000    0.3157894737    0.0005060729
 1860    0.0000000000   -0.2500000000    0.3684210526    0.0005060729
 1861    0.0000000000   -0.2500000000    0.4210526316    0.0005060729
 1862    0.0000000000   -0.2500000000    0.4736842105    0.0005060729
 1863    0.0000000000   -0.1250000000   -0.4736842105    0.0005060729
 1864    0.0000000000   -0.1250000000   -0.4210526316    0.0005060729
 1865    0.0000000000   -0.1250000000   -0.3684210526    0.0005060729
 1866    0.0000000000   -0.1250000000   -0.3157894737    0.0005060729
 1867    0.0000000000   -0.1250000000   -0.2631578947    0.0005060729
 1868    0.0000000000   -0.1250000000   -0.2105263158    0.0005060729
 1869    0.0000000000   -0.1250000000   -0.1578947368    0.0005060729
 1870    0.0000000000   -0.1250000000   -0.1052631579    0.0005060729
 1871    0.0000000000   -0.1250000000   -0.0526315789    0.0005060729
 1872    0.0000000000   -0.1250000000    0.0000000000    0.0005060729
 1873    0.0000000000   -0.1250000000    0.0526315789    0.0005060729
 1874    0.0000000000   -0.1250000000    0.1052631579    0.0005060729
 1875    0.0000000000   -0.1250000000    0.1578947368    0.0005060729
 1876    0.0000000000   -0.1250000000    0.2105263158    0.0005060729
 1877    0.0000000000   -0.1250000000    0.2631578947    0.0005060729
 1878    0.0000000000   -0.1250000000    0.3157894737    0.0005060729
 1879    0.0000000000   -0.1250000000    0.3684210526    0.0005060729
 1880    0.0000000000   -0.1250000000    0.4210526316    0.0005060729
 1881    0.0000000000   -0.1250000000    0.4736842105    0.0005060729
 1882    0.0000000000    0.0000000000   -0.4736842105    0.0005060729
 1883    0.0000000000    0.0000000000   -0.4210526316    0.0005060729
 1884    0.0000000000    0.0000000000   -0.3684210526    0.0005060729
 1885    0.0000000000    0.0000000000   -0.3157894737    0.0005060729
 1886    0.0000000000    0.0000000000   -0.2631578947    0.0005060729
 1887    0.0000000000    0.0000000000   -0.2105263158    0.0005060729
 1888    0.0000000000    0.0000000000   -0.1578947368    0.0005060729
 1889    0.0000000000    0.0000000000   -0.1052631579    0.0005060729
 1890    0.0000000000    0.0000000000   -0.0526315789    0.0005060729
 1891    0.0000000000    0.0000000000    0.0000000000    0.0002530364
 1892    0.0000000000    0.5000000000   -0.4736842105    0.0005060729
 1893    0.0000000000    0.5000000000   -0.4210526316    0.0005060729
 1894    0.0000000000    0.5000000000   -0.3684210526    0.0005060729
 1895    0.0000000000    0.5000000000   -0.3157894737    0.0005060729
 1896    0.0000000000    0.5000000000   -0.2631578947    0.0005060729
 1897    0.0000000000    0.5000000000   -0.2105263158    0.0005060729
 1898    0.0000000000    0.5000000000   -0.1578947368    0.0005060729
 1899    0.0000000000    0.5000000000   -0.1052631579    0.0005060729
 1900    0.0000000000    0.5000000000   -0.0526315789    0.0005060729
 1901    0.0000000000    0.5000000000    0.0000000000    0.0002530364
 1902    0.5000000000   -0.3750000000   -0.4736842105    0.0005060729
 1903    0.5000000000   -0.3750000000   -0.4210526316    0.0005060729
 1904    0.5000000000   -0.3750000000   -0.3684210526    0.0005060729
 1905    0.5000000000   -0.3750000000   -0.3157894737    0.0005060729
 1906    0.5000000000   -0.3750000000   -0.2631578947    0.0005060729
 1907    0.5000000000   -0.3750000000   -0.2105263158    0.0005060729
 1908    0.5000000000   -0.3750000000   -0.1578947368    0.0005060729
 1909    0.5000000000   -0.3750000000   -0.1052631579    0.0005060729
 1910    0.5000000000   -0.3750000000   -0.0526315789    0.0005060729
 1911    0.5000000000   -0.3750000000    0.0000000000    0.0005060729
 1912    0.5000000000   -0.3750000000    0.0526315789    0.0005060729
 1913    0.5000000000   -0.3750000000    0.1052631579    0.0005060729
 1914    0.5000000000   -0.3750000000    0.1578947368    0.0005060729
 1915    0.5000000000   -0.3750000000    0.2105263158    0.0005060729
 1916    0.5000000000   -0.3750000000    0.2631578947    0.0005060729
 1917    0.5000000000   -0.3750000000    0.3157894737    0.0005060729
 1918    0.5000000000   -0.3750000000    0.3684210526    0.0005060729
 1919    0.5000000000   -0.3750000000    0.4210526316    0.0005060729
 1920    0.5000000000   -0.3750000000    0.4736842105    0.0005060729
 1921    0.5000000000   -0.2500000000   -0.4736842105    0.0005060729
 1922    0.5000000000   -0.2500000000   -0.4210526316    0.0005060729
 1923    0.5000000000   -0.2500000000   -0.3684210526    0.0005060729
 1924    0.5000000000   -0.2500000000   -0.3157894737    0.0005060729
 1925    0.5000000000   -0.2500000000   -0.2631578947    0.0005060729
 1926    0.5000000000   -0.2500000000   -0.2105263158    0.0005060729
 1927    0.5000000000   -0.2500000000   -0.1578947368    0.0005060729
 1928    0.5000000000   -0.2500000000   -0.1052631579    0.0005060729
 1929    0.5000000000   -0.2500000000   -0.0526315789    0.0005060729
 1930    0.5000000000   -0.2500000000    0.0000000000    0.0005060729
 1931    0.5000000000   -0.2500000000    0.0526315789    0.0005060729
 1932    0.5000000000   -0.2500000000    0.1052631579    0.0005060729
 1933    0.5000000000   -0.2500000000    0.1578947368    0.0005060729
 1934    0.5000000000   -0.2500000000    0.2105263158    0.0005060729
 1935    0.5000000000   -0.2500000000    0.2631578947    0.0005060729
 1936    0.5000000000   -0.2500000000    0.3157894737    0.0005060729
 1937    0.5000000000   -0.2500000000    0.3684210526    0.0005060729
 1938    0.5000000000   -0.2500000000    0.4210526316    0.0005060729
 1939    0.5000000000   -0.2500000000    0.4736842105    0.0005060729
 1940    0.5000000000   -0.1250000000   -0.4736842105    0.0005060729
 1941    0.5000000000   -0.1250000000   -0.4210526316    0.0005060729
 1942    0.5000000000   -0.1250000000   -0.3684210526    0.0005060729
 1943    0.5000000000   -0.1250000000   -0.3157894737    0.0005060729
 1944    0.5000000000   -0.1250000000   -0.2631578947    0.0005060729
 1945    0.5000000000   -0.1250000000   -0.2105263158    0.0005060729
 1946    0.5000000000   -0.1250000000   -0.1578947368    0.0005060729
 1947    0.5000000000   -0.1250000000   -0.1052631579    0.0005060729
 1948    0.5000000000   -0.1250000000   -0.0526315789    0.0005060729
 1949    0.5000000000   -0.1250000000    0.0000000000    0.0005060729
 1950    0.5000000000   -0.1250000000    0.0526315789    0.0005060729
 1951    0.5000000000   -0.1250000000    0.1052631579    0.0005060729
 1952    0.5000000000   -0.1250000000    0.1578947368    0.0005060729
 1953    0.5000000000   -0.1250000000    0.2105263158    0.0005060729
 1954    0.5000000000   -0.1250000000    0.2631578947    0.0005060729
 1955    0.5000000000   -0.1250000000    0.3157894737    0.0005060729
 1956    0.5000000000   -0.1250000000    0.3684210526    0.0005060729
 1957    0.5000000000   -0.1250000000    0.4210526316    0.0005060729
 1958    0.5000000000   -0.1250000000    0.4736842105    0.0005060729
 1959    0.5000000000    0.0000000000   -0.4736842105    0.0005060729
 1960    0.5000000000    0.0000000000   -0.4210526316    0.0005060729
 1961    0.5000000000    0.0000000000   -0.3684210526    0.0005060729
 1962    0.5000000000    0.0000000000   -0.3157894737    0.0005060729
 1963    0.5000000000    0.0000000000   -0.2631578947    0.0005060729
 1964    0.5000000000    0.0000000000   -0.2105263158    0.0005060729
 1965    0.5000000000    0.0000000000   -0.1578947368    0.0005060729
 1966    0.5000000000    0.0000000000   -0.1052631579    0.0005060729
 1967    0.5000000000    0.0000000000   -0.0526315789    0.0005060729
 1968    0.5000000000    0.0000000000    0.0000000000    0.0002530364
 1969    0.5000000000    0.5000000000   -0.4736842105    0.0005060729
 1970    0.5000000000    0.5000000000   -0.4210526316    0.0005060729
 1971    0.5000000000    0.5000000000   -0.3684210526    0.0005060729
 1972    0.5000000000    0.5000000000   -0.3157894737    0.0005060729
 1973    0.5000000000    0.5000000000   -0.2631578947    0.0005060729
 1974    0.5000000000    0.5000000000   -0.2105263158    0.0005060729
 1975    0.5000000000    0.5000000000   -0.1578947368    0.0005060729
 1976    0.5000000000    0.5000000000   -0.1052631579    0.0005060729
 1977    0.5000000000    0.5000000000   -0.0526315789    0.0005060729
 1978    0.5000000000    0.5000000000    0.0000000000    0.0002530364
================================================================================


============================ local K-points summary ============================
Number |               Cartesian coordinates              |       Weight
  1      0.4933883961      0.0000000000     -0.3377596586      0.0005060729
  2      0.4933883961      0.0000000000     -0.3002308076      0.0005060729
  3      0.4933883961      0.0000000000     -0.2627019567      0.0005060729
  4      0.4933883961      0.0000000000     -0.2251731057      0.0005060729
  5      0.4933883961      0.0000000000     -0.1876442548      0.0005060729
  6      0.4933883961      0.0000000000     -0.1501154038      0.0005060729
  7      0.4933883961      0.0000000000     -0.1125865529      0.0005060729
  8      0.4933883961      0.0000000000     -0.0750577019      0.0005060729
  9      0.4933883961      0.0000000000     -0.0375288510      0.0005060729
 10      0.4933883961      0.0000000000      0.0000000000      0.0002530364
 11      0.4933883961      0.1440743609     -0.3377596586      0.0005060729
 12      0.4933883961      0.1440743609     -0.3002308076      0.0005060729
 13      0.4933883961      0.1440743609     -0.2627019567      0.0005060729
 14      0.4933883961      0.1440743609     -0.2251731057      0.0005060729
 15      0.4933883961      0.1440743609     -0.1876442548      0.0005060729
 16      0.4933883961      0.1440743609     -0.1501154038      0.0005060729
 17      0.4933883961      0.1440743609     -0.1125865529      0.0005060729
 18      0.4933883961      0.1440743609     -0.0750577019      0.0005060729
 19      0.4933883961      0.1440743609     -0.0375288510      0.0005060729
 20      0.4933883961      0.1440743609      0.0000000000      0.0002530364
================================================================================

Complex-valued NGWFs will be used.
Non Gamma point calculation with KP method will be performed.
Cartesian coordinates of k-point are          0.50000         0.50000         0.50000

Determining parallel strategy ...... done
Calculating Ewald energy ...              -47.085304 Hartree
Basis initialisation ...
... done
Sparse matrix initialisation ...
 done
Fully random NGWF initialisation ...
WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
 done

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
Density renormalisation ...
Target Charge:    40.000000000000 ; Input Charge:    38.984314088440
Density kernel initialisation

Writing density kernel to file "P95.dkn" ... done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.567606976202E+03     3.7494E-03     2.9995E-03
    2         1.567604104371E+03     1.6773E-03     1.3418E-03    -2.8718E-03
    3         1.567603444299E+03     1.0072E-03     8.0576E-04    -6.6007E-04
    4         1.567603182755E+03     6.9985E-04     5.5988E-04    -2.6154E-04
    5         1.567603047751E+03     5.2755E-04     4.2204E-04    -1.3500E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.56760304775079E+03  Eh
     Estimated bandgap           =   7.4706E-02  Eh
     RMS occupancy error         =   1.9448E-08
     [H,K] commutator            =   4.2204E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  001 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.6046E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       9.57499564596473E+02 Eh
   Predicted gain in energy  =      -6.10103483154320E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         8.338066838968E+02     1.2965E-01     1.0372E-01
    2         8.345599887574E+02     2.4575E-01     1.9660E-01     7.5330E-01
    3         8.369700974641E+02     4.4699E-01     3.5760E-01     2.4101E+00
    4         8.422684647792E+02     7.0778E-01     5.6623E-01     5.2984E+00
    5         8.365387141876E+02     4.2344E-01     3.3875E-01    -5.7298E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   8.36538714187553E+02  Eh
     Estimated bandgap           =   1.1182E+01  Eh
     RMS occupancy error         =   2.2271E-07
     [H,K] commutator            =   3.3875E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  002 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.4354E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       3.26421115816920E+02 Eh
   Predicted gain in energy  =      -5.10117598370633E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         2.991518712643E+02     3.1519E-01     2.5215E-01
    2         3.079203177131E+02     8.8725E-01     7.0980E-01     8.7684E+00
    3         3.095197134905E+02     9.5481E-01     7.6385E-01     1.5994E+00
    4         3.061082573292E+02     8.0365E-01     6.4292E-01    -3.4115E+00
    5         2.985403121028E+02     2.2480E-01     1.7984E-01    -7.5679E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   2.98540312102783E+02  Eh
     Estimated bandgap           =   1.7822E+01  Eh
     RMS occupancy error         =   1.8944E-06
     [H,K] commutator            =   1.7984E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  003 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2695E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       1.42118315332525E+02 Eh
   Predicted gain in energy  =      -1.56421996770258E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.216627039569E+02     1.1294E-01     9.0353E-02
    2         1.224855605374E+02     2.5699E-01     2.0559E-01     8.2286E-01
    3         1.261499941172E+02     5.4801E-01     4.3841E-01     3.6644E+00
    4         1.353353425759E+02     9.2871E-01     7.4300E-01     9.1853E+00
    5         1.269340776675E+02     5.9166E-01     4.7333E-01    -8.4013E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.26934077667480E+02  Eh
     Estimated bandgap           =   1.2003E+01  Eh
     RMS occupancy error         =   3.0398E-06
     [H,K] commutator            =   4.7333E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  004 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2876E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       4.74212725072077E+01 Eh
   Predicted gain in energy  =      -7.95128051602722E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         3.512208990751E+01     2.5319E-01     2.0256E-01
    2         3.473300410491E+01     2.2385E-01     1.7908E-01    -3.8909E-01
    3         3.410071530420E+01     1.5758E-01     1.2606E-01    -6.3229E-01
    4         3.409248935763E+01     1.5936E-01     1.2748E-01    -8.2259E-03
    5         3.403174243913E+01     1.5275E-01     1.2220E-01    -6.0747E-02
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   3.40317424391327E+01  Eh
     Estimated bandgap           =   7.8659E+00  Eh
     RMS occupancy error         =   1.1896E-07
     [H,K] commutator            =   1.2220E-01
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  005 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.5121E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -2.91096016615133E+01 Eh
   Predicted gain in energy  =      -6.31413441006460E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -3.143715629288E+01     5.4568E-02     4.3658E-02
    2        -3.161906204107E+01     1.1754E-02     9.4035E-03    -1.8191E-01
    3        -3.162844879840E+01     2.0261E-03     1.6209E-03    -9.3868E-03
    4        -3.162871149614E+01     3.4007E-04     2.7206E-04    -2.6270E-04
    5        -3.162871892074E+01     5.7138E-05     4.5710E-05    -7.4246E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -3.16287189207403E+01  Eh
     Estimated bandgap           =   3.0083E+00  Eh
     RMS occupancy error         =   2.4763E-12
     [H,K] commutator            =   4.5710E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  006 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.5469E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -5.24942802146075E+01 Eh
   Predicted gain in energy  =      -2.08655612938672E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -5.304486256095E+01     4.8726E-02     3.8982E-02
    2        -5.333797162794E+01     8.4529E-03     6.7623E-03    -2.9311E-01
    3        -5.334729671248E+01     1.8408E-03     1.4727E-03    -9.3251E-03
    4        -5.334773229797E+01     4.2966E-04     3.4372E-04    -4.3559E-04
    5        -5.334775581092E+01     1.0427E-04     8.3417E-05    -2.3513E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -5.33477558109201E+01  Eh
     Estimated bandgap           =   1.2570E+00  Eh
     RMS occupancy error         =   1.5992E-10
     [H,K] commutator            =   8.3417E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  007 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.4450E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.23128555972168E+01 Eh
   Predicted gain in energy  =      -8.96509978629675E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.334357936181E+01     3.7350E-02     2.9880E-02
    2        -6.359494731075E+01     8.5430E-03     6.8344E-03    -2.5137E-01
    3        -6.360921827695E+01     2.4807E-03     1.9845E-03    -1.4271E-02
    4        -6.361041495988E+01     7.8288E-04     6.2630E-04    -1.1967E-03
    5        -6.361053279099E+01     2.5743E-04     2.0594E-04    -1.1783E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.36105327909877E+01  Eh
     Estimated bandgap           =   6.7926E-01  Eh
     RMS occupancy error         =   7.2279E-09
     [H,K] commutator            =   2.0594E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  008 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.6274E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.84866163343717E+01 Eh
   Predicted gain in energy  =      -4.87608354338403E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.890358955307E+01     3.0080E-02     2.4064E-02
    2        -6.911611336908E+01     8.2610E-03     6.6088E-03    -2.1252E-01
    3        -6.913395783582E+01     2.9049E-03     2.3239E-03    -1.7844E-02
    4        -6.913617759710E+01     1.1120E-03     8.8957E-04    -2.2198E-03
    5        -6.913649835415E+01     4.4484E-04     3.5587E-04    -3.2076E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.91364983541546E+01  Eh
     Estimated bandgap           =   3.9368E-01  Eh
     RMS occupancy error         =   1.1872E-07
     [H,K] commutator            =   3.5587E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  009 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2166E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.18833077383295E+01 Eh
   Predicted gain in energy  =      -2.74680938417488E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.186510024923E+01     2.1874E-02     1.7499E-02
    2        -7.200093764604E+01     6.7623E-03     5.4099E-03    -1.3584E-01
    3        -7.201507847043E+01     2.6221E-03     2.0977E-03    -1.4141E-02
    4        -7.201722156089E+01     1.0887E-03     8.7096E-04    -2.1431E-03
    5        -7.201759023379E+01     4.7408E-04     3.7926E-04    -3.6867E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.20175902337894E+01  Eh
     Estimated bandgap           =   2.7630E-01  Eh
     RMS occupancy error         =   2.2554E-12
     [H,K] commutator            =   3.7926E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  010 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0458E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.41665603913594E+01 Eh
   Predicted gain in energy  =      -2.14897015756992E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.417130107284E+01     2.2014E-02     1.7612E-02
    2        -7.434112066599E+01     7.3637E-03     5.8910E-03    -1.6982E-01
    3        -7.436254055245E+01     3.1356E-03     2.5085E-03    -2.1420E-02
    4        -7.436653760521E+01     1.4581E-03     1.1665E-03    -3.9971E-03
    5        -7.436739733067E+01     7.2057E-04     5.7646E-04    -8.5973E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.43673973306710E+01  Eh
     Estimated bandgap           =   1.7818E-01  Eh
     RMS occupancy error         =   1.1729E-10
     [H,K] commutator            =   5.7646E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  011 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.2109E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.54000300810473E+01 Eh
   Predicted gain in energy  =      -1.03263275037627E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.536772870422E+01     1.1635E-02     9.3082E-03
    2        -7.542720279319E+01     4.4368E-03     3.5494E-03    -5.9474E-02
    3        -7.543632653341E+01     2.1483E-03     1.7186E-03    -9.1237E-03
    4        -7.543847803345E+01     1.1164E-03     8.9316E-04    -2.1515E-03
    5        -7.543906888880E+01     6.1350E-04     4.9080E-04    -5.9086E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.54390688887979E+01  Eh
     Estimated bandgap           =   1.7152E-01  Eh
     RMS occupancy error         =   4.3284E-10
     [H,K] commutator            =   4.9080E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  012 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.3965E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.60520279192466E+01 Eh
   Predicted gain in energy  =      -6.12959030448664E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.599410545190E+01     9.6927E-03     7.7542E-03
    2        -7.604367184570E+01     3.9912E-03     3.1929E-03    -4.9566E-02
    3        -7.605217976512E+01     2.1175E-03     1.6940E-03    -8.5079E-03
    4        -7.605456535204E+01     1.2005E-03     9.6043E-04    -2.3856E-03
    5        -7.605536072710E+01     7.0860E-04     5.6688E-04    -7.9538E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.60553607271048E+01  Eh
     Estimated bandgap           =   1.7361E-01  Eh
     RMS occupancy error         =   4.1093E-09
     [H,K] commutator            =   5.6688E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  013 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.6915E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.63507155697531E+01 Eh
   Predicted gain in energy  =      -2.95354842648308E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.635033670784E+01     3.4360E-03     2.7488E-03
    2        -7.635703417811E+01     1.7050E-03     1.3640E-03    -6.6975E-03
    3        -7.635870387350E+01     1.1043E-03     8.8341E-04    -1.6697E-03
    4        -7.635936036296E+01     6.6303E-04     5.3042E-04    -6.5649E-04
    5        -7.635960091989E+01     4.0417E-04     3.2334E-04    -2.4056E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.63596009198923E+01  Eh
     Estimated bandgap           =   1.7480E-01  Eh
     RMS occupancy error         =   8.4851E-10
     [H,K] commutator            =   3.2334E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  014 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.5131E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.66132217900507E+01 Eh
   Predicted gain in energy  =      -2.53620870158400E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.660987587337E+01     6.1342E-03     4.9074E-03
    2        -7.663483615274E+01     2.8050E-03     2.2440E-03    -2.4960E-02
    3        -7.663998444937E+01     1.6451E-03     1.3161E-03    -5.1483E-03
    4        -7.664166640582E+01     1.0307E-03     8.2452E-04    -1.6820E-03
    5        -7.664234898388E+01     6.4938E-04     5.1950E-04    -6.8258E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.66423489838800E+01  Eh
     Estimated bandgap           =   1.7335E-01  Eh
     RMS occupancy error         =   6.5243E-09
     [H,K] commutator            =   5.1950E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  015 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.3543E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.68674146433109E+01 Eh
   Predicted gain in energy  =      -2.25065659430925E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.684277316035E+01     5.9024E-03     4.7219E-03
    2        -7.686873535636E+01     2.5453E-03     2.0362E-03    -2.5962E-02
    3        -7.687375188454E+01     1.5912E-03     1.2730E-03    -5.0165E-03
    4        -7.687534899425E+01     1.0846E-03     8.6765E-04    -1.5971E-03
    5        -7.687611906925E+01     6.7253E-04     5.3802E-04    -7.7007E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.68761190692458E+01  Eh
     Estimated bandgap           =   1.7137E-01  Eh
     RMS occupancy error         =   3.5356E-08
     [H,K] commutator            =   5.3802E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  016 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.7664E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70247801088173E+01 Eh
   Predicted gain in energy  =      -1.48661039571465E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.698246102946E+01     4.2059E-03     3.3648E-03
    2        -7.699649062510E+01     2.1032E-03     1.6826E-03    -1.4030E-02
    3        -7.699955585510E+01     1.4506E-03     1.1604E-03    -3.0652E-03
    4        -7.700092730328E+01     8.9721E-04     7.1777E-04    -1.3714E-03
    5        -7.700154199770E+01     6.1740E-04     4.9392E-04    -6.1469E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70015419976956E+01  Eh
     Estimated bandgap           =   1.6572E-01  Eh
     RMS occupancy error         =   7.0290E-08
     [H,K] commutator            =   4.9392E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  017 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3702E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70850051549852E+01 Eh
   Predicted gain in energy  =      -8.34631572895290E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.708497165816E+01     1.3401E-03     1.0721E-03
    2        -7.708635709820E+01     8.2765E-04     6.6212E-04    -1.3854E-03
    3        -7.708681590793E+01     6.8984E-04     5.5187E-04    -4.5881E-04
    4        -7.708714718017E+01     4.8384E-04     3.8707E-04    -3.3127E-04
    5        -7.708731666418E+01     3.4370E-04     2.7496E-04    -1.6948E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70873166641797E+01  Eh
     Estimated bandgap           =   1.6488E-01  Eh
     RMS occupancy error         =   4.0469E-08
     [H,K] commutator            =   2.7496E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  018 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.7800E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71450273875773E+01 Eh
   Predicted gain in energy  =      -5.77107233976051E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.714469227605E+01     1.7778E-03     1.4223E-03
    2        -7.714723525534E+01     9.0351E-04     7.2281E-04    -2.5430E-03
    3        -7.714787001156E+01     6.5234E-04     5.2187E-04    -6.3476E-04
    4        -7.714816399927E+01     4.4916E-04     3.5933E-04    -2.9399E-04
    5        -7.714830131481E+01     3.3954E-04     2.7163E-04    -1.3732E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71483013148148E+01  Eh
     Estimated bandgap           =   1.6228E-01  Eh
     RMS occupancy error         =   1.9106E-08
     [H,K] commutator            =   2.7163E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  019 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.4439E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71864162521422E+01 Eh
   Predicted gain in energy  =      -3.81149373273786E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.718529696167E+01     1.6704E-03     1.3363E-03
    2        -7.718784786971E+01     7.7977E-04     6.2381E-04    -2.5509E-03
    3        -7.718840436683E+01     5.8793E-04     4.7034E-04    -5.5650E-04
    4        -7.718860601354E+01     3.7249E-04     2.9799E-04    -2.0165E-04
    5        -7.718872262285E+01     2.4839E-04     1.9871E-04    -1.1661E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71887226228495E+01  Eh
     Estimated bandgap           =   1.5962E-01  Eh
     RMS occupancy error         =   2.3383E-08
     [H,K] commutator            =   1.9871E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  020 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.1881E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72143760945732E+01 Eh
   Predicted gain in energy  =      -2.56534717236576E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.721233538190E+01     1.4298E-03     1.1438E-03
    2        -7.721427258867E+01     6.5665E-04     5.2532E-04    -1.9372E-03
    3        -7.721459314179E+01     5.7128E-04     4.5703E-04    -3.2055E-04
    4        -7.721475333096E+01     3.4176E-04     2.7341E-04    -1.6019E-04
    5        -7.721483580094E+01     2.6685E-04     2.1348E-04    -8.2470E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72148358009397E+01  Eh
     Estimated bandgap           =   1.5568E-01  Eh
     RMS occupancy error         =   3.6284E-09
     [H,K] commutator            =   2.1348E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  021 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0177E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72282810047207E+01 Eh
   Predicted gain in energy  =      -1.34452037809751E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.722828135256E+01     3.7770E-04     3.0216E-04
    2        -7.722839761518E+01     2.4525E-04     1.9620E-04    -1.1626E-04
    3        -7.722844148566E+01     2.2310E-04     1.7848E-04    -4.3870E-05
    4        -7.722849342399E+01     1.6772E-04     1.3418E-04    -5.1938E-05
    5        -7.722851462851E+01     1.1497E-04     9.1976E-05    -2.1205E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72285146285143E+01  Eh
     Estimated bandgap           =   1.5426E-01  Eh
     RMS occupancy error         =   1.6279E-08
     [H,K] commutator            =   9.1976E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  022 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.3555E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72382821793920E+01 Eh
   Predicted gain in energy  =      -9.76755087765468E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.723827073340E+01     5.7769E-04     4.6215E-04
    2        -7.723852439900E+01     3.5730E-04     2.8584E-04    -2.5367E-04
    3        -7.723857891166E+01     2.2831E-04     1.8265E-04    -5.4513E-05
    4        -7.723861240821E+01     1.7107E-04     1.3686E-04    -3.3497E-05
    5        -7.723863339117E+01     1.1497E-04     9.1977E-05    -2.0983E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72386333911737E+01  Eh
     Estimated bandgap           =   1.5151E-01  Eh
     RMS occupancy error         =   3.4337E-10
     [H,K] commutator            =   9.1977E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  023 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  6.2430E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72455587500535E+01 Eh
   Predicted gain in energy  =      -6.92535887985457E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.724549745738E+01     5.9121E-04     4.7297E-04
    2        -7.724582728888E+01     3.1064E-04     2.4851E-04    -3.2983E-04
    3        -7.724587993706E+01     2.7798E-04     2.2238E-04    -5.2648E-05
    4        -7.724592559423E+01     1.6569E-04     1.3255E-04    -4.5657E-05
    5        -7.724594669199E+01     1.2993E-04     1.0394E-04    -2.1098E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72459466919869E+01  Eh
     Estimated bandgap           =   1.4818E-01  Eh
     RMS occupancy error         =   3.7929E-09
     [H,K] commutator            =   1.0394E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  024 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.8830E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72502939384139E+01 Eh
   Predicted gain in energy  =      -4.34724642694562E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725018568186E+01     4.9852E-04     3.9882E-04
    2        -7.725042972007E+01     2.4891E-04     1.9913E-04    -2.4404E-04
    3        -7.725047159741E+01     2.2746E-04     1.8197E-04    -4.1877E-05
    4        -7.725050006245E+01     1.6101E-04     1.2881E-04    -2.8465E-05
    5        -7.725051503215E+01     1.1090E-04     8.8718E-05    -1.4970E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72505150321478E+01  Eh
     Estimated bandgap           =   1.4502E-01  Eh
     RMS occupancy error         =   3.8891E-09
     [H,K] commutator            =   8.8718E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  025 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.1224E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72529128966208E+01 Eh
   Predicted gain in energy  =      -2.39786447301071E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725291293252E+01     1.4639E-04     1.1711E-04
    2        -7.725292904724E+01     9.7809E-05     7.8248E-05    -1.6115E-05
    3        -7.725293573381E+01     8.3444E-05     6.6756E-05    -6.6866E-06
    4        -7.725294301854E+01     8.8724E-05     7.0980E-05    -7.2847E-06
    5        -7.725294643304E+01     4.8130E-05     3.8504E-05    -3.4145E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72529464330376E+01  Eh
     Estimated bandgap           =   1.4416E-01  Eh
     RMS occupancy error         =   1.2085E-09
     [H,K] commutator            =   3.8504E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  026 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.9807E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72546419836362E+01 Eh
   Predicted gain in energy  =      -1.69555059852655E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725464125620E+01     2.0077E-04     1.6062E-04
    2        -7.725467632889E+01     1.1617E-04     9.2933E-05    -3.5073E-05
    3        -7.725468348897E+01     8.2693E-05     6.6154E-05    -7.1601E-06
    4        -7.725468709956E+01     6.3948E-05     5.1158E-05    -3.6106E-06
    5        -7.725468965651E+01     4.2704E-05     3.4164E-05    -2.5569E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72546896565126E+01  Eh
     Estimated bandgap           =   1.4257E-01  Eh
     RMS occupancy error         =   4.0244E-08
     [H,K] commutator            =   3.4164E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  027 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.4752E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72557670442044E+01 Eh
   Predicted gain in energy  =      -1.07738769176535E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725576406796E+01     2.0477E-04     1.6382E-04
    2        -7.725580788788E+01     1.1217E-04     8.9737E-05    -4.3820E-05
    3        -7.725581370188E+01     9.7667E-05     7.8134E-05    -5.8140E-06
    4        -7.725582031414E+01     6.0875E-05     4.8700E-05    -6.6123E-06
    5        -7.725582276118E+01     4.6146E-05     3.6917E-05    -2.4470E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72558227611797E+01  Eh
     Estimated bandgap           =   1.4091E-01  Eh
     RMS occupancy error         =   5.1565E-08
     [H,K] commutator            =   3.6917E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  028 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.9844E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72565173727124E+01 Eh
   Predicted gain in energy  =      -6.94611532694012E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725651181930E+01     1.8364E-04     1.4691E-04
    2        -7.725654695538E+01     1.0147E-04     8.1173E-05    -3.5136E-05
    3        -7.725655323142E+01     7.5978E-05     6.0783E-05    -6.2760E-06
    4        -7.725655858590E+01     5.2006E-05     4.1605E-05    -5.3545E-06
    5        -7.725656013796E+01     4.8405E-05     3.8724E-05    -1.5521E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72565601379583E+01  Eh
     Estimated bandgap           =   1.3933E-01  Eh
     RMS occupancy error         =   3.0166E-08
     [H,K] commutator            =   3.8724E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  029 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.8700E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72569691984317E+01 Eh
   Predicted gain in energy  =      -4.09060473430145E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725696923460E+01     4.7625E-05     3.8100E-05
    2        -7.725697075969E+01     4.4642E-05     3.5713E-05    -1.5251E-06
    3        -7.725697162065E+01     2.9239E-05     2.3391E-05    -8.6096E-07
    4        -7.725697268888E+01     3.5539E-05     2.8431E-05    -1.0682E-06
    5        -7.725697366915E+01     1.8706E-05     1.4965E-05    -9.8027E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72569736691464E+01  Eh
     Estimated bandgap           =   1.3899E-01  Eh
     RMS occupancy error         =   1.1397E-11
     [H,K] commutator            =   1.4965E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  030 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2917E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72572760796542E+01 Eh
   Predicted gain in energy  =      -3.02410507813988E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725727607681E+01     7.1579E-05     5.7263E-05
    2        -7.725728074141E+01     4.9636E-05     3.9709E-05    -4.6646E-06
    3        -7.725728173588E+01     3.3588E-05     2.6871E-05    -9.9447E-07
    4        -7.725728236822E+01     2.3988E-05     1.9190E-05    -6.3235E-07
    5        -7.725728283389E+01     1.7100E-05     1.3680E-05    -4.6566E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72572828338864E+01  Eh
     Estimated bandgap           =   1.3826E-01  Eh
     RMS occupancy error         =   3.6038E-09
     [H,K] commutator            =   1.3680E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  031 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0974E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72575039085295E+01 Eh
   Predicted gain in energy  =      -2.21074643079078E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725750374560E+01     8.6949E-05     6.9559E-05
    2        -7.725751262160E+01     4.4023E-05     3.5219E-05    -8.8760E-06
    3        -7.725751426286E+01     3.9341E-05     3.1473E-05    -1.6413E-06
    4        -7.725751546881E+01     2.3345E-05     1.8676E-05    -1.2060E-06
    5        -7.725751603206E+01     2.0549E-05     1.6439E-05    -5.6325E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72575160320604E+01  Eh
     Estimated bandgap           =   1.3735E-01  Eh
     RMS occupancy error         =   1.3874E-08
     [H,K] commutator            =   1.6439E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  032 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  8.7132E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72576604540142E+01 Eh
   Predicted gain in energy  =      -1.44421953791607E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725766004497E+01     8.0938E-05     6.4751E-05
    2        -7.725766753951E+01     4.7721E-05     3.8177E-05    -7.4945E-06
    3        -7.725766859269E+01     4.1226E-05     3.2980E-05    -1.0532E-06
    4        -7.725766964872E+01     3.1618E-05     2.5295E-05    -1.0560E-06
    5        -7.725767043528E+01     2.0719E-05     1.6575E-05    -7.8656E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72576704352819E+01  Eh
     Estimated bandgap           =   1.3648E-01  Eh
     RMS occupancy error         =   1.6159E-08
     [H,K] commutator            =   1.6575E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  033 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.8823E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72577569152533E+01 Eh
   Predicted gain in energy  =      -8.64799714577202E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725775691685E+01     2.4114E-05     1.9291E-05
    2        -7.725775742036E+01     1.9977E-05     1.5982E-05    -5.0351E-07
    3        -7.725775767018E+01     1.8820E-05     1.5056E-05    -2.4983E-07
    4        -7.725775794674E+01     2.3537E-05     1.8830E-05    -2.7656E-07
    5        -7.725775837104E+01     1.3582E-05     1.0866E-05    -4.2430E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72577583710404E+01  Eh
     Estimated bandgap           =   1.3626E-01  Eh
     RMS occupancy error         =   1.0659E-07
     [H,K] commutator            =   1.0866E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  034 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.6718E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72578221965299E+01 Eh
   Predicted gain in energy  =      -6.38254894624879E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725782219505E+01     3.2299E-05     2.5839E-05
    2        -7.725782322899E+01     2.4450E-05     1.9560E-05    -1.0339E-06
    3        -7.725782352472E+01     1.8164E-05     1.4531E-05    -2.9573E-07
    4        -7.725782368579E+01     1.4184E-05     1.1347E-05    -1.6107E-07
    5        -7.725782384900E+01     1.1826E-05     9.4607E-06    -1.6321E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72578238489963E+01  Eh
     Estimated bandgap           =   1.3581E-01  Eh
     RMS occupancy error         =   7.2195E-09
     [H,K] commutator            =   9.4607E-06
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  035 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.7834E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72578660301918E+01 Eh
   Predicted gain in energy  =      -4.21811955533258E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725786601530E+01     3.5935E-05     2.8748E-05
    2        -7.725786766748E+01     2.5378E-05     2.0302E-05    -1.6522E-06
    3        -7.725786797416E+01     2.2118E-05     1.7694E-05    -3.0667E-07
    4        -7.725786831435E+01     2.0825E-05     1.6660E-05    -3.4020E-07
    5        -7.725786857666E+01     1.2829E-05     1.0263E-05    -2.6231E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72578685766644E+01  Eh
     Estimated bandgap           =   1.3532E-01  Eh
     RMS occupancy error         =   1.1768E-08
     [H,K] commutator            =   1.0263E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  036 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.9157E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72578968130877E+01 Eh
   Predicted gain in energy  =      -2.82364233044063E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725789677417E+01     3.3509E-05     2.6807E-05
    2        -7.725789816667E+01     2.4277E-05     1.9421E-05    -1.3925E-06
    3        -7.725789847721E+01     2.0817E-05     1.6654E-05    -3.1053E-07
    4        -7.725789880286E+01     2.3686E-05     1.8949E-05    -3.2565E-07
    5        -7.725789910595E+01     1.2504E-05     1.0003E-05    -3.0310E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72578991059538E+01  Eh
     Estimated bandgap           =   1.3486E-01  Eh
     RMS occupancy error         =   2.4880E-08
     [H,K] commutator            =   1.0003E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  037 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.0648E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72579167561654E+01 Eh
   Predicted gain in energy  =      -1.76502115749599E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725791675831E+01     1.1754E-05     9.4031E-06
    2        -7.725791688888E+01     1.1098E-05     8.8785E-06    -1.3057E-07
    3        -7.725791696506E+01     1.1659E-05     9.3269E-06    -7.6179E-08
    4        -7.725791707816E+01     1.4746E-05     1.1797E-05    -1.1310E-07
    5        -7.725791727578E+01     9.3311E-06     7.4648E-06    -1.9761E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72579172757762E+01  Eh
     Estimated bandgap           =   1.3476E-01  Eh
     RMS occupancy error         =   7.6893E-08
     [H,K] commutator            =   7.4648E-06
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  038 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.6923E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72579307653844E+01 Eh
   Predicted gain in energy  =      -1.34896081789293E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725793076626E+01     1.6238E-05     1.2990E-05
    2        -7.725793106494E+01     1.3791E-05     1.1033E-05    -2.9868E-07
    3        -7.725793117707E+01     7.9232E-06     6.3386E-06    -1.1214E-07
    4        -7.725793120979E+01     7.3554E-06     5.8843E-06    -3.2716E-08
    5        -7.725793124430E+01     6.7462E-06     5.3970E-06    -3.4513E-08
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72579312443031E+01  Eh
     Estimated bandgap           =   1.3455E-01  Eh
     RMS occupancy error         =   6.9965E-10
     [H,K] commutator            =   5.3970E-06
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  039 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3073E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72579415816092E+01 Eh
   Predicted gain in energy  =      -1.03373060937884E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725794157957E+01     1.7193E-05     1.3755E-05
    2        -7.725794199506E+01     1.3949E-05     1.1159E-05    -4.1549E-07
    3        -7.725794210539E+01     1.1181E-05     8.9449E-06    -1.1033E-07
    4        -7.725794220674E+01     1.3612E-05     1.0889E-05    -1.0135E-07
    5        -7.725794229399E+01     7.4001E-06     5.9201E-06    -8.7242E-08
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72579422939861E+01  Eh
     Estimated bandgap           =   1.3426E-01  Eh
     RMS occupancy error         =   3.6858E-09
     [H,K] commutator            =   5.9201E-06
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  040 #############################
################################################################################

>>> Checking for convergence of NGWFs: 
           ........................................................
           |         *** NGWF optimisation converged ***          |
           | RMS NGWF gradient =    0.00000188792230              |
           | Criteria satisfied:                                  |
           | -> RMS NGWF gradient lower than set threshold.       |
           ========================================================

================================================================================
           ---------------- ENERGY COMPONENTS (Eh) ----------------
           | Kinetic                    :       19.43943146072344 |
           | Pseudopotential (local)    :      -20.79678484143727 |
           | Pseudo (non-coul chg cor)  :        0.00000000000000
           | Pseudopotential (non-local):        1.31779328090874 |
           | Hartree                    :        8.41973247433269 |
           | Exchange-correlation       :      -38.55281030031426 |
           | Ewald                      :      -47.08530436819946 |
           | Total                      :      -77.25794229398610 |
           --------------------------------------------------------
           Integrated density           :       40.00000000000045
================================================================================


                        <<<<< CALCULATION SUMMARY >>>>>                         
|ITER|    RMS GRADIENT   |     TOTAL ENERGY    |   step   |     Epredicted              
   0     0.03604556466242   1567.60304775079294   0.608953    957.49956459647296        
   1     0.04435395554166    836.53871418755307   0.321071    326.42111581691984        
   2     0.02269533105841    298.54031210278328   0.470635    142.11831533252516        
   3     0.01287635932204    126.93407766747991   0.731351     47.42127250720773        
   4     0.00751211987740     34.03174243913269   2.421848    -29.10960166151331        
   5     0.00354692332721    -31.62871892074029   3.141837    -52.49428021460752        
   6     0.00244500928067    -53.34775581092007   2.893432    -62.31285559721682        
   7     0.00162744557133    -63.61053279098767   3.244049    -68.48661633437170        
   8     0.00121659038967    -69.13649835415460   4.016963    -71.88330773832948        
   9     0.00104578042032    -72.01759023378943   4.086217    -74.16656039135935        
  10     0.00072109377084    -74.36739733067100   3.954872    -75.40003008104726        
  11     0.00053964915814    -75.43906888879793   4.263485    -76.05202791924660        
  12     0.00046914681411    -76.05536072710484   2.904588    -76.35071556975315        
  13     0.00035131293450    -76.35960091989233   4.332904    -76.61322179005073        
  14     0.00033542713569    -76.64234898388000   3.950116    -76.86741464331092        
  15     0.00027663821249    -76.87611906924582   4.138288    -77.02478010881728        
  16     0.00023702405310    -77.00154199769564   3.215644    -77.08500515498517        
  17     0.00017799614910    -77.08731666417972   3.870122    -77.14502738757733        
  18     0.00014439090979    -77.14830131481480   3.770488    -77.18641625214218        
  19     0.00011880664691    -77.18872262284951   3.744896    -77.21437609457317        
  20     0.00010176599460    -77.21483580093970   2.810089    -77.22828100472067        
  21     0.00007355456099    -77.22851462851430   3.871516    -77.23828217939196        
  22     0.00006243043522    -77.23863339117368   3.721489    -77.24555875005353        
  23     0.00004883034168    -77.24594669198693   3.757501    -77.25029393841388        
  24     0.00004122417544    -77.25051503214776   3.054068    -77.25291289662077        
  25     0.00002980733718    -77.25294643303765   4.101899    -77.25464198363618        
  26     0.00002475166969    -77.25468965651260   3.703157    -77.25576704420436        
  27     0.00001984415680    -77.25582276117974   3.641114    -77.25651737271244        
  28     0.00001869991415    -77.25656013795832   2.532015    -77.25696919843175        
  29     0.00001291695072    -77.25697366914639   3.903846    -77.25727607965420        
  30     0.00001097350559    -77.25728283388641   3.884883    -77.25750390852949        
  31     0.00000871318427    -77.25751603206038   3.916362    -77.25766045401417        
  32     0.00000788234662    -77.25767043528185   3.012746    -77.25775691525331        
  33     0.00000567181273    -77.25775837104042   4.264402    -77.25782219652989        
  34     0.00000478343820    -77.25782384899627   3.886845    -77.25786603019182        
  35     0.00000391569001    -77.25786857666438   3.771348    -77.25789681308768        
  36     0.00000406481468    -77.25789910595381   2.312206    -77.25791675616539        
  37     0.00000269232393    -77.25791727577624   4.017478    -77.25793076538442        
  38     0.00000230732230    -77.25793124430309   4.096621    -77.25794158160919        
  39     0.00000188792230    -77.25794229398612  <-- CG                                 

------------------------------ TIMING INFORMATION ------------------------------
AVERAGE TIME:   10293.776s on      1 proc(s)                                    
TOTAL TIME:     10293.776s on      1 proc(s)                                    
==================== AVERAGE TIMINGS FROM ALL PROCS (CUMULATIVE) =====================
|| TAG                                         #calls     cpu time   %total  Gflops ||
|| onetep.F90 final imbalance                 :     1        0.00s   0.000%  ------ ||
|| onetep.F90 main loop imbalance             :     1        0.00s   0.000%  ------ ||
|| hash_table_free                            :    80        0.00s   0.000%  ------ ||
|| sparse_init                                :     1        0.00s   0.000%  ------ ||
|| pseudo_make_structure_factor               :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_core_density              :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_local_on_grid             :     1        0.01s   0.000%  ------ ||
|| ewald_calculate_energy                     :     1        0.01s   0.000%  ------ ||
|| linalg_dgemv                               :    49        0.02s   0.000%  ------ ||
|| sparse_set_to_garbage                      :  9560        0.06s   0.001%  ------ ||
|| palser_mano_kernel_optimise_spam3_embed    :    20        0.07s   0.001%  ------ ||
|| density_fftbox_interp_mult_imbal           : 245.8k       0.10s   0.001%  ------ ||
|| density_init_guess_real                    :     1        0.17s   0.002%  ------ ||
|| pseudopotentials_nonlocal_mat              :    80        0.19s   0.002%  ------ ||
|| sparse_embed_array_hotelling_invert        :    82        0.39s   0.004%  ------ ||
|| restart_kernel_write                       :    41        1.04s   0.010%  ------ ||
|| ngwfs_initialise_from_radial               :    20        1.11s   0.011%  ------ ||
|| sparse_trace                               : 163.0k       1.50s   0.015%  ------ ||
|| ngwf_gradient_coeffs                       :    40        2.46s   0.024%  ------ ||
|| lnv_gradient_norm                          :   200        2.67s   0.026%  ------ ||
|| hartree_on_grid_single                     :   385        3.96s   0.038%  ------ ||
|| sparse_product                             : 203.8k       5.19s   0.050%  ------ ||
|| basis_extract_function_from_box            : 51200        9.31s   0.090%  ------ ||
|| fourier_apply_cell_backward                :  1927        9.34s   0.091%   2.194 ||
|| fourier_apply_cell_forward                 :  1925        9.87s   0.096%   2.074 ||
|| energy_and_force_init_cell                 :     1       10.80s   0.105%  ------ ||
|| restart_ngwfs_tightbox_output              :    39       12.12s   0.118%  ------ ||
|| hamiltonian_energy_components              :     1       15.64s   0.152%  ------ ||
|| cell_grid_extract_box_real                 : 154.2k      16.71s   0.162%  ------ ||
|| projectors_init_fftbox_recip               :  3200       19.27s   0.187%  ------ ||
|| xc_energy_potential                        :   385       31.93s   0.310%  ------ ||
|| kernel_fix                                 :   203       34.08s   0.331%  ------ ||
|| kernel_purify                              :   623       35.73s   0.347%  ------ ||
|| cell_grid_deposit_box_real                 : 245.8k     105.98s   1.030%  ------ ||
|| density_fftbox_deposit_to_cell             : 245.8k     107.45s   1.044%  ------ ||
|| basis_copy_function_to_box                 : 450.6k     111.65s   1.085%  ------ ||
|| integrals_kinetic_spam3                    :  1600      130.29s   1.266%  ------ ||
|| function_ops_brappd_ketppd_spam3           :  1600      138.84s   1.349%  ------ ||
|| projectors_gradient_batch                  :  1600      199.18s   1.935%  ------ ||
|| projectors_func_ovlp_box_spam3             :  1600      285.69s   2.775%  ------ ||
|| integrals_locpot_mat_els_batch             :  8040      571.57s   5.553%  ------ ||
|| ngwf_gradient_build_batch                  :  1600      676.09s   6.568%  ------ ||
|| basis_dot_function_with_box                : 7.419M     894.20s   8.687%  ------ ||
|| ngwf_gradient_batch                        :  1600     1415.11s  13.747%  ------ ||
|| potential_apply_to_ngwf_batch              :  8040     1433.73s  13.928%  ------ ||
|| density_batch_row_sums                     : 15360     1453.58s  14.121%  ------ ||
|| ngwf_gradient_lnv                          :    40     1469.35s  14.274%  ------ ||
|| basis_add_function_to_box                  : 11.14M    1980.48s  19.240%  ------ ||
|| integrals_locpot_dbl_grid                  :  4020     2005.95s  19.487%  ------ ||
|| fourier_apply_box                          : 2.086M    3095.21s  30.069%   6.513 ||
|| density_fftbox_interpolate_multiply        : 245.8k    3651.95s  35.477%  ------ ||
|| density_batch_interp_deposit               : 15360     3781.56s  36.736%  ------ ||
|| density_on_dbl_grid                        :  7680     5275.84s  51.253%  ------ ||
|| hamiltonian_lhxc_calculate                 :   383     5736.47s  55.728%  ------ ||
|| lnv_denskernel_optimise_cg                 :    40     7364.98s  71.548%  ------ ||
|| ngwf_cg_optimise                           :     1    10263.72s  99.708%  ------ ||
|| energy_and_forces                          :     1    10282.53s  99.891%  ------ ||
|| total_time                                 :     1    10293.78s 100.000%  ------ ||
======================================================================================
Overhead of generating timer report: 
- 0 ms averaging over threads,
- 0 ms ensuring consistency across MPI ranks,
- 0 ms printing in order.

Job completed: 17-01-2025 01:54 (-0000)

