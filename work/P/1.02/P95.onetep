 Initialized kpar          95  with            1 processes.
If your calculation crashes here, before "Checking processes and threads..."
is displayed, then your stack size is insufficient.
If so, use "ulimit -s unlimited" at runtime.
You can disable this check with "check_stack_size F".

Checking processes and threads...
      Default threads: 1
   Running with 1 MPI process.
   There are 96 MPI processes running on the same node as the root process.
   Each MPI process is using: 
               1 threads for simulation cell FFTs.
               1 threads for threaded FFT box operations.
               1 threads for loops over batched FFT box operations.
               1 threads in other parallel regions.
   MPI Interface: S2 (use mpi) (-DMPI, no -DUSE_MPI_F08, no -DUSE_INCLUDE_MPIF).
   MPI_ASYNC_PROTECTS_NONBLOCKING:  No. MPI_SUBARRAYS_SUPPORTED:  No.
   FFTW Interface: OMP-capable and DEPRECATED. (Use -DUSE_MODERN_FFTW to switch to modern).
   GPU Interface: None.
   GPU FFT Backend: None.
... done

Basic input checks...... done

Reading geometry and species blocks from file "P.dat" ...
  <species_atomic_set> block not found: NGWF initialisation set to SOLVE
... done


--------------------------------------------------------------------------------
---------------------------------- INPUT FILE ----------------------------------
--------------------------------------------------------------------------------

cutoff_energy : 1280 eV                                                         
do_properties : F                                                               
edft : F                                                                        
extend_ngwf : T T T                                                             
forces_output_detail : verbose                                                  
full_rand_ngwf : T                                                              
kpoint_grid_shift : 1 1 0                                                       
kpoint_grid_size : 26 8 19                                                      
kpoint_method : KP                                                              
maxit_ngwf_cg : 1000                                                            
output_detail : Normal                                                          
paw : F                                                                         
permit_unusual_ngwf_count : T                                                   
pseudo_path : .                                                                 
rand_seed_ngwf_dynamic : F                                                      
read_denskern : F                                                               
read_tightbox_ngwfs : F                                                         
spin : 0                                                                        
spin_polarized : F                                                              
task : SinglePoint                                                              
use_cmplx_ngwfs : T                                                             
write_forces : F                                                                
xc_functional : PBE                                                             
%BLOCK LATTICE_CART                                                             
ang                                                                             
3.32654580       0.00000000       0.00000000                                    
0.00000000      11.39188881       0.00000000                                    
0.00000000       0.00000000       4.60355744                                    
%ENDBLOCK LATTICE_CART                                                          
%BLOCK POSITIONS_ABS                                                            
ang                                                                             
P     0.000000     1.065939     0.401384                                        
P     0.000000    10.325950     4.202173                                        
P     0.000000     4.630005     2.703163                                        
P     0.000000     6.761883     1.900395                                        
P     1.663273     6.761883     0.401384                                        
P     1.663273     4.630005     4.202173                                        
P     1.663273    10.325950     2.703163                                        
P     1.663273     1.065939     1.900395                                        
%ENDBLOCK POSITIONS_ABS                                                         
%BLOCK SPECIES                                                                  
P P 15 -1 9.0                                                                   
%ENDBLOCK SPECIES                                                               
%BLOCK SPECIES_POT                                                              
P P_NCP19_PBE_OTF.usp                                                           
%ENDBLOCK SPECIES_POT                                                           
num_kpars : 96                                                                  

--------------------------------------------------------------------------------
-------------------------------- END INPUT FILE --------------------------------
--------------------------------------------------------------------------------


 
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Full system >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<< Pseudopotential information >>>>>>>>>>>>>>>>>>>>>>>>>>
File: P_NCP19_PBE_OTF.usp [ 2001 points up to Gmax=  52.9 (1/bohr)]
  Atomic number: 15;  ionic charge:  5.000000
    Shell 1: l = 0; rc = 1.54 bohr
    Shell 2: l = 2; rc = 1.60 bohr
  Core charge supplied for Nonlinear Core Corrections
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

-------------------------- Atom counting information ---------------------------
Symbol    Natoms    Nngwfs    Nprojs
  P          8        32        48
.......   ......    ......    ......
Totals:      8        32        48
--------------------------------------------------------------------------------

=============================== PSINC grid sizes ===============================
                      Simulation cell:   21 x  55 x  25
                              FFT-box:   21 x  55 x  25
                                  PPD:   21 x  55 x  25
Grid space d1=  0.299345739817a0 (KE cutoff=  84.77306Eh =2306.79222eV)
Grid space d2=  0.391410000119a0 (KE cutoff=  49.58384Eh =1349.24497eV)
Grid space d3=  0.347978512257a0 (KE cutoff=  62.73345Eh =1707.06394eV)
================================================================================

********************* Fourier parallelisation information **********************
       Coarse grid (whole simulation cell) dimensions:     21    55    25
          Real-space ('12') slabs/proc (min max mean):     25    25    25
         Recip-space ('23') slabs/proc (min max mean):     11    11    11
********************************************************************************

********************* Fourier parallelisation information **********************
       Double grid (whole simulation cell) dimensions:     42   110    50
          Real-space ('12') slabs/proc (min max mean):     50    50    50
         Recip-space ('23') slabs/proc (min max mean):     22    22    22
********************************************************************************

Atom SCF Calculation for P  : Z (AE atom) =  15 : Z (PS atom) =   5
Config String: 3s2.0 3p3.0
Orbitals (num,occ):  2     2.00 3.00
Orbitals   (num,l):  2        0    1
Atom SCF converged after  24 iterations to a total energy of     -9.45760254

=============================== K-points summary ===============================
Number |             Fractional coordinates          |    Weight
    1   -0.4615384615   -0.3750000000   -0.4736842105    0.0005060729
    2   -0.4615384615   -0.3750000000   -0.4210526316    0.0005060729
    3   -0.4615384615   -0.3750000000   -0.3684210526    0.0005060729
    4   -0.4615384615   -0.3750000000   -0.3157894737    0.0005060729
    5   -0.4615384615   -0.3750000000   -0.2631578947    0.0005060729
    6   -0.4615384615   -0.3750000000   -0.2105263158    0.0005060729
    7   -0.4615384615   -0.3750000000   -0.1578947368    0.0005060729
    8   -0.4615384615   -0.3750000000   -0.1052631579    0.0005060729
    9   -0.4615384615   -0.3750000000   -0.0526315789    0.0005060729
   10   -0.4615384615   -0.3750000000    0.0000000000    0.0005060729
   11   -0.4615384615   -0.3750000000    0.0526315789    0.0005060729
   12   -0.4615384615   -0.3750000000    0.1052631579    0.0005060729
   13   -0.4615384615   -0.3750000000    0.1578947368    0.0005060729
   14   -0.4615384615   -0.3750000000    0.2105263158    0.0005060729
   15   -0.4615384615   -0.3750000000    0.2631578947    0.0005060729
   16   -0.4615384615   -0.3750000000    0.3157894737    0.0005060729
   17   -0.4615384615   -0.3750000000    0.3684210526    0.0005060729
   18   -0.4615384615   -0.3750000000    0.4210526316    0.0005060729
   19   -0.4615384615   -0.3750000000    0.4736842105    0.0005060729
   20   -0.4615384615   -0.2500000000   -0.4736842105    0.0005060729
   21   -0.4615384615   -0.2500000000   -0.4210526316    0.0005060729
   22   -0.4615384615   -0.2500000000   -0.3684210526    0.0005060729
   23   -0.4615384615   -0.2500000000   -0.3157894737    0.0005060729
   24   -0.4615384615   -0.2500000000   -0.2631578947    0.0005060729
   25   -0.4615384615   -0.2500000000   -0.2105263158    0.0005060729
   26   -0.4615384615   -0.2500000000   -0.1578947368    0.0005060729
   27   -0.4615384615   -0.2500000000   -0.1052631579    0.0005060729
   28   -0.4615384615   -0.2500000000   -0.0526315789    0.0005060729
   29   -0.4615384615   -0.2500000000    0.0000000000    0.0005060729
   30   -0.4615384615   -0.2500000000    0.0526315789    0.0005060729
   31   -0.4615384615   -0.2500000000    0.1052631579    0.0005060729
   32   -0.4615384615   -0.2500000000    0.1578947368    0.0005060729
   33   -0.4615384615   -0.2500000000    0.2105263158    0.0005060729
   34   -0.4615384615   -0.2500000000    0.2631578947    0.0005060729
   35   -0.4615384615   -0.2500000000    0.3157894737    0.0005060729
   36   -0.4615384615   -0.2500000000    0.3684210526    0.0005060729
   37   -0.4615384615   -0.2500000000    0.4210526316    0.0005060729
   38   -0.4615384615   -0.2500000000    0.4736842105    0.0005060729
   39   -0.4615384615   -0.1250000000   -0.4736842105    0.0005060729
   40   -0.4615384615   -0.1250000000   -0.4210526316    0.0005060729
   41   -0.4615384615   -0.1250000000   -0.3684210526    0.0005060729
   42   -0.4615384615   -0.1250000000   -0.3157894737    0.0005060729
   43   -0.4615384615   -0.1250000000   -0.2631578947    0.0005060729
   44   -0.4615384615   -0.1250000000   -0.2105263158    0.0005060729
   45   -0.4615384615   -0.1250000000   -0.1578947368    0.0005060729
   46   -0.4615384615   -0.1250000000   -0.1052631579    0.0005060729
   47   -0.4615384615   -0.1250000000   -0.0526315789    0.0005060729
   48   -0.4615384615   -0.1250000000    0.0000000000    0.0005060729
   49   -0.4615384615   -0.1250000000    0.0526315789    0.0005060729
   50   -0.4615384615   -0.1250000000    0.1052631579    0.0005060729
   51   -0.4615384615   -0.1250000000    0.1578947368    0.0005060729
   52   -0.4615384615   -0.1250000000    0.2105263158    0.0005060729
   53   -0.4615384615   -0.1250000000    0.2631578947    0.0005060729
   54   -0.4615384615   -0.1250000000    0.3157894737    0.0005060729
   55   -0.4615384615   -0.1250000000    0.3684210526    0.0005060729
   56   -0.4615384615   -0.1250000000    0.4210526316    0.0005060729
   57   -0.4615384615   -0.1250000000    0.4736842105    0.0005060729
   58   -0.4615384615    0.0000000000   -0.4736842105    0.0005060729
   59   -0.4615384615    0.0000000000   -0.4210526316    0.0005060729
   60   -0.4615384615    0.0000000000   -0.3684210526    0.0005060729
   61   -0.4615384615    0.0000000000   -0.3157894737    0.0005060729
   62   -0.4615384615    0.0000000000   -0.2631578947    0.0005060729
   63   -0.4615384615    0.0000000000   -0.2105263158    0.0005060729
   64   -0.4615384615    0.0000000000   -0.1578947368    0.0005060729
   65   -0.4615384615    0.0000000000   -0.1052631579    0.0005060729
   66   -0.4615384615    0.0000000000   -0.0526315789    0.0005060729
   67   -0.4615384615    0.0000000000    0.0000000000    0.0005060729
   68   -0.4615384615    0.0000000000    0.0526315789    0.0005060729
   69   -0.4615384615    0.0000000000    0.1052631579    0.0005060729
   70   -0.4615384615    0.0000000000    0.1578947368    0.0005060729
   71   -0.4615384615    0.0000000000    0.2105263158    0.0005060729
   72   -0.4615384615    0.0000000000    0.2631578947    0.0005060729
   73   -0.4615384615    0.0000000000    0.3157894737    0.0005060729
   74   -0.4615384615    0.0000000000    0.3684210526    0.0005060729
   75   -0.4615384615    0.0000000000    0.4210526316    0.0005060729
   76   -0.4615384615    0.0000000000    0.4736842105    0.0005060729
   77   -0.4615384615    0.1250000000   -0.4736842105    0.0005060729
   78   -0.4615384615    0.1250000000   -0.4210526316    0.0005060729
   79   -0.4615384615    0.1250000000   -0.3684210526    0.0005060729
   80   -0.4615384615    0.1250000000   -0.3157894737    0.0005060729
   81   -0.4615384615    0.1250000000   -0.2631578947    0.0005060729
   82   -0.4615384615    0.1250000000   -0.2105263158    0.0005060729
   83   -0.4615384615    0.1250000000   -0.1578947368    0.0005060729
   84   -0.4615384615    0.1250000000   -0.1052631579    0.0005060729
   85   -0.4615384615    0.1250000000   -0.0526315789    0.0005060729
   86   -0.4615384615    0.1250000000    0.0000000000    0.0005060729
   87   -0.4615384615    0.1250000000    0.0526315789    0.0005060729
   88   -0.4615384615    0.1250000000    0.1052631579    0.0005060729
   89   -0.4615384615    0.1250000000    0.1578947368    0.0005060729
   90   -0.4615384615    0.1250000000    0.2105263158    0.0005060729
   91   -0.4615384615    0.1250000000    0.2631578947    0.0005060729
   92   -0.4615384615    0.1250000000    0.3157894737    0.0005060729
   93   -0.4615384615    0.1250000000    0.3684210526    0.0005060729
   94   -0.4615384615    0.1250000000    0.4210526316    0.0005060729
   95   -0.4615384615    0.1250000000    0.4736842105    0.0005060729
   96   -0.4615384615    0.2500000000   -0.4736842105    0.0005060729
   97   -0.4615384615    0.2500000000   -0.4210526316    0.0005060729
   98   -0.4615384615    0.2500000000   -0.3684210526    0.0005060729
   99   -0.4615384615    0.2500000000   -0.3157894737    0.0005060729
  100   -0.4615384615    0.2500000000   -0.2631578947    0.0005060729
  101   -0.4615384615    0.2500000000   -0.2105263158    0.0005060729
  102   -0.4615384615    0.2500000000   -0.1578947368    0.0005060729
  103   -0.4615384615    0.2500000000   -0.1052631579    0.0005060729
  104   -0.4615384615    0.2500000000   -0.0526315789    0.0005060729
  105   -0.4615384615    0.2500000000    0.0000000000    0.0005060729
  106   -0.4615384615    0.2500000000    0.0526315789    0.0005060729
  107   -0.4615384615    0.2500000000    0.1052631579    0.0005060729
  108   -0.4615384615    0.2500000000    0.1578947368    0.0005060729
  109   -0.4615384615    0.2500000000    0.2105263158    0.0005060729
  110   -0.4615384615    0.2500000000    0.2631578947    0.0005060729
  111   -0.4615384615    0.2500000000    0.3157894737    0.0005060729
  112   -0.4615384615    0.2500000000    0.3684210526    0.0005060729
  113   -0.4615384615    0.2500000000    0.4210526316    0.0005060729
  114   -0.4615384615    0.2500000000    0.4736842105    0.0005060729
  115   -0.4615384615    0.3750000000   -0.4736842105    0.0005060729
  116   -0.4615384615    0.3750000000   -0.4210526316    0.0005060729
  117   -0.4615384615    0.3750000000   -0.3684210526    0.0005060729
  118   -0.4615384615    0.3750000000   -0.3157894737    0.0005060729
  119   -0.4615384615    0.3750000000   -0.2631578947    0.0005060729
  120   -0.4615384615    0.3750000000   -0.2105263158    0.0005060729
  121   -0.4615384615    0.3750000000   -0.1578947368    0.0005060729
  122   -0.4615384615    0.3750000000   -0.1052631579    0.0005060729
  123   -0.4615384615    0.3750000000   -0.0526315789    0.0005060729
  124   -0.4615384615    0.3750000000    0.0000000000    0.0005060729
  125   -0.4615384615    0.3750000000    0.0526315789    0.0005060729
  126   -0.4615384615    0.3750000000    0.1052631579    0.0005060729
  127   -0.4615384615    0.3750000000    0.1578947368    0.0005060729
  128   -0.4615384615    0.3750000000    0.2105263158    0.0005060729
  129   -0.4615384615    0.3750000000    0.2631578947    0.0005060729
  130   -0.4615384615    0.3750000000    0.3157894737    0.0005060729
  131   -0.4615384615    0.3750000000    0.3684210526    0.0005060729
  132   -0.4615384615    0.3750000000    0.4210526316    0.0005060729
  133   -0.4615384615    0.3750000000    0.4736842105    0.0005060729
  134   -0.4615384615    0.5000000000   -0.4736842105    0.0005060729
  135   -0.4615384615    0.5000000000   -0.4210526316    0.0005060729
  136   -0.4615384615    0.5000000000   -0.3684210526    0.0005060729
  137   -0.4615384615    0.5000000000   -0.3157894737    0.0005060729
  138   -0.4615384615    0.5000000000   -0.2631578947    0.0005060729
  139   -0.4615384615    0.5000000000   -0.2105263158    0.0005060729
  140   -0.4615384615    0.5000000000   -0.1578947368    0.0005060729
  141   -0.4615384615    0.5000000000   -0.1052631579    0.0005060729
  142   -0.4615384615    0.5000000000   -0.0526315789    0.0005060729
  143   -0.4615384615    0.5000000000    0.0000000000    0.0005060729
  144   -0.4615384615    0.5000000000    0.0526315789    0.0005060729
  145   -0.4615384615    0.5000000000    0.1052631579    0.0005060729
  146   -0.4615384615    0.5000000000    0.1578947368    0.0005060729
  147   -0.4615384615    0.5000000000    0.2105263158    0.0005060729
  148   -0.4615384615    0.5000000000    0.2631578947    0.0005060729
  149   -0.4615384615    0.5000000000    0.3157894737    0.0005060729
  150   -0.4615384615    0.5000000000    0.3684210526    0.0005060729
  151   -0.4615384615    0.5000000000    0.4210526316    0.0005060729
  152   -0.4615384615    0.5000000000    0.4736842105    0.0005060729
  153   -0.4230769231   -0.3750000000   -0.4736842105    0.0005060729
  154   -0.4230769231   -0.3750000000   -0.4210526316    0.0005060729
  155   -0.4230769231   -0.3750000000   -0.3684210526    0.0005060729
  156   -0.4230769231   -0.3750000000   -0.3157894737    0.0005060729
  157   -0.4230769231   -0.3750000000   -0.2631578947    0.0005060729
  158   -0.4230769231   -0.3750000000   -0.2105263158    0.0005060729
  159   -0.4230769231   -0.3750000000   -0.1578947368    0.0005060729
  160   -0.4230769231   -0.3750000000   -0.1052631579    0.0005060729
  161   -0.4230769231   -0.3750000000   -0.0526315789    0.0005060729
  162   -0.4230769231   -0.3750000000    0.0000000000    0.0005060729
  163   -0.4230769231   -0.3750000000    0.0526315789    0.0005060729
  164   -0.4230769231   -0.3750000000    0.1052631579    0.0005060729
  165   -0.4230769231   -0.3750000000    0.1578947368    0.0005060729
  166   -0.4230769231   -0.3750000000    0.2105263158    0.0005060729
  167   -0.4230769231   -0.3750000000    0.2631578947    0.0005060729
  168   -0.4230769231   -0.3750000000    0.3157894737    0.0005060729
  169   -0.4230769231   -0.3750000000    0.3684210526    0.0005060729
  170   -0.4230769231   -0.3750000000    0.4210526316    0.0005060729
  171   -0.4230769231   -0.3750000000    0.4736842105    0.0005060729
  172   -0.4230769231   -0.2500000000   -0.4736842105    0.0005060729
  173   -0.4230769231   -0.2500000000   -0.4210526316    0.0005060729
  174   -0.4230769231   -0.2500000000   -0.3684210526    0.0005060729
  175   -0.4230769231   -0.2500000000   -0.3157894737    0.0005060729
  176   -0.4230769231   -0.2500000000   -0.2631578947    0.0005060729
  177   -0.4230769231   -0.2500000000   -0.2105263158    0.0005060729
  178   -0.4230769231   -0.2500000000   -0.1578947368    0.0005060729
  179   -0.4230769231   -0.2500000000   -0.1052631579    0.0005060729
  180   -0.4230769231   -0.2500000000   -0.0526315789    0.0005060729
  181   -0.4230769231   -0.2500000000    0.0000000000    0.0005060729
  182   -0.4230769231   -0.2500000000    0.0526315789    0.0005060729
  183   -0.4230769231   -0.2500000000    0.1052631579    0.0005060729
  184   -0.4230769231   -0.2500000000    0.1578947368    0.0005060729
  185   -0.4230769231   -0.2500000000    0.2105263158    0.0005060729
  186   -0.4230769231   -0.2500000000    0.2631578947    0.0005060729
  187   -0.4230769231   -0.2500000000    0.3157894737    0.0005060729
  188   -0.4230769231   -0.2500000000    0.3684210526    0.0005060729
  189   -0.4230769231   -0.2500000000    0.4210526316    0.0005060729
  190   -0.4230769231   -0.2500000000    0.4736842105    0.0005060729
  191   -0.4230769231   -0.1250000000   -0.4736842105    0.0005060729
  192   -0.4230769231   -0.1250000000   -0.4210526316    0.0005060729
  193   -0.4230769231   -0.1250000000   -0.3684210526    0.0005060729
  194   -0.4230769231   -0.1250000000   -0.3157894737    0.0005060729
  195   -0.4230769231   -0.1250000000   -0.2631578947    0.0005060729
  196   -0.4230769231   -0.1250000000   -0.2105263158    0.0005060729
  197   -0.4230769231   -0.1250000000   -0.1578947368    0.0005060729
  198   -0.4230769231   -0.1250000000   -0.1052631579    0.0005060729
  199   -0.4230769231   -0.1250000000   -0.0526315789    0.0005060729
  200   -0.4230769231   -0.1250000000    0.0000000000    0.0005060729
  201   -0.4230769231   -0.1250000000    0.0526315789    0.0005060729
  202   -0.4230769231   -0.1250000000    0.1052631579    0.0005060729
  203   -0.4230769231   -0.1250000000    0.1578947368    0.0005060729
  204   -0.4230769231   -0.1250000000    0.2105263158    0.0005060729
  205   -0.4230769231   -0.1250000000    0.2631578947    0.0005060729
  206   -0.4230769231   -0.1250000000    0.3157894737    0.0005060729
  207   -0.4230769231   -0.1250000000    0.3684210526    0.0005060729
  208   -0.4230769231   -0.1250000000    0.4210526316    0.0005060729
  209   -0.4230769231   -0.1250000000    0.4736842105    0.0005060729
  210   -0.4230769231    0.0000000000   -0.4736842105    0.0005060729
  211   -0.4230769231    0.0000000000   -0.4210526316    0.0005060729
  212   -0.4230769231    0.0000000000   -0.3684210526    0.0005060729
  213   -0.4230769231    0.0000000000   -0.3157894737    0.0005060729
  214   -0.4230769231    0.0000000000   -0.2631578947    0.0005060729
  215   -0.4230769231    0.0000000000   -0.2105263158    0.0005060729
  216   -0.4230769231    0.0000000000   -0.1578947368    0.0005060729
  217   -0.4230769231    0.0000000000   -0.1052631579    0.0005060729
  218   -0.4230769231    0.0000000000   -0.0526315789    0.0005060729
  219   -0.4230769231    0.0000000000    0.0000000000    0.0005060729
  220   -0.4230769231    0.0000000000    0.0526315789    0.0005060729
  221   -0.4230769231    0.0000000000    0.1052631579    0.0005060729
  222   -0.4230769231    0.0000000000    0.1578947368    0.0005060729
  223   -0.4230769231    0.0000000000    0.2105263158    0.0005060729
  224   -0.4230769231    0.0000000000    0.2631578947    0.0005060729
  225   -0.4230769231    0.0000000000    0.3157894737    0.0005060729
  226   -0.4230769231    0.0000000000    0.3684210526    0.0005060729
  227   -0.4230769231    0.0000000000    0.4210526316    0.0005060729
  228   -0.4230769231    0.0000000000    0.4736842105    0.0005060729
  229   -0.4230769231    0.1250000000   -0.4736842105    0.0005060729
  230   -0.4230769231    0.1250000000   -0.4210526316    0.0005060729
  231   -0.4230769231    0.1250000000   -0.3684210526    0.0005060729
  232   -0.4230769231    0.1250000000   -0.3157894737    0.0005060729
  233   -0.4230769231    0.1250000000   -0.2631578947    0.0005060729
  234   -0.4230769231    0.1250000000   -0.2105263158    0.0005060729
  235   -0.4230769231    0.1250000000   -0.1578947368    0.0005060729
  236   -0.4230769231    0.1250000000   -0.1052631579    0.0005060729
  237   -0.4230769231    0.1250000000   -0.0526315789    0.0005060729
  238   -0.4230769231    0.1250000000    0.0000000000    0.0005060729
  239   -0.4230769231    0.1250000000    0.0526315789    0.0005060729
  240   -0.4230769231    0.1250000000    0.1052631579    0.0005060729
  241   -0.4230769231    0.1250000000    0.1578947368    0.0005060729
  242   -0.4230769231    0.1250000000    0.2105263158    0.0005060729
  243   -0.4230769231    0.1250000000    0.2631578947    0.0005060729
  244   -0.4230769231    0.1250000000    0.3157894737    0.0005060729
  245   -0.4230769231    0.1250000000    0.3684210526    0.0005060729
  246   -0.4230769231    0.1250000000    0.4210526316    0.0005060729
  247   -0.4230769231    0.1250000000    0.4736842105    0.0005060729
  248   -0.4230769231    0.2500000000   -0.4736842105    0.0005060729
  249   -0.4230769231    0.2500000000   -0.4210526316    0.0005060729
  250   -0.4230769231    0.2500000000   -0.3684210526    0.0005060729
  251   -0.4230769231    0.2500000000   -0.3157894737    0.0005060729
  252   -0.4230769231    0.2500000000   -0.2631578947    0.0005060729
  253   -0.4230769231    0.2500000000   -0.2105263158    0.0005060729
  254   -0.4230769231    0.2500000000   -0.1578947368    0.0005060729
  255   -0.4230769231    0.2500000000   -0.1052631579    0.0005060729
  256   -0.4230769231    0.2500000000   -0.0526315789    0.0005060729
  257   -0.4230769231    0.2500000000    0.0000000000    0.0005060729
  258   -0.4230769231    0.2500000000    0.0526315789    0.0005060729
  259   -0.4230769231    0.2500000000    0.1052631579    0.0005060729
  260   -0.4230769231    0.2500000000    0.1578947368    0.0005060729
  261   -0.4230769231    0.2500000000    0.2105263158    0.0005060729
  262   -0.4230769231    0.2500000000    0.2631578947    0.0005060729
  263   -0.4230769231    0.2500000000    0.3157894737    0.0005060729
  264   -0.4230769231    0.2500000000    0.3684210526    0.0005060729
  265   -0.4230769231    0.2500000000    0.4210526316    0.0005060729
  266   -0.4230769231    0.2500000000    0.4736842105    0.0005060729
  267   -0.4230769231    0.3750000000   -0.4736842105    0.0005060729
  268   -0.4230769231    0.3750000000   -0.4210526316    0.0005060729
  269   -0.4230769231    0.3750000000   -0.3684210526    0.0005060729
  270   -0.4230769231    0.3750000000   -0.3157894737    0.0005060729
  271   -0.4230769231    0.3750000000   -0.2631578947    0.0005060729
  272   -0.4230769231    0.3750000000   -0.2105263158    0.0005060729
  273   -0.4230769231    0.3750000000   -0.1578947368    0.0005060729
  274   -0.4230769231    0.3750000000   -0.1052631579    0.0005060729
  275   -0.4230769231    0.3750000000   -0.0526315789    0.0005060729
  276   -0.4230769231    0.3750000000    0.0000000000    0.0005060729
  277   -0.4230769231    0.3750000000    0.0526315789    0.0005060729
  278   -0.4230769231    0.3750000000    0.1052631579    0.0005060729
  279   -0.4230769231    0.3750000000    0.1578947368    0.0005060729
  280   -0.4230769231    0.3750000000    0.2105263158    0.0005060729
  281   -0.4230769231    0.3750000000    0.2631578947    0.0005060729
  282   -0.4230769231    0.3750000000    0.3157894737    0.0005060729
  283   -0.4230769231    0.3750000000    0.3684210526    0.0005060729
  284   -0.4230769231    0.3750000000    0.4210526316    0.0005060729
  285   -0.4230769231    0.3750000000    0.4736842105    0.0005060729
  286   -0.4230769231    0.5000000000   -0.4736842105    0.0005060729
  287   -0.4230769231    0.5000000000   -0.4210526316    0.0005060729
  288   -0.4230769231    0.5000000000   -0.3684210526    0.0005060729
  289   -0.4230769231    0.5000000000   -0.3157894737    0.0005060729
  290   -0.4230769231    0.5000000000   -0.2631578947    0.0005060729
  291   -0.4230769231    0.5000000000   -0.2105263158    0.0005060729
  292   -0.4230769231    0.5000000000   -0.1578947368    0.0005060729
  293   -0.4230769231    0.5000000000   -0.1052631579    0.0005060729
  294   -0.4230769231    0.5000000000   -0.0526315789    0.0005060729
  295   -0.4230769231    0.5000000000    0.0000000000    0.0005060729
  296   -0.4230769231    0.5000000000    0.0526315789    0.0005060729
  297   -0.4230769231    0.5000000000    0.1052631579    0.0005060729
  298   -0.4230769231    0.5000000000    0.1578947368    0.0005060729
  299   -0.4230769231    0.5000000000    0.2105263158    0.0005060729
  300   -0.4230769231    0.5000000000    0.2631578947    0.0005060729
  301   -0.4230769231    0.5000000000    0.3157894737    0.0005060729
  302   -0.4230769231    0.5000000000    0.3684210526    0.0005060729
  303   -0.4230769231    0.5000000000    0.4210526316    0.0005060729
  304   -0.4230769231    0.5000000000    0.4736842105    0.0005060729
  305   -0.3846153846   -0.3750000000   -0.4736842105    0.0005060729
  306   -0.3846153846   -0.3750000000   -0.4210526316    0.0005060729
  307   -0.3846153846   -0.3750000000   -0.3684210526    0.0005060729
  308   -0.3846153846   -0.3750000000   -0.3157894737    0.0005060729
  309   -0.3846153846   -0.3750000000   -0.2631578947    0.0005060729
  310   -0.3846153846   -0.3750000000   -0.2105263158    0.0005060729
  311   -0.3846153846   -0.3750000000   -0.1578947368    0.0005060729
  312   -0.3846153846   -0.3750000000   -0.1052631579    0.0005060729
  313   -0.3846153846   -0.3750000000   -0.0526315789    0.0005060729
  314   -0.3846153846   -0.3750000000    0.0000000000    0.0005060729
  315   -0.3846153846   -0.3750000000    0.0526315789    0.0005060729
  316   -0.3846153846   -0.3750000000    0.1052631579    0.0005060729
  317   -0.3846153846   -0.3750000000    0.1578947368    0.0005060729
  318   -0.3846153846   -0.3750000000    0.2105263158    0.0005060729
  319   -0.3846153846   -0.3750000000    0.2631578947    0.0005060729
  320   -0.3846153846   -0.3750000000    0.3157894737    0.0005060729
  321   -0.3846153846   -0.3750000000    0.3684210526    0.0005060729
  322   -0.3846153846   -0.3750000000    0.4210526316    0.0005060729
  323   -0.3846153846   -0.3750000000    0.4736842105    0.0005060729
  324   -0.3846153846   -0.2500000000   -0.4736842105    0.0005060729
  325   -0.3846153846   -0.2500000000   -0.4210526316    0.0005060729
  326   -0.3846153846   -0.2500000000   -0.3684210526    0.0005060729
  327   -0.3846153846   -0.2500000000   -0.3157894737    0.0005060729
  328   -0.3846153846   -0.2500000000   -0.2631578947    0.0005060729
  329   -0.3846153846   -0.2500000000   -0.2105263158    0.0005060729
  330   -0.3846153846   -0.2500000000   -0.1578947368    0.0005060729
  331   -0.3846153846   -0.2500000000   -0.1052631579    0.0005060729
  332   -0.3846153846   -0.2500000000   -0.0526315789    0.0005060729
  333   -0.3846153846   -0.2500000000    0.0000000000    0.0005060729
  334   -0.3846153846   -0.2500000000    0.0526315789    0.0005060729
  335   -0.3846153846   -0.2500000000    0.1052631579    0.0005060729
  336   -0.3846153846   -0.2500000000    0.1578947368    0.0005060729
  337   -0.3846153846   -0.2500000000    0.2105263158    0.0005060729
  338   -0.3846153846   -0.2500000000    0.2631578947    0.0005060729
  339   -0.3846153846   -0.2500000000    0.3157894737    0.0005060729
  340   -0.3846153846   -0.2500000000    0.3684210526    0.0005060729
  341   -0.3846153846   -0.2500000000    0.4210526316    0.0005060729
  342   -0.3846153846   -0.2500000000    0.4736842105    0.0005060729
  343   -0.3846153846   -0.1250000000   -0.4736842105    0.0005060729
  344   -0.3846153846   -0.1250000000   -0.4210526316    0.0005060729
  345   -0.3846153846   -0.1250000000   -0.3684210526    0.0005060729
  346   -0.3846153846   -0.1250000000   -0.3157894737    0.0005060729
  347   -0.3846153846   -0.1250000000   -0.2631578947    0.0005060729
  348   -0.3846153846   -0.1250000000   -0.2105263158    0.0005060729
  349   -0.3846153846   -0.1250000000   -0.1578947368    0.0005060729
  350   -0.3846153846   -0.1250000000   -0.1052631579    0.0005060729
  351   -0.3846153846   -0.1250000000   -0.0526315789    0.0005060729
  352   -0.3846153846   -0.1250000000    0.0000000000    0.0005060729
  353   -0.3846153846   -0.1250000000    0.0526315789    0.0005060729
  354   -0.3846153846   -0.1250000000    0.1052631579    0.0005060729
  355   -0.3846153846   -0.1250000000    0.1578947368    0.0005060729
  356   -0.3846153846   -0.1250000000    0.2105263158    0.0005060729
  357   -0.3846153846   -0.1250000000    0.2631578947    0.0005060729
  358   -0.3846153846   -0.1250000000    0.3157894737    0.0005060729
  359   -0.3846153846   -0.1250000000    0.3684210526    0.0005060729
  360   -0.3846153846   -0.1250000000    0.4210526316    0.0005060729
  361   -0.3846153846   -0.1250000000    0.4736842105    0.0005060729
  362   -0.3846153846    0.0000000000   -0.4736842105    0.0005060729
  363   -0.3846153846    0.0000000000   -0.4210526316    0.0005060729
  364   -0.3846153846    0.0000000000   -0.3684210526    0.0005060729
  365   -0.3846153846    0.0000000000   -0.3157894737    0.0005060729
  366   -0.3846153846    0.0000000000   -0.2631578947    0.0005060729
  367   -0.3846153846    0.0000000000   -0.2105263158    0.0005060729
  368   -0.3846153846    0.0000000000   -0.1578947368    0.0005060729
  369   -0.3846153846    0.0000000000   -0.1052631579    0.0005060729
  370   -0.3846153846    0.0000000000   -0.0526315789    0.0005060729
  371   -0.3846153846    0.0000000000    0.0000000000    0.0005060729
  372   -0.3846153846    0.0000000000    0.0526315789    0.0005060729
  373   -0.3846153846    0.0000000000    0.1052631579    0.0005060729
  374   -0.3846153846    0.0000000000    0.1578947368    0.0005060729
  375   -0.3846153846    0.0000000000    0.2105263158    0.0005060729
  376   -0.3846153846    0.0000000000    0.2631578947    0.0005060729
  377   -0.3846153846    0.0000000000    0.3157894737    0.0005060729
  378   -0.3846153846    0.0000000000    0.3684210526    0.0005060729
  379   -0.3846153846    0.0000000000    0.4210526316    0.0005060729
  380   -0.3846153846    0.0000000000    0.4736842105    0.0005060729
  381   -0.3846153846    0.1250000000   -0.4736842105    0.0005060729
  382   -0.3846153846    0.1250000000   -0.4210526316    0.0005060729
  383   -0.3846153846    0.1250000000   -0.3684210526    0.0005060729
  384   -0.3846153846    0.1250000000   -0.3157894737    0.0005060729
  385   -0.3846153846    0.1250000000   -0.2631578947    0.0005060729
  386   -0.3846153846    0.1250000000   -0.2105263158    0.0005060729
  387   -0.3846153846    0.1250000000   -0.1578947368    0.0005060729
  388   -0.3846153846    0.1250000000   -0.1052631579    0.0005060729
  389   -0.3846153846    0.1250000000   -0.0526315789    0.0005060729
  390   -0.3846153846    0.1250000000    0.0000000000    0.0005060729
  391   -0.3846153846    0.1250000000    0.0526315789    0.0005060729
  392   -0.3846153846    0.1250000000    0.1052631579    0.0005060729
  393   -0.3846153846    0.1250000000    0.1578947368    0.0005060729
  394   -0.3846153846    0.1250000000    0.2105263158    0.0005060729
  395   -0.3846153846    0.1250000000    0.2631578947    0.0005060729
  396   -0.3846153846    0.1250000000    0.3157894737    0.0005060729
  397   -0.3846153846    0.1250000000    0.3684210526    0.0005060729
  398   -0.3846153846    0.1250000000    0.4210526316    0.0005060729
  399   -0.3846153846    0.1250000000    0.4736842105    0.0005060729
  400   -0.3846153846    0.2500000000   -0.4736842105    0.0005060729
  401   -0.3846153846    0.2500000000   -0.4210526316    0.0005060729
  402   -0.3846153846    0.2500000000   -0.3684210526    0.0005060729
  403   -0.3846153846    0.2500000000   -0.3157894737    0.0005060729
  404   -0.3846153846    0.2500000000   -0.2631578947    0.0005060729
  405   -0.3846153846    0.2500000000   -0.2105263158    0.0005060729
  406   -0.3846153846    0.2500000000   -0.1578947368    0.0005060729
  407   -0.3846153846    0.2500000000   -0.1052631579    0.0005060729
  408   -0.3846153846    0.2500000000   -0.0526315789    0.0005060729
  409   -0.3846153846    0.2500000000    0.0000000000    0.0005060729
  410   -0.3846153846    0.2500000000    0.0526315789    0.0005060729
  411   -0.3846153846    0.2500000000    0.1052631579    0.0005060729
  412   -0.3846153846    0.2500000000    0.1578947368    0.0005060729
  413   -0.3846153846    0.2500000000    0.2105263158    0.0005060729
  414   -0.3846153846    0.2500000000    0.2631578947    0.0005060729
  415   -0.3846153846    0.2500000000    0.3157894737    0.0005060729
  416   -0.3846153846    0.2500000000    0.3684210526    0.0005060729
  417   -0.3846153846    0.2500000000    0.4210526316    0.0005060729
  418   -0.3846153846    0.2500000000    0.4736842105    0.0005060729
  419   -0.3846153846    0.3750000000   -0.4736842105    0.0005060729
  420   -0.3846153846    0.3750000000   -0.4210526316    0.0005060729
  421   -0.3846153846    0.3750000000   -0.3684210526    0.0005060729
  422   -0.3846153846    0.3750000000   -0.3157894737    0.0005060729
  423   -0.3846153846    0.3750000000   -0.2631578947    0.0005060729
  424   -0.3846153846    0.3750000000   -0.2105263158    0.0005060729
  425   -0.3846153846    0.3750000000   -0.1578947368    0.0005060729
  426   -0.3846153846    0.3750000000   -0.1052631579    0.0005060729
  427   -0.3846153846    0.3750000000   -0.0526315789    0.0005060729
  428   -0.3846153846    0.3750000000    0.0000000000    0.0005060729
  429   -0.3846153846    0.3750000000    0.0526315789    0.0005060729
  430   -0.3846153846    0.3750000000    0.1052631579    0.0005060729
  431   -0.3846153846    0.3750000000    0.1578947368    0.0005060729
  432   -0.3846153846    0.3750000000    0.2105263158    0.0005060729
  433   -0.3846153846    0.3750000000    0.2631578947    0.0005060729
  434   -0.3846153846    0.3750000000    0.3157894737    0.0005060729
  435   -0.3846153846    0.3750000000    0.3684210526    0.0005060729
  436   -0.3846153846    0.3750000000    0.4210526316    0.0005060729
  437   -0.3846153846    0.3750000000    0.4736842105    0.0005060729
  438   -0.3846153846    0.5000000000   -0.4736842105    0.0005060729
  439   -0.3846153846    0.5000000000   -0.4210526316    0.0005060729
  440   -0.3846153846    0.5000000000   -0.3684210526    0.0005060729
  441   -0.3846153846    0.5000000000   -0.3157894737    0.0005060729
  442   -0.3846153846    0.5000000000   -0.2631578947    0.0005060729
  443   -0.3846153846    0.5000000000   -0.2105263158    0.0005060729
  444   -0.3846153846    0.5000000000   -0.1578947368    0.0005060729
  445   -0.3846153846    0.5000000000   -0.1052631579    0.0005060729
  446   -0.3846153846    0.5000000000   -0.0526315789    0.0005060729
  447   -0.3846153846    0.5000000000    0.0000000000    0.0005060729
  448   -0.3846153846    0.5000000000    0.0526315789    0.0005060729
  449   -0.3846153846    0.5000000000    0.1052631579    0.0005060729
  450   -0.3846153846    0.5000000000    0.1578947368    0.0005060729
  451   -0.3846153846    0.5000000000    0.2105263158    0.0005060729
  452   -0.3846153846    0.5000000000    0.2631578947    0.0005060729
  453   -0.3846153846    0.5000000000    0.3157894737    0.0005060729
  454   -0.3846153846    0.5000000000    0.3684210526    0.0005060729
  455   -0.3846153846    0.5000000000    0.4210526316    0.0005060729
  456   -0.3846153846    0.5000000000    0.4736842105    0.0005060729
  457   -0.3461538462   -0.3750000000   -0.4736842105    0.0005060729
  458   -0.3461538462   -0.3750000000   -0.4210526316    0.0005060729
  459   -0.3461538462   -0.3750000000   -0.3684210526    0.0005060729
  460   -0.3461538462   -0.3750000000   -0.3157894737    0.0005060729
  461   -0.3461538462   -0.3750000000   -0.2631578947    0.0005060729
  462   -0.3461538462   -0.3750000000   -0.2105263158    0.0005060729
  463   -0.3461538462   -0.3750000000   -0.1578947368    0.0005060729
  464   -0.3461538462   -0.3750000000   -0.1052631579    0.0005060729
  465   -0.3461538462   -0.3750000000   -0.0526315789    0.0005060729
  466   -0.3461538462   -0.3750000000    0.0000000000    0.0005060729
  467   -0.3461538462   -0.3750000000    0.0526315789    0.0005060729
  468   -0.3461538462   -0.3750000000    0.1052631579    0.0005060729
  469   -0.3461538462   -0.3750000000    0.1578947368    0.0005060729
  470   -0.3461538462   -0.3750000000    0.2105263158    0.0005060729
  471   -0.3461538462   -0.3750000000    0.2631578947    0.0005060729
  472   -0.3461538462   -0.3750000000    0.3157894737    0.0005060729
  473   -0.3461538462   -0.3750000000    0.3684210526    0.0005060729
  474   -0.3461538462   -0.3750000000    0.4210526316    0.0005060729
  475   -0.3461538462   -0.3750000000    0.4736842105    0.0005060729
  476   -0.3461538462   -0.2500000000   -0.4736842105    0.0005060729
  477   -0.3461538462   -0.2500000000   -0.4210526316    0.0005060729
  478   -0.3461538462   -0.2500000000   -0.3684210526    0.0005060729
  479   -0.3461538462   -0.2500000000   -0.3157894737    0.0005060729
  480   -0.3461538462   -0.2500000000   -0.2631578947    0.0005060729
  481   -0.3461538462   -0.2500000000   -0.2105263158    0.0005060729
  482   -0.3461538462   -0.2500000000   -0.1578947368    0.0005060729
  483   -0.3461538462   -0.2500000000   -0.1052631579    0.0005060729
  484   -0.3461538462   -0.2500000000   -0.0526315789    0.0005060729
  485   -0.3461538462   -0.2500000000    0.0000000000    0.0005060729
  486   -0.3461538462   -0.2500000000    0.0526315789    0.0005060729
  487   -0.3461538462   -0.2500000000    0.1052631579    0.0005060729
  488   -0.3461538462   -0.2500000000    0.1578947368    0.0005060729
  489   -0.3461538462   -0.2500000000    0.2105263158    0.0005060729
  490   -0.3461538462   -0.2500000000    0.2631578947    0.0005060729
  491   -0.3461538462   -0.2500000000    0.3157894737    0.0005060729
  492   -0.3461538462   -0.2500000000    0.3684210526    0.0005060729
  493   -0.3461538462   -0.2500000000    0.4210526316    0.0005060729
  494   -0.3461538462   -0.2500000000    0.4736842105    0.0005060729
  495   -0.3461538462   -0.1250000000   -0.4736842105    0.0005060729
  496   -0.3461538462   -0.1250000000   -0.4210526316    0.0005060729
  497   -0.3461538462   -0.1250000000   -0.3684210526    0.0005060729
  498   -0.3461538462   -0.1250000000   -0.3157894737    0.0005060729
  499   -0.3461538462   -0.1250000000   -0.2631578947    0.0005060729
  500   -0.3461538462   -0.1250000000   -0.2105263158    0.0005060729
  501   -0.3461538462   -0.1250000000   -0.1578947368    0.0005060729
  502   -0.3461538462   -0.1250000000   -0.1052631579    0.0005060729
  503   -0.3461538462   -0.1250000000   -0.0526315789    0.0005060729
  504   -0.3461538462   -0.1250000000    0.0000000000    0.0005060729
  505   -0.3461538462   -0.1250000000    0.0526315789    0.0005060729
  506   -0.3461538462   -0.1250000000    0.1052631579    0.0005060729
  507   -0.3461538462   -0.1250000000    0.1578947368    0.0005060729
  508   -0.3461538462   -0.1250000000    0.2105263158    0.0005060729
  509   -0.3461538462   -0.1250000000    0.2631578947    0.0005060729
  510   -0.3461538462   -0.1250000000    0.3157894737    0.0005060729
  511   -0.3461538462   -0.1250000000    0.3684210526    0.0005060729
  512   -0.3461538462   -0.1250000000    0.4210526316    0.0005060729
  513   -0.3461538462   -0.1250000000    0.4736842105    0.0005060729
  514   -0.3461538462    0.0000000000   -0.4736842105    0.0005060729
  515   -0.3461538462    0.0000000000   -0.4210526316    0.0005060729
  516   -0.3461538462    0.0000000000   -0.3684210526    0.0005060729
  517   -0.3461538462    0.0000000000   -0.3157894737    0.0005060729
  518   -0.3461538462    0.0000000000   -0.2631578947    0.0005060729
  519   -0.3461538462    0.0000000000   -0.2105263158    0.0005060729
  520   -0.3461538462    0.0000000000   -0.1578947368    0.0005060729
  521   -0.3461538462    0.0000000000   -0.1052631579    0.0005060729
  522   -0.3461538462    0.0000000000   -0.0526315789    0.0005060729
  523   -0.3461538462    0.0000000000    0.0000000000    0.0005060729
  524   -0.3461538462    0.0000000000    0.0526315789    0.0005060729
  525   -0.3461538462    0.0000000000    0.1052631579    0.0005060729
  526   -0.3461538462    0.0000000000    0.1578947368    0.0005060729
  527   -0.3461538462    0.0000000000    0.2105263158    0.0005060729
  528   -0.3461538462    0.0000000000    0.2631578947    0.0005060729
  529   -0.3461538462    0.0000000000    0.3157894737    0.0005060729
  530   -0.3461538462    0.0000000000    0.3684210526    0.0005060729
  531   -0.3461538462    0.0000000000    0.4210526316    0.0005060729
  532   -0.3461538462    0.0000000000    0.4736842105    0.0005060729
  533   -0.3461538462    0.1250000000   -0.4736842105    0.0005060729
  534   -0.3461538462    0.1250000000   -0.4210526316    0.0005060729
  535   -0.3461538462    0.1250000000   -0.3684210526    0.0005060729
  536   -0.3461538462    0.1250000000   -0.3157894737    0.0005060729
  537   -0.3461538462    0.1250000000   -0.2631578947    0.0005060729
  538   -0.3461538462    0.1250000000   -0.2105263158    0.0005060729
  539   -0.3461538462    0.1250000000   -0.1578947368    0.0005060729
  540   -0.3461538462    0.1250000000   -0.1052631579    0.0005060729
  541   -0.3461538462    0.1250000000   -0.0526315789    0.0005060729
  542   -0.3461538462    0.1250000000    0.0000000000    0.0005060729
  543   -0.3461538462    0.1250000000    0.0526315789    0.0005060729
  544   -0.3461538462    0.1250000000    0.1052631579    0.0005060729
  545   -0.3461538462    0.1250000000    0.1578947368    0.0005060729
  546   -0.3461538462    0.1250000000    0.2105263158    0.0005060729
  547   -0.3461538462    0.1250000000    0.2631578947    0.0005060729
  548   -0.3461538462    0.1250000000    0.3157894737    0.0005060729
  549   -0.3461538462    0.1250000000    0.3684210526    0.0005060729
  550   -0.3461538462    0.1250000000    0.4210526316    0.0005060729
  551   -0.3461538462    0.1250000000    0.4736842105    0.0005060729
  552   -0.3461538462    0.2500000000   -0.4736842105    0.0005060729
  553   -0.3461538462    0.2500000000   -0.4210526316    0.0005060729
  554   -0.3461538462    0.2500000000   -0.3684210526    0.0005060729
  555   -0.3461538462    0.2500000000   -0.3157894737    0.0005060729
  556   -0.3461538462    0.2500000000   -0.2631578947    0.0005060729
  557   -0.3461538462    0.2500000000   -0.2105263158    0.0005060729
  558   -0.3461538462    0.2500000000   -0.1578947368    0.0005060729
  559   -0.3461538462    0.2500000000   -0.1052631579    0.0005060729
  560   -0.3461538462    0.2500000000   -0.0526315789    0.0005060729
  561   -0.3461538462    0.2500000000    0.0000000000    0.0005060729
  562   -0.3461538462    0.2500000000    0.0526315789    0.0005060729
  563   -0.3461538462    0.2500000000    0.1052631579    0.0005060729
  564   -0.3461538462    0.2500000000    0.1578947368    0.0005060729
  565   -0.3461538462    0.2500000000    0.2105263158    0.0005060729
  566   -0.3461538462    0.2500000000    0.2631578947    0.0005060729
  567   -0.3461538462    0.2500000000    0.3157894737    0.0005060729
  568   -0.3461538462    0.2500000000    0.3684210526    0.0005060729
  569   -0.3461538462    0.2500000000    0.4210526316    0.0005060729
  570   -0.3461538462    0.2500000000    0.4736842105    0.0005060729
  571   -0.3461538462    0.3750000000   -0.4736842105    0.0005060729
  572   -0.3461538462    0.3750000000   -0.4210526316    0.0005060729
  573   -0.3461538462    0.3750000000   -0.3684210526    0.0005060729
  574   -0.3461538462    0.3750000000   -0.3157894737    0.0005060729
  575   -0.3461538462    0.3750000000   -0.2631578947    0.0005060729
  576   -0.3461538462    0.3750000000   -0.2105263158    0.0005060729
  577   -0.3461538462    0.3750000000   -0.1578947368    0.0005060729
  578   -0.3461538462    0.3750000000   -0.1052631579    0.0005060729
  579   -0.3461538462    0.3750000000   -0.0526315789    0.0005060729
  580   -0.3461538462    0.3750000000    0.0000000000    0.0005060729
  581   -0.3461538462    0.3750000000    0.0526315789    0.0005060729
  582   -0.3461538462    0.3750000000    0.1052631579    0.0005060729
  583   -0.3461538462    0.3750000000    0.1578947368    0.0005060729
  584   -0.3461538462    0.3750000000    0.2105263158    0.0005060729
  585   -0.3461538462    0.3750000000    0.2631578947    0.0005060729
  586   -0.3461538462    0.3750000000    0.3157894737    0.0005060729
  587   -0.3461538462    0.3750000000    0.3684210526    0.0005060729
  588   -0.3461538462    0.3750000000    0.4210526316    0.0005060729
  589   -0.3461538462    0.3750000000    0.4736842105    0.0005060729
  590   -0.3461538462    0.5000000000   -0.4736842105    0.0005060729
  591   -0.3461538462    0.5000000000   -0.4210526316    0.0005060729
  592   -0.3461538462    0.5000000000   -0.3684210526    0.0005060729
  593   -0.3461538462    0.5000000000   -0.3157894737    0.0005060729
  594   -0.3461538462    0.5000000000   -0.2631578947    0.0005060729
  595   -0.3461538462    0.5000000000   -0.2105263158    0.0005060729
  596   -0.3461538462    0.5000000000   -0.1578947368    0.0005060729
  597   -0.3461538462    0.5000000000   -0.1052631579    0.0005060729
  598   -0.3461538462    0.5000000000   -0.0526315789    0.0005060729
  599   -0.3461538462    0.5000000000    0.0000000000    0.0005060729
  600   -0.3461538462    0.5000000000    0.0526315789    0.0005060729
  601   -0.3461538462    0.5000000000    0.1052631579    0.0005060729
  602   -0.3461538462    0.5000000000    0.1578947368    0.0005060729
  603   -0.3461538462    0.5000000000    0.2105263158    0.0005060729
  604   -0.3461538462    0.5000000000    0.2631578947    0.0005060729
  605   -0.3461538462    0.5000000000    0.3157894737    0.0005060729
  606   -0.3461538462    0.5000000000    0.3684210526    0.0005060729
  607   -0.3461538462    0.5000000000    0.4210526316    0.0005060729
  608   -0.3461538462    0.5000000000    0.4736842105    0.0005060729
  609   -0.3076923077   -0.3750000000   -0.4736842105    0.0005060729
  610   -0.3076923077   -0.3750000000   -0.4210526316    0.0005060729
  611   -0.3076923077   -0.3750000000   -0.3684210526    0.0005060729
  612   -0.3076923077   -0.3750000000   -0.3157894737    0.0005060729
  613   -0.3076923077   -0.3750000000   -0.2631578947    0.0005060729
  614   -0.3076923077   -0.3750000000   -0.2105263158    0.0005060729
  615   -0.3076923077   -0.3750000000   -0.1578947368    0.0005060729
  616   -0.3076923077   -0.3750000000   -0.1052631579    0.0005060729
  617   -0.3076923077   -0.3750000000   -0.0526315789    0.0005060729
  618   -0.3076923077   -0.3750000000    0.0000000000    0.0005060729
  619   -0.3076923077   -0.3750000000    0.0526315789    0.0005060729
  620   -0.3076923077   -0.3750000000    0.1052631579    0.0005060729
  621   -0.3076923077   -0.3750000000    0.1578947368    0.0005060729
  622   -0.3076923077   -0.3750000000    0.2105263158    0.0005060729
  623   -0.3076923077   -0.3750000000    0.2631578947    0.0005060729
  624   -0.3076923077   -0.3750000000    0.3157894737    0.0005060729
  625   -0.3076923077   -0.3750000000    0.3684210526    0.0005060729
  626   -0.3076923077   -0.3750000000    0.4210526316    0.0005060729
  627   -0.3076923077   -0.3750000000    0.4736842105    0.0005060729
  628   -0.3076923077   -0.2500000000   -0.4736842105    0.0005060729
  629   -0.3076923077   -0.2500000000   -0.4210526316    0.0005060729
  630   -0.3076923077   -0.2500000000   -0.3684210526    0.0005060729
  631   -0.3076923077   -0.2500000000   -0.3157894737    0.0005060729
  632   -0.3076923077   -0.2500000000   -0.2631578947    0.0005060729
  633   -0.3076923077   -0.2500000000   -0.2105263158    0.0005060729
  634   -0.3076923077   -0.2500000000   -0.1578947368    0.0005060729
  635   -0.3076923077   -0.2500000000   -0.1052631579    0.0005060729
  636   -0.3076923077   -0.2500000000   -0.0526315789    0.0005060729
  637   -0.3076923077   -0.2500000000    0.0000000000    0.0005060729
  638   -0.3076923077   -0.2500000000    0.0526315789    0.0005060729
  639   -0.3076923077   -0.2500000000    0.1052631579    0.0005060729
  640   -0.3076923077   -0.2500000000    0.1578947368    0.0005060729
  641   -0.3076923077   -0.2500000000    0.2105263158    0.0005060729
  642   -0.3076923077   -0.2500000000    0.2631578947    0.0005060729
  643   -0.3076923077   -0.2500000000    0.3157894737    0.0005060729
  644   -0.3076923077   -0.2500000000    0.3684210526    0.0005060729
  645   -0.3076923077   -0.2500000000    0.4210526316    0.0005060729
  646   -0.3076923077   -0.2500000000    0.4736842105    0.0005060729
  647   -0.3076923077   -0.1250000000   -0.4736842105    0.0005060729
  648   -0.3076923077   -0.1250000000   -0.4210526316    0.0005060729
  649   -0.3076923077   -0.1250000000   -0.3684210526    0.0005060729
  650   -0.3076923077   -0.1250000000   -0.3157894737    0.0005060729
  651   -0.3076923077   -0.1250000000   -0.2631578947    0.0005060729
  652   -0.3076923077   -0.1250000000   -0.2105263158    0.0005060729
  653   -0.3076923077   -0.1250000000   -0.1578947368    0.0005060729
  654   -0.3076923077   -0.1250000000   -0.1052631579    0.0005060729
  655   -0.3076923077   -0.1250000000   -0.0526315789    0.0005060729
  656   -0.3076923077   -0.1250000000    0.0000000000    0.0005060729
  657   -0.3076923077   -0.1250000000    0.0526315789    0.0005060729
  658   -0.3076923077   -0.1250000000    0.1052631579    0.0005060729
  659   -0.3076923077   -0.1250000000    0.1578947368    0.0005060729
  660   -0.3076923077   -0.1250000000    0.2105263158    0.0005060729
  661   -0.3076923077   -0.1250000000    0.2631578947    0.0005060729
  662   -0.3076923077   -0.1250000000    0.3157894737    0.0005060729
  663   -0.3076923077   -0.1250000000    0.3684210526    0.0005060729
  664   -0.3076923077   -0.1250000000    0.4210526316    0.0005060729
  665   -0.3076923077   -0.1250000000    0.4736842105    0.0005060729
  666   -0.3076923077    0.0000000000   -0.4736842105    0.0005060729
  667   -0.3076923077    0.0000000000   -0.4210526316    0.0005060729
  668   -0.3076923077    0.0000000000   -0.3684210526    0.0005060729
  669   -0.3076923077    0.0000000000   -0.3157894737    0.0005060729
  670   -0.3076923077    0.0000000000   -0.2631578947    0.0005060729
  671   -0.3076923077    0.0000000000   -0.2105263158    0.0005060729
  672   -0.3076923077    0.0000000000   -0.1578947368    0.0005060729
  673   -0.3076923077    0.0000000000   -0.1052631579    0.0005060729
  674   -0.3076923077    0.0000000000   -0.0526315789    0.0005060729
  675   -0.3076923077    0.0000000000    0.0000000000    0.0005060729
  676   -0.3076923077    0.0000000000    0.0526315789    0.0005060729
  677   -0.3076923077    0.0000000000    0.1052631579    0.0005060729
  678   -0.3076923077    0.0000000000    0.1578947368    0.0005060729
  679   -0.3076923077    0.0000000000    0.2105263158    0.0005060729
  680   -0.3076923077    0.0000000000    0.2631578947    0.0005060729
  681   -0.3076923077    0.0000000000    0.3157894737    0.0005060729
  682   -0.3076923077    0.0000000000    0.3684210526    0.0005060729
  683   -0.3076923077    0.0000000000    0.4210526316    0.0005060729
  684   -0.3076923077    0.0000000000    0.4736842105    0.0005060729
  685   -0.3076923077    0.1250000000   -0.4736842105    0.0005060729
  686   -0.3076923077    0.1250000000   -0.4210526316    0.0005060729
  687   -0.3076923077    0.1250000000   -0.3684210526    0.0005060729
  688   -0.3076923077    0.1250000000   -0.3157894737    0.0005060729
  689   -0.3076923077    0.1250000000   -0.2631578947    0.0005060729
  690   -0.3076923077    0.1250000000   -0.2105263158    0.0005060729
  691   -0.3076923077    0.1250000000   -0.1578947368    0.0005060729
  692   -0.3076923077    0.1250000000   -0.1052631579    0.0005060729
  693   -0.3076923077    0.1250000000   -0.0526315789    0.0005060729
  694   -0.3076923077    0.1250000000    0.0000000000    0.0005060729
  695   -0.3076923077    0.1250000000    0.0526315789    0.0005060729
  696   -0.3076923077    0.1250000000    0.1052631579    0.0005060729
  697   -0.3076923077    0.1250000000    0.1578947368    0.0005060729
  698   -0.3076923077    0.1250000000    0.2105263158    0.0005060729
  699   -0.3076923077    0.1250000000    0.2631578947    0.0005060729
  700   -0.3076923077    0.1250000000    0.3157894737    0.0005060729
  701   -0.3076923077    0.1250000000    0.3684210526    0.0005060729
  702   -0.3076923077    0.1250000000    0.4210526316    0.0005060729
  703   -0.3076923077    0.1250000000    0.4736842105    0.0005060729
  704   -0.3076923077    0.2500000000   -0.4736842105    0.0005060729
  705   -0.3076923077    0.2500000000   -0.4210526316    0.0005060729
  706   -0.3076923077    0.2500000000   -0.3684210526    0.0005060729
  707   -0.3076923077    0.2500000000   -0.3157894737    0.0005060729
  708   -0.3076923077    0.2500000000   -0.2631578947    0.0005060729
  709   -0.3076923077    0.2500000000   -0.2105263158    0.0005060729
  710   -0.3076923077    0.2500000000   -0.1578947368    0.0005060729
  711   -0.3076923077    0.2500000000   -0.1052631579    0.0005060729
  712   -0.3076923077    0.2500000000   -0.0526315789    0.0005060729
  713   -0.3076923077    0.2500000000    0.0000000000    0.0005060729
  714   -0.3076923077    0.2500000000    0.0526315789    0.0005060729
  715   -0.3076923077    0.2500000000    0.1052631579    0.0005060729
  716   -0.3076923077    0.2500000000    0.1578947368    0.0005060729
  717   -0.3076923077    0.2500000000    0.2105263158    0.0005060729
  718   -0.3076923077    0.2500000000    0.2631578947    0.0005060729
  719   -0.3076923077    0.2500000000    0.3157894737    0.0005060729
  720   -0.3076923077    0.2500000000    0.3684210526    0.0005060729
  721   -0.3076923077    0.2500000000    0.4210526316    0.0005060729
  722   -0.3076923077    0.2500000000    0.4736842105    0.0005060729
  723   -0.3076923077    0.3750000000   -0.4736842105    0.0005060729
  724   -0.3076923077    0.3750000000   -0.4210526316    0.0005060729
  725   -0.3076923077    0.3750000000   -0.3684210526    0.0005060729
  726   -0.3076923077    0.3750000000   -0.3157894737    0.0005060729
  727   -0.3076923077    0.3750000000   -0.2631578947    0.0005060729
  728   -0.3076923077    0.3750000000   -0.2105263158    0.0005060729
  729   -0.3076923077    0.3750000000   -0.1578947368    0.0005060729
  730   -0.3076923077    0.3750000000   -0.1052631579    0.0005060729
  731   -0.3076923077    0.3750000000   -0.0526315789    0.0005060729
  732   -0.3076923077    0.3750000000    0.0000000000    0.0005060729
  733   -0.3076923077    0.3750000000    0.0526315789    0.0005060729
  734   -0.3076923077    0.3750000000    0.1052631579    0.0005060729
  735   -0.3076923077    0.3750000000    0.1578947368    0.0005060729
  736   -0.3076923077    0.3750000000    0.2105263158    0.0005060729
  737   -0.3076923077    0.3750000000    0.2631578947    0.0005060729
  738   -0.3076923077    0.3750000000    0.3157894737    0.0005060729
  739   -0.3076923077    0.3750000000    0.3684210526    0.0005060729
  740   -0.3076923077    0.3750000000    0.4210526316    0.0005060729
  741   -0.3076923077    0.3750000000    0.4736842105    0.0005060729
  742   -0.3076923077    0.5000000000   -0.4736842105    0.0005060729
  743   -0.3076923077    0.5000000000   -0.4210526316    0.0005060729
  744   -0.3076923077    0.5000000000   -0.3684210526    0.0005060729
  745   -0.3076923077    0.5000000000   -0.3157894737    0.0005060729
  746   -0.3076923077    0.5000000000   -0.2631578947    0.0005060729
  747   -0.3076923077    0.5000000000   -0.2105263158    0.0005060729
  748   -0.3076923077    0.5000000000   -0.1578947368    0.0005060729
  749   -0.3076923077    0.5000000000   -0.1052631579    0.0005060729
  750   -0.3076923077    0.5000000000   -0.0526315789    0.0005060729
  751   -0.3076923077    0.5000000000    0.0000000000    0.0005060729
  752   -0.3076923077    0.5000000000    0.0526315789    0.0005060729
  753   -0.3076923077    0.5000000000    0.1052631579    0.0005060729
  754   -0.3076923077    0.5000000000    0.1578947368    0.0005060729
  755   -0.3076923077    0.5000000000    0.2105263158    0.0005060729
  756   -0.3076923077    0.5000000000    0.2631578947    0.0005060729
  757   -0.3076923077    0.5000000000    0.3157894737    0.0005060729
  758   -0.3076923077    0.5000000000    0.3684210526    0.0005060729
  759   -0.3076923077    0.5000000000    0.4210526316    0.0005060729
  760   -0.3076923077    0.5000000000    0.4736842105    0.0005060729
  761   -0.2692307692   -0.3750000000   -0.4736842105    0.0005060729
  762   -0.2692307692   -0.3750000000   -0.4210526316    0.0005060729
  763   -0.2692307692   -0.3750000000   -0.3684210526    0.0005060729
  764   -0.2692307692   -0.3750000000   -0.3157894737    0.0005060729
  765   -0.2692307692   -0.3750000000   -0.2631578947    0.0005060729
  766   -0.2692307692   -0.3750000000   -0.2105263158    0.0005060729
  767   -0.2692307692   -0.3750000000   -0.1578947368    0.0005060729
  768   -0.2692307692   -0.3750000000   -0.1052631579    0.0005060729
  769   -0.2692307692   -0.3750000000   -0.0526315789    0.0005060729
  770   -0.2692307692   -0.3750000000    0.0000000000    0.0005060729
  771   -0.2692307692   -0.3750000000    0.0526315789    0.0005060729
  772   -0.2692307692   -0.3750000000    0.1052631579    0.0005060729
  773   -0.2692307692   -0.3750000000    0.1578947368    0.0005060729
  774   -0.2692307692   -0.3750000000    0.2105263158    0.0005060729
  775   -0.2692307692   -0.3750000000    0.2631578947    0.0005060729
  776   -0.2692307692   -0.3750000000    0.3157894737    0.0005060729
  777   -0.2692307692   -0.3750000000    0.3684210526    0.0005060729
  778   -0.2692307692   -0.3750000000    0.4210526316    0.0005060729
  779   -0.2692307692   -0.3750000000    0.4736842105    0.0005060729
  780   -0.2692307692   -0.2500000000   -0.4736842105    0.0005060729
  781   -0.2692307692   -0.2500000000   -0.4210526316    0.0005060729
  782   -0.2692307692   -0.2500000000   -0.3684210526    0.0005060729
  783   -0.2692307692   -0.2500000000   -0.3157894737    0.0005060729
  784   -0.2692307692   -0.2500000000   -0.2631578947    0.0005060729
  785   -0.2692307692   -0.2500000000   -0.2105263158    0.0005060729
  786   -0.2692307692   -0.2500000000   -0.1578947368    0.0005060729
  787   -0.2692307692   -0.2500000000   -0.1052631579    0.0005060729
  788   -0.2692307692   -0.2500000000   -0.0526315789    0.0005060729
  789   -0.2692307692   -0.2500000000    0.0000000000    0.0005060729
  790   -0.2692307692   -0.2500000000    0.0526315789    0.0005060729
  791   -0.2692307692   -0.2500000000    0.1052631579    0.0005060729
  792   -0.2692307692   -0.2500000000    0.1578947368    0.0005060729
  793   -0.2692307692   -0.2500000000    0.2105263158    0.0005060729
  794   -0.2692307692   -0.2500000000    0.2631578947    0.0005060729
  795   -0.2692307692   -0.2500000000    0.3157894737    0.0005060729
  796   -0.2692307692   -0.2500000000    0.3684210526    0.0005060729
  797   -0.2692307692   -0.2500000000    0.4210526316    0.0005060729
  798   -0.2692307692   -0.2500000000    0.4736842105    0.0005060729
  799   -0.2692307692   -0.1250000000   -0.4736842105    0.0005060729
  800   -0.2692307692   -0.1250000000   -0.4210526316    0.0005060729
  801   -0.2692307692   -0.1250000000   -0.3684210526    0.0005060729
  802   -0.2692307692   -0.1250000000   -0.3157894737    0.0005060729
  803   -0.2692307692   -0.1250000000   -0.2631578947    0.0005060729
  804   -0.2692307692   -0.1250000000   -0.2105263158    0.0005060729
  805   -0.2692307692   -0.1250000000   -0.1578947368    0.0005060729
  806   -0.2692307692   -0.1250000000   -0.1052631579    0.0005060729
  807   -0.2692307692   -0.1250000000   -0.0526315789    0.0005060729
  808   -0.2692307692   -0.1250000000    0.0000000000    0.0005060729
  809   -0.2692307692   -0.1250000000    0.0526315789    0.0005060729
  810   -0.2692307692   -0.1250000000    0.1052631579    0.0005060729
  811   -0.2692307692   -0.1250000000    0.1578947368    0.0005060729
  812   -0.2692307692   -0.1250000000    0.2105263158    0.0005060729
  813   -0.2692307692   -0.1250000000    0.2631578947    0.0005060729
  814   -0.2692307692   -0.1250000000    0.3157894737    0.0005060729
  815   -0.2692307692   -0.1250000000    0.3684210526    0.0005060729
  816   -0.2692307692   -0.1250000000    0.4210526316    0.0005060729
  817   -0.2692307692   -0.1250000000    0.4736842105    0.0005060729
  818   -0.2692307692    0.0000000000   -0.4736842105    0.0005060729
  819   -0.2692307692    0.0000000000   -0.4210526316    0.0005060729
  820   -0.2692307692    0.0000000000   -0.3684210526    0.0005060729
  821   -0.2692307692    0.0000000000   -0.3157894737    0.0005060729
  822   -0.2692307692    0.0000000000   -0.2631578947    0.0005060729
  823   -0.2692307692    0.0000000000   -0.2105263158    0.0005060729
  824   -0.2692307692    0.0000000000   -0.1578947368    0.0005060729
  825   -0.2692307692    0.0000000000   -0.1052631579    0.0005060729
  826   -0.2692307692    0.0000000000   -0.0526315789    0.0005060729
  827   -0.2692307692    0.0000000000    0.0000000000    0.0005060729
  828   -0.2692307692    0.0000000000    0.0526315789    0.0005060729
  829   -0.2692307692    0.0000000000    0.1052631579    0.0005060729
  830   -0.2692307692    0.0000000000    0.1578947368    0.0005060729
  831   -0.2692307692    0.0000000000    0.2105263158    0.0005060729
  832   -0.2692307692    0.0000000000    0.2631578947    0.0005060729
  833   -0.2692307692    0.0000000000    0.3157894737    0.0005060729
  834   -0.2692307692    0.0000000000    0.3684210526    0.0005060729
  835   -0.2692307692    0.0000000000    0.4210526316    0.0005060729
  836   -0.2692307692    0.0000000000    0.4736842105    0.0005060729
  837   -0.2692307692    0.1250000000   -0.4736842105    0.0005060729
  838   -0.2692307692    0.1250000000   -0.4210526316    0.0005060729
  839   -0.2692307692    0.1250000000   -0.3684210526    0.0005060729
  840   -0.2692307692    0.1250000000   -0.3157894737    0.0005060729
  841   -0.2692307692    0.1250000000   -0.2631578947    0.0005060729
  842   -0.2692307692    0.1250000000   -0.2105263158    0.0005060729
  843   -0.2692307692    0.1250000000   -0.1578947368    0.0005060729
  844   -0.2692307692    0.1250000000   -0.1052631579    0.0005060729
  845   -0.2692307692    0.1250000000   -0.0526315789    0.0005060729
  846   -0.2692307692    0.1250000000    0.0000000000    0.0005060729
  847   -0.2692307692    0.1250000000    0.0526315789    0.0005060729
  848   -0.2692307692    0.1250000000    0.1052631579    0.0005060729
  849   -0.2692307692    0.1250000000    0.1578947368    0.0005060729
  850   -0.2692307692    0.1250000000    0.2105263158    0.0005060729
  851   -0.2692307692    0.1250000000    0.2631578947    0.0005060729
  852   -0.2692307692    0.1250000000    0.3157894737    0.0005060729
  853   -0.2692307692    0.1250000000    0.3684210526    0.0005060729
  854   -0.2692307692    0.1250000000    0.4210526316    0.0005060729
  855   -0.2692307692    0.1250000000    0.4736842105    0.0005060729
  856   -0.2692307692    0.2500000000   -0.4736842105    0.0005060729
  857   -0.2692307692    0.2500000000   -0.4210526316    0.0005060729
  858   -0.2692307692    0.2500000000   -0.3684210526    0.0005060729
  859   -0.2692307692    0.2500000000   -0.3157894737    0.0005060729
  860   -0.2692307692    0.2500000000   -0.2631578947    0.0005060729
  861   -0.2692307692    0.2500000000   -0.2105263158    0.0005060729
  862   -0.2692307692    0.2500000000   -0.1578947368    0.0005060729
  863   -0.2692307692    0.2500000000   -0.1052631579    0.0005060729
  864   -0.2692307692    0.2500000000   -0.0526315789    0.0005060729
  865   -0.2692307692    0.2500000000    0.0000000000    0.0005060729
  866   -0.2692307692    0.2500000000    0.0526315789    0.0005060729
  867   -0.2692307692    0.2500000000    0.1052631579    0.0005060729
  868   -0.2692307692    0.2500000000    0.1578947368    0.0005060729
  869   -0.2692307692    0.2500000000    0.2105263158    0.0005060729
  870   -0.2692307692    0.2500000000    0.2631578947    0.0005060729
  871   -0.2692307692    0.2500000000    0.3157894737    0.0005060729
  872   -0.2692307692    0.2500000000    0.3684210526    0.0005060729
  873   -0.2692307692    0.2500000000    0.4210526316    0.0005060729
  874   -0.2692307692    0.2500000000    0.4736842105    0.0005060729
  875   -0.2692307692    0.3750000000   -0.4736842105    0.0005060729
  876   -0.2692307692    0.3750000000   -0.4210526316    0.0005060729
  877   -0.2692307692    0.3750000000   -0.3684210526    0.0005060729
  878   -0.2692307692    0.3750000000   -0.3157894737    0.0005060729
  879   -0.2692307692    0.3750000000   -0.2631578947    0.0005060729
  880   -0.2692307692    0.3750000000   -0.2105263158    0.0005060729
  881   -0.2692307692    0.3750000000   -0.1578947368    0.0005060729
  882   -0.2692307692    0.3750000000   -0.1052631579    0.0005060729
  883   -0.2692307692    0.3750000000   -0.0526315789    0.0005060729
  884   -0.2692307692    0.3750000000    0.0000000000    0.0005060729
  885   -0.2692307692    0.3750000000    0.0526315789    0.0005060729
  886   -0.2692307692    0.3750000000    0.1052631579    0.0005060729
  887   -0.2692307692    0.3750000000    0.1578947368    0.0005060729
  888   -0.2692307692    0.3750000000    0.2105263158    0.0005060729
  889   -0.2692307692    0.3750000000    0.2631578947    0.0005060729
  890   -0.2692307692    0.3750000000    0.3157894737    0.0005060729
  891   -0.2692307692    0.3750000000    0.3684210526    0.0005060729
  892   -0.2692307692    0.3750000000    0.4210526316    0.0005060729
  893   -0.2692307692    0.3750000000    0.4736842105    0.0005060729
  894   -0.2692307692    0.5000000000   -0.4736842105    0.0005060729
  895   -0.2692307692    0.5000000000   -0.4210526316    0.0005060729
  896   -0.2692307692    0.5000000000   -0.3684210526    0.0005060729
  897   -0.2692307692    0.5000000000   -0.3157894737    0.0005060729
  898   -0.2692307692    0.5000000000   -0.2631578947    0.0005060729
  899   -0.2692307692    0.5000000000   -0.2105263158    0.0005060729
  900   -0.2692307692    0.5000000000   -0.1578947368    0.0005060729
  901   -0.2692307692    0.5000000000   -0.1052631579    0.0005060729
  902   -0.2692307692    0.5000000000   -0.0526315789    0.0005060729
  903   -0.2692307692    0.5000000000    0.0000000000    0.0005060729
  904   -0.2692307692    0.5000000000    0.0526315789    0.0005060729
  905   -0.2692307692    0.5000000000    0.1052631579    0.0005060729
  906   -0.2692307692    0.5000000000    0.1578947368    0.0005060729
  907   -0.2692307692    0.5000000000    0.2105263158    0.0005060729
  908   -0.2692307692    0.5000000000    0.2631578947    0.0005060729
  909   -0.2692307692    0.5000000000    0.3157894737    0.0005060729
  910   -0.2692307692    0.5000000000    0.3684210526    0.0005060729
  911   -0.2692307692    0.5000000000    0.4210526316    0.0005060729
  912   -0.2692307692    0.5000000000    0.4736842105    0.0005060729
  913   -0.2307692308   -0.3750000000   -0.4736842105    0.0005060729
  914   -0.2307692308   -0.3750000000   -0.4210526316    0.0005060729
  915   -0.2307692308   -0.3750000000   -0.3684210526    0.0005060729
  916   -0.2307692308   -0.3750000000   -0.3157894737    0.0005060729
  917   -0.2307692308   -0.3750000000   -0.2631578947    0.0005060729
  918   -0.2307692308   -0.3750000000   -0.2105263158    0.0005060729
  919   -0.2307692308   -0.3750000000   -0.1578947368    0.0005060729
  920   -0.2307692308   -0.3750000000   -0.1052631579    0.0005060729
  921   -0.2307692308   -0.3750000000   -0.0526315789    0.0005060729
  922   -0.2307692308   -0.3750000000    0.0000000000    0.0005060729
  923   -0.2307692308   -0.3750000000    0.0526315789    0.0005060729
  924   -0.2307692308   -0.3750000000    0.1052631579    0.0005060729
  925   -0.2307692308   -0.3750000000    0.1578947368    0.0005060729
  926   -0.2307692308   -0.3750000000    0.2105263158    0.0005060729
  927   -0.2307692308   -0.3750000000    0.2631578947    0.0005060729
  928   -0.2307692308   -0.3750000000    0.3157894737    0.0005060729
  929   -0.2307692308   -0.3750000000    0.3684210526    0.0005060729
  930   -0.2307692308   -0.3750000000    0.4210526316    0.0005060729
  931   -0.2307692308   -0.3750000000    0.4736842105    0.0005060729
  932   -0.2307692308   -0.2500000000   -0.4736842105    0.0005060729
  933   -0.2307692308   -0.2500000000   -0.4210526316    0.0005060729
  934   -0.2307692308   -0.2500000000   -0.3684210526    0.0005060729
  935   -0.2307692308   -0.2500000000   -0.3157894737    0.0005060729
  936   -0.2307692308   -0.2500000000   -0.2631578947    0.0005060729
  937   -0.2307692308   -0.2500000000   -0.2105263158    0.0005060729
  938   -0.2307692308   -0.2500000000   -0.1578947368    0.0005060729
  939   -0.2307692308   -0.2500000000   -0.1052631579    0.0005060729
  940   -0.2307692308   -0.2500000000   -0.0526315789    0.0005060729
  941   -0.2307692308   -0.2500000000    0.0000000000    0.0005060729
  942   -0.2307692308   -0.2500000000    0.0526315789    0.0005060729
  943   -0.2307692308   -0.2500000000    0.1052631579    0.0005060729
  944   -0.2307692308   -0.2500000000    0.1578947368    0.0005060729
  945   -0.2307692308   -0.2500000000    0.2105263158    0.0005060729
  946   -0.2307692308   -0.2500000000    0.2631578947    0.0005060729
  947   -0.2307692308   -0.2500000000    0.3157894737    0.0005060729
  948   -0.2307692308   -0.2500000000    0.3684210526    0.0005060729
  949   -0.2307692308   -0.2500000000    0.4210526316    0.0005060729
  950   -0.2307692308   -0.2500000000    0.4736842105    0.0005060729
  951   -0.2307692308   -0.1250000000   -0.4736842105    0.0005060729
  952   -0.2307692308   -0.1250000000   -0.4210526316    0.0005060729
  953   -0.2307692308   -0.1250000000   -0.3684210526    0.0005060729
  954   -0.2307692308   -0.1250000000   -0.3157894737    0.0005060729
  955   -0.2307692308   -0.1250000000   -0.2631578947    0.0005060729
  956   -0.2307692308   -0.1250000000   -0.2105263158    0.0005060729
  957   -0.2307692308   -0.1250000000   -0.1578947368    0.0005060729
  958   -0.2307692308   -0.1250000000   -0.1052631579    0.0005060729
  959   -0.2307692308   -0.1250000000   -0.0526315789    0.0005060729
  960   -0.2307692308   -0.1250000000    0.0000000000    0.0005060729
  961   -0.2307692308   -0.1250000000    0.0526315789    0.0005060729
  962   -0.2307692308   -0.1250000000    0.1052631579    0.0005060729
  963   -0.2307692308   -0.1250000000    0.1578947368    0.0005060729
  964   -0.2307692308   -0.1250000000    0.2105263158    0.0005060729
  965   -0.2307692308   -0.1250000000    0.2631578947    0.0005060729
  966   -0.2307692308   -0.1250000000    0.3157894737    0.0005060729
  967   -0.2307692308   -0.1250000000    0.3684210526    0.0005060729
  968   -0.2307692308   -0.1250000000    0.4210526316    0.0005060729
  969   -0.2307692308   -0.1250000000    0.4736842105    0.0005060729
  970   -0.2307692308    0.0000000000   -0.4736842105    0.0005060729
  971   -0.2307692308    0.0000000000   -0.4210526316    0.0005060729
  972   -0.2307692308    0.0000000000   -0.3684210526    0.0005060729
  973   -0.2307692308    0.0000000000   -0.3157894737    0.0005060729
  974   -0.2307692308    0.0000000000   -0.2631578947    0.0005060729
  975   -0.2307692308    0.0000000000   -0.2105263158    0.0005060729
  976   -0.2307692308    0.0000000000   -0.1578947368    0.0005060729
  977   -0.2307692308    0.0000000000   -0.1052631579    0.0005060729
  978   -0.2307692308    0.0000000000   -0.0526315789    0.0005060729
  979   -0.2307692308    0.0000000000    0.0000000000    0.0005060729
  980   -0.2307692308    0.0000000000    0.0526315789    0.0005060729
  981   -0.2307692308    0.0000000000    0.1052631579    0.0005060729
  982   -0.2307692308    0.0000000000    0.1578947368    0.0005060729
  983   -0.2307692308    0.0000000000    0.2105263158    0.0005060729
  984   -0.2307692308    0.0000000000    0.2631578947    0.0005060729
  985   -0.2307692308    0.0000000000    0.3157894737    0.0005060729
  986   -0.2307692308    0.0000000000    0.3684210526    0.0005060729
  987   -0.2307692308    0.0000000000    0.4210526316    0.0005060729
  988   -0.2307692308    0.0000000000    0.4736842105    0.0005060729
  989   -0.2307692308    0.1250000000   -0.4736842105    0.0005060729
  990   -0.2307692308    0.1250000000   -0.4210526316    0.0005060729
  991   -0.2307692308    0.1250000000   -0.3684210526    0.0005060729
  992   -0.2307692308    0.1250000000   -0.3157894737    0.0005060729
  993   -0.2307692308    0.1250000000   -0.2631578947    0.0005060729
  994   -0.2307692308    0.1250000000   -0.2105263158    0.0005060729
  995   -0.2307692308    0.1250000000   -0.1578947368    0.0005060729
  996   -0.2307692308    0.1250000000   -0.1052631579    0.0005060729
  997   -0.2307692308    0.1250000000   -0.0526315789    0.0005060729
  998   -0.2307692308    0.1250000000    0.0000000000    0.0005060729
  999   -0.2307692308    0.1250000000    0.0526315789    0.0005060729
 1000   -0.2307692308    0.1250000000    0.1052631579    0.0005060729
 1001   -0.2307692308    0.1250000000    0.1578947368    0.0005060729
 1002   -0.2307692308    0.1250000000    0.2105263158    0.0005060729
 1003   -0.2307692308    0.1250000000    0.2631578947    0.0005060729
 1004   -0.2307692308    0.1250000000    0.3157894737    0.0005060729
 1005   -0.2307692308    0.1250000000    0.3684210526    0.0005060729
 1006   -0.2307692308    0.1250000000    0.4210526316    0.0005060729
 1007   -0.2307692308    0.1250000000    0.4736842105    0.0005060729
 1008   -0.2307692308    0.2500000000   -0.4736842105    0.0005060729
 1009   -0.2307692308    0.2500000000   -0.4210526316    0.0005060729
 1010   -0.2307692308    0.2500000000   -0.3684210526    0.0005060729
 1011   -0.2307692308    0.2500000000   -0.3157894737    0.0005060729
 1012   -0.2307692308    0.2500000000   -0.2631578947    0.0005060729
 1013   -0.2307692308    0.2500000000   -0.2105263158    0.0005060729
 1014   -0.2307692308    0.2500000000   -0.1578947368    0.0005060729
 1015   -0.2307692308    0.2500000000   -0.1052631579    0.0005060729
 1016   -0.2307692308    0.2500000000   -0.0526315789    0.0005060729
 1017   -0.2307692308    0.2500000000    0.0000000000    0.0005060729
 1018   -0.2307692308    0.2500000000    0.0526315789    0.0005060729
 1019   -0.2307692308    0.2500000000    0.1052631579    0.0005060729
 1020   -0.2307692308    0.2500000000    0.1578947368    0.0005060729
 1021   -0.2307692308    0.2500000000    0.2105263158    0.0005060729
 1022   -0.2307692308    0.2500000000    0.2631578947    0.0005060729
 1023   -0.2307692308    0.2500000000    0.3157894737    0.0005060729
 1024   -0.2307692308    0.2500000000    0.3684210526    0.0005060729
 1025   -0.2307692308    0.2500000000    0.4210526316    0.0005060729
 1026   -0.2307692308    0.2500000000    0.4736842105    0.0005060729
 1027   -0.2307692308    0.3750000000   -0.4736842105    0.0005060729
 1028   -0.2307692308    0.3750000000   -0.4210526316    0.0005060729
 1029   -0.2307692308    0.3750000000   -0.3684210526    0.0005060729
 1030   -0.2307692308    0.3750000000   -0.3157894737    0.0005060729
 1031   -0.2307692308    0.3750000000   -0.2631578947    0.0005060729
 1032   -0.2307692308    0.3750000000   -0.2105263158    0.0005060729
 1033   -0.2307692308    0.3750000000   -0.1578947368    0.0005060729
 1034   -0.2307692308    0.3750000000   -0.1052631579    0.0005060729
 1035   -0.2307692308    0.3750000000   -0.0526315789    0.0005060729
 1036   -0.2307692308    0.3750000000    0.0000000000    0.0005060729
 1037   -0.2307692308    0.3750000000    0.0526315789    0.0005060729
 1038   -0.2307692308    0.3750000000    0.1052631579    0.0005060729
 1039   -0.2307692308    0.3750000000    0.1578947368    0.0005060729
 1040   -0.2307692308    0.3750000000    0.2105263158    0.0005060729
 1041   -0.2307692308    0.3750000000    0.2631578947    0.0005060729
 1042   -0.2307692308    0.3750000000    0.3157894737    0.0005060729
 1043   -0.2307692308    0.3750000000    0.3684210526    0.0005060729
 1044   -0.2307692308    0.3750000000    0.4210526316    0.0005060729
 1045   -0.2307692308    0.3750000000    0.4736842105    0.0005060729
 1046   -0.2307692308    0.5000000000   -0.4736842105    0.0005060729
 1047   -0.2307692308    0.5000000000   -0.4210526316    0.0005060729
 1048   -0.2307692308    0.5000000000   -0.3684210526    0.0005060729
 1049   -0.2307692308    0.5000000000   -0.3157894737    0.0005060729
 1050   -0.2307692308    0.5000000000   -0.2631578947    0.0005060729
 1051   -0.2307692308    0.5000000000   -0.2105263158    0.0005060729
 1052   -0.2307692308    0.5000000000   -0.1578947368    0.0005060729
 1053   -0.2307692308    0.5000000000   -0.1052631579    0.0005060729
 1054   -0.2307692308    0.5000000000   -0.0526315789    0.0005060729
 1055   -0.2307692308    0.5000000000    0.0000000000    0.0005060729
 1056   -0.2307692308    0.5000000000    0.0526315789    0.0005060729
 1057   -0.2307692308    0.5000000000    0.1052631579    0.0005060729
 1058   -0.2307692308    0.5000000000    0.1578947368    0.0005060729
 1059   -0.2307692308    0.5000000000    0.2105263158    0.0005060729
 1060   -0.2307692308    0.5000000000    0.2631578947    0.0005060729
 1061   -0.2307692308    0.5000000000    0.3157894737    0.0005060729
 1062   -0.2307692308    0.5000000000    0.3684210526    0.0005060729
 1063   -0.2307692308    0.5000000000    0.4210526316    0.0005060729
 1064   -0.2307692308    0.5000000000    0.4736842105    0.0005060729
 1065   -0.1923076923   -0.3750000000   -0.4736842105    0.0005060729
 1066   -0.1923076923   -0.3750000000   -0.4210526316    0.0005060729
 1067   -0.1923076923   -0.3750000000   -0.3684210526    0.0005060729
 1068   -0.1923076923   -0.3750000000   -0.3157894737    0.0005060729
 1069   -0.1923076923   -0.3750000000   -0.2631578947    0.0005060729
 1070   -0.1923076923   -0.3750000000   -0.2105263158    0.0005060729
 1071   -0.1923076923   -0.3750000000   -0.1578947368    0.0005060729
 1072   -0.1923076923   -0.3750000000   -0.1052631579    0.0005060729
 1073   -0.1923076923   -0.3750000000   -0.0526315789    0.0005060729
 1074   -0.1923076923   -0.3750000000    0.0000000000    0.0005060729
 1075   -0.1923076923   -0.3750000000    0.0526315789    0.0005060729
 1076   -0.1923076923   -0.3750000000    0.1052631579    0.0005060729
 1077   -0.1923076923   -0.3750000000    0.1578947368    0.0005060729
 1078   -0.1923076923   -0.3750000000    0.2105263158    0.0005060729
 1079   -0.1923076923   -0.3750000000    0.2631578947    0.0005060729
 1080   -0.1923076923   -0.3750000000    0.3157894737    0.0005060729
 1081   -0.1923076923   -0.3750000000    0.3684210526    0.0005060729
 1082   -0.1923076923   -0.3750000000    0.4210526316    0.0005060729
 1083   -0.1923076923   -0.3750000000    0.4736842105    0.0005060729
 1084   -0.1923076923   -0.2500000000   -0.4736842105    0.0005060729
 1085   -0.1923076923   -0.2500000000   -0.4210526316    0.0005060729
 1086   -0.1923076923   -0.2500000000   -0.3684210526    0.0005060729
 1087   -0.1923076923   -0.2500000000   -0.3157894737    0.0005060729
 1088   -0.1923076923   -0.2500000000   -0.2631578947    0.0005060729
 1089   -0.1923076923   -0.2500000000   -0.2105263158    0.0005060729
 1090   -0.1923076923   -0.2500000000   -0.1578947368    0.0005060729
 1091   -0.1923076923   -0.2500000000   -0.1052631579    0.0005060729
 1092   -0.1923076923   -0.2500000000   -0.0526315789    0.0005060729
 1093   -0.1923076923   -0.2500000000    0.0000000000    0.0005060729
 1094   -0.1923076923   -0.2500000000    0.0526315789    0.0005060729
 1095   -0.1923076923   -0.2500000000    0.1052631579    0.0005060729
 1096   -0.1923076923   -0.2500000000    0.1578947368    0.0005060729
 1097   -0.1923076923   -0.2500000000    0.2105263158    0.0005060729
 1098   -0.1923076923   -0.2500000000    0.2631578947    0.0005060729
 1099   -0.1923076923   -0.2500000000    0.3157894737    0.0005060729
 1100   -0.1923076923   -0.2500000000    0.3684210526    0.0005060729
 1101   -0.1923076923   -0.2500000000    0.4210526316    0.0005060729
 1102   -0.1923076923   -0.2500000000    0.4736842105    0.0005060729
 1103   -0.1923076923   -0.1250000000   -0.4736842105    0.0005060729
 1104   -0.1923076923   -0.1250000000   -0.4210526316    0.0005060729
 1105   -0.1923076923   -0.1250000000   -0.3684210526    0.0005060729
 1106   -0.1923076923   -0.1250000000   -0.3157894737    0.0005060729
 1107   -0.1923076923   -0.1250000000   -0.2631578947    0.0005060729
 1108   -0.1923076923   -0.1250000000   -0.2105263158    0.0005060729
 1109   -0.1923076923   -0.1250000000   -0.1578947368    0.0005060729
 1110   -0.1923076923   -0.1250000000   -0.1052631579    0.0005060729
 1111   -0.1923076923   -0.1250000000   -0.0526315789    0.0005060729
 1112   -0.1923076923   -0.1250000000    0.0000000000    0.0005060729
 1113   -0.1923076923   -0.1250000000    0.0526315789    0.0005060729
 1114   -0.1923076923   -0.1250000000    0.1052631579    0.0005060729
 1115   -0.1923076923   -0.1250000000    0.1578947368    0.0005060729
 1116   -0.1923076923   -0.1250000000    0.2105263158    0.0005060729
 1117   -0.1923076923   -0.1250000000    0.2631578947    0.0005060729
 1118   -0.1923076923   -0.1250000000    0.3157894737    0.0005060729
 1119   -0.1923076923   -0.1250000000    0.3684210526    0.0005060729
 1120   -0.1923076923   -0.1250000000    0.4210526316    0.0005060729
 1121   -0.1923076923   -0.1250000000    0.4736842105    0.0005060729
 1122   -0.1923076923    0.0000000000   -0.4736842105    0.0005060729
 1123   -0.1923076923    0.0000000000   -0.4210526316    0.0005060729
 1124   -0.1923076923    0.0000000000   -0.3684210526    0.0005060729
 1125   -0.1923076923    0.0000000000   -0.3157894737    0.0005060729
 1126   -0.1923076923    0.0000000000   -0.2631578947    0.0005060729
 1127   -0.1923076923    0.0000000000   -0.2105263158    0.0005060729
 1128   -0.1923076923    0.0000000000   -0.1578947368    0.0005060729
 1129   -0.1923076923    0.0000000000   -0.1052631579    0.0005060729
 1130   -0.1923076923    0.0000000000   -0.0526315789    0.0005060729
 1131   -0.1923076923    0.0000000000    0.0000000000    0.0005060729
 1132   -0.1923076923    0.0000000000    0.0526315789    0.0005060729
 1133   -0.1923076923    0.0000000000    0.1052631579    0.0005060729
 1134   -0.1923076923    0.0000000000    0.1578947368    0.0005060729
 1135   -0.1923076923    0.0000000000    0.2105263158    0.0005060729
 1136   -0.1923076923    0.0000000000    0.2631578947    0.0005060729
 1137   -0.1923076923    0.0000000000    0.3157894737    0.0005060729
 1138   -0.1923076923    0.0000000000    0.3684210526    0.0005060729
 1139   -0.1923076923    0.0000000000    0.4210526316    0.0005060729
 1140   -0.1923076923    0.0000000000    0.4736842105    0.0005060729
 1141   -0.1923076923    0.1250000000   -0.4736842105    0.0005060729
 1142   -0.1923076923    0.1250000000   -0.4210526316    0.0005060729
 1143   -0.1923076923    0.1250000000   -0.3684210526    0.0005060729
 1144   -0.1923076923    0.1250000000   -0.3157894737    0.0005060729
 1145   -0.1923076923    0.1250000000   -0.2631578947    0.0005060729
 1146   -0.1923076923    0.1250000000   -0.2105263158    0.0005060729
 1147   -0.1923076923    0.1250000000   -0.1578947368    0.0005060729
 1148   -0.1923076923    0.1250000000   -0.1052631579    0.0005060729
 1149   -0.1923076923    0.1250000000   -0.0526315789    0.0005060729
 1150   -0.1923076923    0.1250000000    0.0000000000    0.0005060729
 1151   -0.1923076923    0.1250000000    0.0526315789    0.0005060729
 1152   -0.1923076923    0.1250000000    0.1052631579    0.0005060729
 1153   -0.1923076923    0.1250000000    0.1578947368    0.0005060729
 1154   -0.1923076923    0.1250000000    0.2105263158    0.0005060729
 1155   -0.1923076923    0.1250000000    0.2631578947    0.0005060729
 1156   -0.1923076923    0.1250000000    0.3157894737    0.0005060729
 1157   -0.1923076923    0.1250000000    0.3684210526    0.0005060729
 1158   -0.1923076923    0.1250000000    0.4210526316    0.0005060729
 1159   -0.1923076923    0.1250000000    0.4736842105    0.0005060729
 1160   -0.1923076923    0.2500000000   -0.4736842105    0.0005060729
 1161   -0.1923076923    0.2500000000   -0.4210526316    0.0005060729
 1162   -0.1923076923    0.2500000000   -0.3684210526    0.0005060729
 1163   -0.1923076923    0.2500000000   -0.3157894737    0.0005060729
 1164   -0.1923076923    0.2500000000   -0.2631578947    0.0005060729
 1165   -0.1923076923    0.2500000000   -0.2105263158    0.0005060729
 1166   -0.1923076923    0.2500000000   -0.1578947368    0.0005060729
 1167   -0.1923076923    0.2500000000   -0.1052631579    0.0005060729
 1168   -0.1923076923    0.2500000000   -0.0526315789    0.0005060729
 1169   -0.1923076923    0.2500000000    0.0000000000    0.0005060729
 1170   -0.1923076923    0.2500000000    0.0526315789    0.0005060729
 1171   -0.1923076923    0.2500000000    0.1052631579    0.0005060729
 1172   -0.1923076923    0.2500000000    0.1578947368    0.0005060729
 1173   -0.1923076923    0.2500000000    0.2105263158    0.0005060729
 1174   -0.1923076923    0.2500000000    0.2631578947    0.0005060729
 1175   -0.1923076923    0.2500000000    0.3157894737    0.0005060729
 1176   -0.1923076923    0.2500000000    0.3684210526    0.0005060729
 1177   -0.1923076923    0.2500000000    0.4210526316    0.0005060729
 1178   -0.1923076923    0.2500000000    0.4736842105    0.0005060729
 1179   -0.1923076923    0.3750000000   -0.4736842105    0.0005060729
 1180   -0.1923076923    0.3750000000   -0.4210526316    0.0005060729
 1181   -0.1923076923    0.3750000000   -0.3684210526    0.0005060729
 1182   -0.1923076923    0.3750000000   -0.3157894737    0.0005060729
 1183   -0.1923076923    0.3750000000   -0.2631578947    0.0005060729
 1184   -0.1923076923    0.3750000000   -0.2105263158    0.0005060729
 1185   -0.1923076923    0.3750000000   -0.1578947368    0.0005060729
 1186   -0.1923076923    0.3750000000   -0.1052631579    0.0005060729
 1187   -0.1923076923    0.3750000000   -0.0526315789    0.0005060729
 1188   -0.1923076923    0.3750000000    0.0000000000    0.0005060729
 1189   -0.1923076923    0.3750000000    0.0526315789    0.0005060729
 1190   -0.1923076923    0.3750000000    0.1052631579    0.0005060729
 1191   -0.1923076923    0.3750000000    0.1578947368    0.0005060729
 1192   -0.1923076923    0.3750000000    0.2105263158    0.0005060729
 1193   -0.1923076923    0.3750000000    0.2631578947    0.0005060729
 1194   -0.1923076923    0.3750000000    0.3157894737    0.0005060729
 1195   -0.1923076923    0.3750000000    0.3684210526    0.0005060729
 1196   -0.1923076923    0.3750000000    0.4210526316    0.0005060729
 1197   -0.1923076923    0.3750000000    0.4736842105    0.0005060729
 1198   -0.1923076923    0.5000000000   -0.4736842105    0.0005060729
 1199   -0.1923076923    0.5000000000   -0.4210526316    0.0005060729
 1200   -0.1923076923    0.5000000000   -0.3684210526    0.0005060729
 1201   -0.1923076923    0.5000000000   -0.3157894737    0.0005060729
 1202   -0.1923076923    0.5000000000   -0.2631578947    0.0005060729
 1203   -0.1923076923    0.5000000000   -0.2105263158    0.0005060729
 1204   -0.1923076923    0.5000000000   -0.1578947368    0.0005060729
 1205   -0.1923076923    0.5000000000   -0.1052631579    0.0005060729
 1206   -0.1923076923    0.5000000000   -0.0526315789    0.0005060729
 1207   -0.1923076923    0.5000000000    0.0000000000    0.0005060729
 1208   -0.1923076923    0.5000000000    0.0526315789    0.0005060729
 1209   -0.1923076923    0.5000000000    0.1052631579    0.0005060729
 1210   -0.1923076923    0.5000000000    0.1578947368    0.0005060729
 1211   -0.1923076923    0.5000000000    0.2105263158    0.0005060729
 1212   -0.1923076923    0.5000000000    0.2631578947    0.0005060729
 1213   -0.1923076923    0.5000000000    0.3157894737    0.0005060729
 1214   -0.1923076923    0.5000000000    0.3684210526    0.0005060729
 1215   -0.1923076923    0.5000000000    0.4210526316    0.0005060729
 1216   -0.1923076923    0.5000000000    0.4736842105    0.0005060729
 1217   -0.1538461538   -0.3750000000   -0.4736842105    0.0005060729
 1218   -0.1538461538   -0.3750000000   -0.4210526316    0.0005060729
 1219   -0.1538461538   -0.3750000000   -0.3684210526    0.0005060729
 1220   -0.1538461538   -0.3750000000   -0.3157894737    0.0005060729
 1221   -0.1538461538   -0.3750000000   -0.2631578947    0.0005060729
 1222   -0.1538461538   -0.3750000000   -0.2105263158    0.0005060729
 1223   -0.1538461538   -0.3750000000   -0.1578947368    0.0005060729
 1224   -0.1538461538   -0.3750000000   -0.1052631579    0.0005060729
 1225   -0.1538461538   -0.3750000000   -0.0526315789    0.0005060729
 1226   -0.1538461538   -0.3750000000    0.0000000000    0.0005060729
 1227   -0.1538461538   -0.3750000000    0.0526315789    0.0005060729
 1228   -0.1538461538   -0.3750000000    0.1052631579    0.0005060729
 1229   -0.1538461538   -0.3750000000    0.1578947368    0.0005060729
 1230   -0.1538461538   -0.3750000000    0.2105263158    0.0005060729
 1231   -0.1538461538   -0.3750000000    0.2631578947    0.0005060729
 1232   -0.1538461538   -0.3750000000    0.3157894737    0.0005060729
 1233   -0.1538461538   -0.3750000000    0.3684210526    0.0005060729
 1234   -0.1538461538   -0.3750000000    0.4210526316    0.0005060729
 1235   -0.1538461538   -0.3750000000    0.4736842105    0.0005060729
 1236   -0.1538461538   -0.2500000000   -0.4736842105    0.0005060729
 1237   -0.1538461538   -0.2500000000   -0.4210526316    0.0005060729
 1238   -0.1538461538   -0.2500000000   -0.3684210526    0.0005060729
 1239   -0.1538461538   -0.2500000000   -0.3157894737    0.0005060729
 1240   -0.1538461538   -0.2500000000   -0.2631578947    0.0005060729
 1241   -0.1538461538   -0.2500000000   -0.2105263158    0.0005060729
 1242   -0.1538461538   -0.2500000000   -0.1578947368    0.0005060729
 1243   -0.1538461538   -0.2500000000   -0.1052631579    0.0005060729
 1244   -0.1538461538   -0.2500000000   -0.0526315789    0.0005060729
 1245   -0.1538461538   -0.2500000000    0.0000000000    0.0005060729
 1246   -0.1538461538   -0.2500000000    0.0526315789    0.0005060729
 1247   -0.1538461538   -0.2500000000    0.1052631579    0.0005060729
 1248   -0.1538461538   -0.2500000000    0.1578947368    0.0005060729
 1249   -0.1538461538   -0.2500000000    0.2105263158    0.0005060729
 1250   -0.1538461538   -0.2500000000    0.2631578947    0.0005060729
 1251   -0.1538461538   -0.2500000000    0.3157894737    0.0005060729
 1252   -0.1538461538   -0.2500000000    0.3684210526    0.0005060729
 1253   -0.1538461538   -0.2500000000    0.4210526316    0.0005060729
 1254   -0.1538461538   -0.2500000000    0.4736842105    0.0005060729
 1255   -0.1538461538   -0.1250000000   -0.4736842105    0.0005060729
 1256   -0.1538461538   -0.1250000000   -0.4210526316    0.0005060729
 1257   -0.1538461538   -0.1250000000   -0.3684210526    0.0005060729
 1258   -0.1538461538   -0.1250000000   -0.3157894737    0.0005060729
 1259   -0.1538461538   -0.1250000000   -0.2631578947    0.0005060729
 1260   -0.1538461538   -0.1250000000   -0.2105263158    0.0005060729
 1261   -0.1538461538   -0.1250000000   -0.1578947368    0.0005060729
 1262   -0.1538461538   -0.1250000000   -0.1052631579    0.0005060729
 1263   -0.1538461538   -0.1250000000   -0.0526315789    0.0005060729
 1264   -0.1538461538   -0.1250000000    0.0000000000    0.0005060729
 1265   -0.1538461538   -0.1250000000    0.0526315789    0.0005060729
 1266   -0.1538461538   -0.1250000000    0.1052631579    0.0005060729
 1267   -0.1538461538   -0.1250000000    0.1578947368    0.0005060729
 1268   -0.1538461538   -0.1250000000    0.2105263158    0.0005060729
 1269   -0.1538461538   -0.1250000000    0.2631578947    0.0005060729
 1270   -0.1538461538   -0.1250000000    0.3157894737    0.0005060729
 1271   -0.1538461538   -0.1250000000    0.3684210526    0.0005060729
 1272   -0.1538461538   -0.1250000000    0.4210526316    0.0005060729
 1273   -0.1538461538   -0.1250000000    0.4736842105    0.0005060729
 1274   -0.1538461538    0.0000000000   -0.4736842105    0.0005060729
 1275   -0.1538461538    0.0000000000   -0.4210526316    0.0005060729
 1276   -0.1538461538    0.0000000000   -0.3684210526    0.0005060729
 1277   -0.1538461538    0.0000000000   -0.3157894737    0.0005060729
 1278   -0.1538461538    0.0000000000   -0.2631578947    0.0005060729
 1279   -0.1538461538    0.0000000000   -0.2105263158    0.0005060729
 1280   -0.1538461538    0.0000000000   -0.1578947368    0.0005060729
 1281   -0.1538461538    0.0000000000   -0.1052631579    0.0005060729
 1282   -0.1538461538    0.0000000000   -0.0526315789    0.0005060729
 1283   -0.1538461538    0.0000000000    0.0000000000    0.0005060729
 1284   -0.1538461538    0.0000000000    0.0526315789    0.0005060729
 1285   -0.1538461538    0.0000000000    0.1052631579    0.0005060729
 1286   -0.1538461538    0.0000000000    0.1578947368    0.0005060729
 1287   -0.1538461538    0.0000000000    0.2105263158    0.0005060729
 1288   -0.1538461538    0.0000000000    0.2631578947    0.0005060729
 1289   -0.1538461538    0.0000000000    0.3157894737    0.0005060729
 1290   -0.1538461538    0.0000000000    0.3684210526    0.0005060729
 1291   -0.1538461538    0.0000000000    0.4210526316    0.0005060729
 1292   -0.1538461538    0.0000000000    0.4736842105    0.0005060729
 1293   -0.1538461538    0.1250000000   -0.4736842105    0.0005060729
 1294   -0.1538461538    0.1250000000   -0.4210526316    0.0005060729
 1295   -0.1538461538    0.1250000000   -0.3684210526    0.0005060729
 1296   -0.1538461538    0.1250000000   -0.3157894737    0.0005060729
 1297   -0.1538461538    0.1250000000   -0.2631578947    0.0005060729
 1298   -0.1538461538    0.1250000000   -0.2105263158    0.0005060729
 1299   -0.1538461538    0.1250000000   -0.1578947368    0.0005060729
 1300   -0.1538461538    0.1250000000   -0.1052631579    0.0005060729
 1301   -0.1538461538    0.1250000000   -0.0526315789    0.0005060729
 1302   -0.1538461538    0.1250000000    0.0000000000    0.0005060729
 1303   -0.1538461538    0.1250000000    0.0526315789    0.0005060729
 1304   -0.1538461538    0.1250000000    0.1052631579    0.0005060729
 1305   -0.1538461538    0.1250000000    0.1578947368    0.0005060729
 1306   -0.1538461538    0.1250000000    0.2105263158    0.0005060729
 1307   -0.1538461538    0.1250000000    0.2631578947    0.0005060729
 1308   -0.1538461538    0.1250000000    0.3157894737    0.0005060729
 1309   -0.1538461538    0.1250000000    0.3684210526    0.0005060729
 1310   -0.1538461538    0.1250000000    0.4210526316    0.0005060729
 1311   -0.1538461538    0.1250000000    0.4736842105    0.0005060729
 1312   -0.1538461538    0.2500000000   -0.4736842105    0.0005060729
 1313   -0.1538461538    0.2500000000   -0.4210526316    0.0005060729
 1314   -0.1538461538    0.2500000000   -0.3684210526    0.0005060729
 1315   -0.1538461538    0.2500000000   -0.3157894737    0.0005060729
 1316   -0.1538461538    0.2500000000   -0.2631578947    0.0005060729
 1317   -0.1538461538    0.2500000000   -0.2105263158    0.0005060729
 1318   -0.1538461538    0.2500000000   -0.1578947368    0.0005060729
 1319   -0.1538461538    0.2500000000   -0.1052631579    0.0005060729
 1320   -0.1538461538    0.2500000000   -0.0526315789    0.0005060729
 1321   -0.1538461538    0.2500000000    0.0000000000    0.0005060729
 1322   -0.1538461538    0.2500000000    0.0526315789    0.0005060729
 1323   -0.1538461538    0.2500000000    0.1052631579    0.0005060729
 1324   -0.1538461538    0.2500000000    0.1578947368    0.0005060729
 1325   -0.1538461538    0.2500000000    0.2105263158    0.0005060729
 1326   -0.1538461538    0.2500000000    0.2631578947    0.0005060729
 1327   -0.1538461538    0.2500000000    0.3157894737    0.0005060729
 1328   -0.1538461538    0.2500000000    0.3684210526    0.0005060729
 1329   -0.1538461538    0.2500000000    0.4210526316    0.0005060729
 1330   -0.1538461538    0.2500000000    0.4736842105    0.0005060729
 1331   -0.1538461538    0.3750000000   -0.4736842105    0.0005060729
 1332   -0.1538461538    0.3750000000   -0.4210526316    0.0005060729
 1333   -0.1538461538    0.3750000000   -0.3684210526    0.0005060729
 1334   -0.1538461538    0.3750000000   -0.3157894737    0.0005060729
 1335   -0.1538461538    0.3750000000   -0.2631578947    0.0005060729
 1336   -0.1538461538    0.3750000000   -0.2105263158    0.0005060729
 1337   -0.1538461538    0.3750000000   -0.1578947368    0.0005060729
 1338   -0.1538461538    0.3750000000   -0.1052631579    0.0005060729
 1339   -0.1538461538    0.3750000000   -0.0526315789    0.0005060729
 1340   -0.1538461538    0.3750000000    0.0000000000    0.0005060729
 1341   -0.1538461538    0.3750000000    0.0526315789    0.0005060729
 1342   -0.1538461538    0.3750000000    0.1052631579    0.0005060729
 1343   -0.1538461538    0.3750000000    0.1578947368    0.0005060729
 1344   -0.1538461538    0.3750000000    0.2105263158    0.0005060729
 1345   -0.1538461538    0.3750000000    0.2631578947    0.0005060729
 1346   -0.1538461538    0.3750000000    0.3157894737    0.0005060729
 1347   -0.1538461538    0.3750000000    0.3684210526    0.0005060729
 1348   -0.1538461538    0.3750000000    0.4210526316    0.0005060729
 1349   -0.1538461538    0.3750000000    0.4736842105    0.0005060729
 1350   -0.1538461538    0.5000000000   -0.4736842105    0.0005060729
 1351   -0.1538461538    0.5000000000   -0.4210526316    0.0005060729
 1352   -0.1538461538    0.5000000000   -0.3684210526    0.0005060729
 1353   -0.1538461538    0.5000000000   -0.3157894737    0.0005060729
 1354   -0.1538461538    0.5000000000   -0.2631578947    0.0005060729
 1355   -0.1538461538    0.5000000000   -0.2105263158    0.0005060729
 1356   -0.1538461538    0.5000000000   -0.1578947368    0.0005060729
 1357   -0.1538461538    0.5000000000   -0.1052631579    0.0005060729
 1358   -0.1538461538    0.5000000000   -0.0526315789    0.0005060729
 1359   -0.1538461538    0.5000000000    0.0000000000    0.0005060729
 1360   -0.1538461538    0.5000000000    0.0526315789    0.0005060729
 1361   -0.1538461538    0.5000000000    0.1052631579    0.0005060729
 1362   -0.1538461538    0.5000000000    0.1578947368    0.0005060729
 1363   -0.1538461538    0.5000000000    0.2105263158    0.0005060729
 1364   -0.1538461538    0.5000000000    0.2631578947    0.0005060729
 1365   -0.1538461538    0.5000000000    0.3157894737    0.0005060729
 1366   -0.1538461538    0.5000000000    0.3684210526    0.0005060729
 1367   -0.1538461538    0.5000000000    0.4210526316    0.0005060729
 1368   -0.1538461538    0.5000000000    0.4736842105    0.0005060729
 1369   -0.1153846154   -0.3750000000   -0.4736842105    0.0005060729
 1370   -0.1153846154   -0.3750000000   -0.4210526316    0.0005060729
 1371   -0.1153846154   -0.3750000000   -0.3684210526    0.0005060729
 1372   -0.1153846154   -0.3750000000   -0.3157894737    0.0005060729
 1373   -0.1153846154   -0.3750000000   -0.2631578947    0.0005060729
 1374   -0.1153846154   -0.3750000000   -0.2105263158    0.0005060729
 1375   -0.1153846154   -0.3750000000   -0.1578947368    0.0005060729
 1376   -0.1153846154   -0.3750000000   -0.1052631579    0.0005060729
 1377   -0.1153846154   -0.3750000000   -0.0526315789    0.0005060729
 1378   -0.1153846154   -0.3750000000    0.0000000000    0.0005060729
 1379   -0.1153846154   -0.3750000000    0.0526315789    0.0005060729
 1380   -0.1153846154   -0.3750000000    0.1052631579    0.0005060729
 1381   -0.1153846154   -0.3750000000    0.1578947368    0.0005060729
 1382   -0.1153846154   -0.3750000000    0.2105263158    0.0005060729
 1383   -0.1153846154   -0.3750000000    0.2631578947    0.0005060729
 1384   -0.1153846154   -0.3750000000    0.3157894737    0.0005060729
 1385   -0.1153846154   -0.3750000000    0.3684210526    0.0005060729
 1386   -0.1153846154   -0.3750000000    0.4210526316    0.0005060729
 1387   -0.1153846154   -0.3750000000    0.4736842105    0.0005060729
 1388   -0.1153846154   -0.2500000000   -0.4736842105    0.0005060729
 1389   -0.1153846154   -0.2500000000   -0.4210526316    0.0005060729
 1390   -0.1153846154   -0.2500000000   -0.3684210526    0.0005060729
 1391   -0.1153846154   -0.2500000000   -0.3157894737    0.0005060729
 1392   -0.1153846154   -0.2500000000   -0.2631578947    0.0005060729
 1393   -0.1153846154   -0.2500000000   -0.2105263158    0.0005060729
 1394   -0.1153846154   -0.2500000000   -0.1578947368    0.0005060729
 1395   -0.1153846154   -0.2500000000   -0.1052631579    0.0005060729
 1396   -0.1153846154   -0.2500000000   -0.0526315789    0.0005060729
 1397   -0.1153846154   -0.2500000000    0.0000000000    0.0005060729
 1398   -0.1153846154   -0.2500000000    0.0526315789    0.0005060729
 1399   -0.1153846154   -0.2500000000    0.1052631579    0.0005060729
 1400   -0.1153846154   -0.2500000000    0.1578947368    0.0005060729
 1401   -0.1153846154   -0.2500000000    0.2105263158    0.0005060729
 1402   -0.1153846154   -0.2500000000    0.2631578947    0.0005060729
 1403   -0.1153846154   -0.2500000000    0.3157894737    0.0005060729
 1404   -0.1153846154   -0.2500000000    0.3684210526    0.0005060729
 1405   -0.1153846154   -0.2500000000    0.4210526316    0.0005060729
 1406   -0.1153846154   -0.2500000000    0.4736842105    0.0005060729
 1407   -0.1153846154   -0.1250000000   -0.4736842105    0.0005060729
 1408   -0.1153846154   -0.1250000000   -0.4210526316    0.0005060729
 1409   -0.1153846154   -0.1250000000   -0.3684210526    0.0005060729
 1410   -0.1153846154   -0.1250000000   -0.3157894737    0.0005060729
 1411   -0.1153846154   -0.1250000000   -0.2631578947    0.0005060729
 1412   -0.1153846154   -0.1250000000   -0.2105263158    0.0005060729
 1413   -0.1153846154   -0.1250000000   -0.1578947368    0.0005060729
 1414   -0.1153846154   -0.1250000000   -0.1052631579    0.0005060729
 1415   -0.1153846154   -0.1250000000   -0.0526315789    0.0005060729
 1416   -0.1153846154   -0.1250000000    0.0000000000    0.0005060729
 1417   -0.1153846154   -0.1250000000    0.0526315789    0.0005060729
 1418   -0.1153846154   -0.1250000000    0.1052631579    0.0005060729
 1419   -0.1153846154   -0.1250000000    0.1578947368    0.0005060729
 1420   -0.1153846154   -0.1250000000    0.2105263158    0.0005060729
 1421   -0.1153846154   -0.1250000000    0.2631578947    0.0005060729
 1422   -0.1153846154   -0.1250000000    0.3157894737    0.0005060729
 1423   -0.1153846154   -0.1250000000    0.3684210526    0.0005060729
 1424   -0.1153846154   -0.1250000000    0.4210526316    0.0005060729
 1425   -0.1153846154   -0.1250000000    0.4736842105    0.0005060729
 1426   -0.1153846154    0.0000000000   -0.4736842105    0.0005060729
 1427   -0.1153846154    0.0000000000   -0.4210526316    0.0005060729
 1428   -0.1153846154    0.0000000000   -0.3684210526    0.0005060729
 1429   -0.1153846154    0.0000000000   -0.3157894737    0.0005060729
 1430   -0.1153846154    0.0000000000   -0.2631578947    0.0005060729
 1431   -0.1153846154    0.0000000000   -0.2105263158    0.0005060729
 1432   -0.1153846154    0.0000000000   -0.1578947368    0.0005060729
 1433   -0.1153846154    0.0000000000   -0.1052631579    0.0005060729
 1434   -0.1153846154    0.0000000000   -0.0526315789    0.0005060729
 1435   -0.1153846154    0.0000000000    0.0000000000    0.0005060729
 1436   -0.1153846154    0.0000000000    0.0526315789    0.0005060729
 1437   -0.1153846154    0.0000000000    0.1052631579    0.0005060729
 1438   -0.1153846154    0.0000000000    0.1578947368    0.0005060729
 1439   -0.1153846154    0.0000000000    0.2105263158    0.0005060729
 1440   -0.1153846154    0.0000000000    0.2631578947    0.0005060729
 1441   -0.1153846154    0.0000000000    0.3157894737    0.0005060729
 1442   -0.1153846154    0.0000000000    0.3684210526    0.0005060729
 1443   -0.1153846154    0.0000000000    0.4210526316    0.0005060729
 1444   -0.1153846154    0.0000000000    0.4736842105    0.0005060729
 1445   -0.1153846154    0.1250000000   -0.4736842105    0.0005060729
 1446   -0.1153846154    0.1250000000   -0.4210526316    0.0005060729
 1447   -0.1153846154    0.1250000000   -0.3684210526    0.0005060729
 1448   -0.1153846154    0.1250000000   -0.3157894737    0.0005060729
 1449   -0.1153846154    0.1250000000   -0.2631578947    0.0005060729
 1450   -0.1153846154    0.1250000000   -0.2105263158    0.0005060729
 1451   -0.1153846154    0.1250000000   -0.1578947368    0.0005060729
 1452   -0.1153846154    0.1250000000   -0.1052631579    0.0005060729
 1453   -0.1153846154    0.1250000000   -0.0526315789    0.0005060729
 1454   -0.1153846154    0.1250000000    0.0000000000    0.0005060729
 1455   -0.1153846154    0.1250000000    0.0526315789    0.0005060729
 1456   -0.1153846154    0.1250000000    0.1052631579    0.0005060729
 1457   -0.1153846154    0.1250000000    0.1578947368    0.0005060729
 1458   -0.1153846154    0.1250000000    0.2105263158    0.0005060729
 1459   -0.1153846154    0.1250000000    0.2631578947    0.0005060729
 1460   -0.1153846154    0.1250000000    0.3157894737    0.0005060729
 1461   -0.1153846154    0.1250000000    0.3684210526    0.0005060729
 1462   -0.1153846154    0.1250000000    0.4210526316    0.0005060729
 1463   -0.1153846154    0.1250000000    0.4736842105    0.0005060729
 1464   -0.1153846154    0.2500000000   -0.4736842105    0.0005060729
 1465   -0.1153846154    0.2500000000   -0.4210526316    0.0005060729
 1466   -0.1153846154    0.2500000000   -0.3684210526    0.0005060729
 1467   -0.1153846154    0.2500000000   -0.3157894737    0.0005060729
 1468   -0.1153846154    0.2500000000   -0.2631578947    0.0005060729
 1469   -0.1153846154    0.2500000000   -0.2105263158    0.0005060729
 1470   -0.1153846154    0.2500000000   -0.1578947368    0.0005060729
 1471   -0.1153846154    0.2500000000   -0.1052631579    0.0005060729
 1472   -0.1153846154    0.2500000000   -0.0526315789    0.0005060729
 1473   -0.1153846154    0.2500000000    0.0000000000    0.0005060729
 1474   -0.1153846154    0.2500000000    0.0526315789    0.0005060729
 1475   -0.1153846154    0.2500000000    0.1052631579    0.0005060729
 1476   -0.1153846154    0.2500000000    0.1578947368    0.0005060729
 1477   -0.1153846154    0.2500000000    0.2105263158    0.0005060729
 1478   -0.1153846154    0.2500000000    0.2631578947    0.0005060729
 1479   -0.1153846154    0.2500000000    0.3157894737    0.0005060729
 1480   -0.1153846154    0.2500000000    0.3684210526    0.0005060729
 1481   -0.1153846154    0.2500000000    0.4210526316    0.0005060729
 1482   -0.1153846154    0.2500000000    0.4736842105    0.0005060729
 1483   -0.1153846154    0.3750000000   -0.4736842105    0.0005060729
 1484   -0.1153846154    0.3750000000   -0.4210526316    0.0005060729
 1485   -0.1153846154    0.3750000000   -0.3684210526    0.0005060729
 1486   -0.1153846154    0.3750000000   -0.3157894737    0.0005060729
 1487   -0.1153846154    0.3750000000   -0.2631578947    0.0005060729
 1488   -0.1153846154    0.3750000000   -0.2105263158    0.0005060729
 1489   -0.1153846154    0.3750000000   -0.1578947368    0.0005060729
 1490   -0.1153846154    0.3750000000   -0.1052631579    0.0005060729
 1491   -0.1153846154    0.3750000000   -0.0526315789    0.0005060729
 1492   -0.1153846154    0.3750000000    0.0000000000    0.0005060729
 1493   -0.1153846154    0.3750000000    0.0526315789    0.0005060729
 1494   -0.1153846154    0.3750000000    0.1052631579    0.0005060729
 1495   -0.1153846154    0.3750000000    0.1578947368    0.0005060729
 1496   -0.1153846154    0.3750000000    0.2105263158    0.0005060729
 1497   -0.1153846154    0.3750000000    0.2631578947    0.0005060729
 1498   -0.1153846154    0.3750000000    0.3157894737    0.0005060729
 1499   -0.1153846154    0.3750000000    0.3684210526    0.0005060729
 1500   -0.1153846154    0.3750000000    0.4210526316    0.0005060729
 1501   -0.1153846154    0.3750000000    0.4736842105    0.0005060729
 1502   -0.1153846154    0.5000000000   -0.4736842105    0.0005060729
 1503   -0.1153846154    0.5000000000   -0.4210526316    0.0005060729
 1504   -0.1153846154    0.5000000000   -0.3684210526    0.0005060729
 1505   -0.1153846154    0.5000000000   -0.3157894737    0.0005060729
 1506   -0.1153846154    0.5000000000   -0.2631578947    0.0005060729
 1507   -0.1153846154    0.5000000000   -0.2105263158    0.0005060729
 1508   -0.1153846154    0.5000000000   -0.1578947368    0.0005060729
 1509   -0.1153846154    0.5000000000   -0.1052631579    0.0005060729
 1510   -0.1153846154    0.5000000000   -0.0526315789    0.0005060729
 1511   -0.1153846154    0.5000000000    0.0000000000    0.0005060729
 1512   -0.1153846154    0.5000000000    0.0526315789    0.0005060729
 1513   -0.1153846154    0.5000000000    0.1052631579    0.0005060729
 1514   -0.1153846154    0.5000000000    0.1578947368    0.0005060729
 1515   -0.1153846154    0.5000000000    0.2105263158    0.0005060729
 1516   -0.1153846154    0.5000000000    0.2631578947    0.0005060729
 1517   -0.1153846154    0.5000000000    0.3157894737    0.0005060729
 1518   -0.1153846154    0.5000000000    0.3684210526    0.0005060729
 1519   -0.1153846154    0.5000000000    0.4210526316    0.0005060729
 1520   -0.1153846154    0.5000000000    0.4736842105    0.0005060729
 1521   -0.0769230769   -0.3750000000   -0.4736842105    0.0005060729
 1522   -0.0769230769   -0.3750000000   -0.4210526316    0.0005060729
 1523   -0.0769230769   -0.3750000000   -0.3684210526    0.0005060729
 1524   -0.0769230769   -0.3750000000   -0.3157894737    0.0005060729
 1525   -0.0769230769   -0.3750000000   -0.2631578947    0.0005060729
 1526   -0.0769230769   -0.3750000000   -0.2105263158    0.0005060729
 1527   -0.0769230769   -0.3750000000   -0.1578947368    0.0005060729
 1528   -0.0769230769   -0.3750000000   -0.1052631579    0.0005060729
 1529   -0.0769230769   -0.3750000000   -0.0526315789    0.0005060729
 1530   -0.0769230769   -0.3750000000    0.0000000000    0.0005060729
 1531   -0.0769230769   -0.3750000000    0.0526315789    0.0005060729
 1532   -0.0769230769   -0.3750000000    0.1052631579    0.0005060729
 1533   -0.0769230769   -0.3750000000    0.1578947368    0.0005060729
 1534   -0.0769230769   -0.3750000000    0.2105263158    0.0005060729
 1535   -0.0769230769   -0.3750000000    0.2631578947    0.0005060729
 1536   -0.0769230769   -0.3750000000    0.3157894737    0.0005060729
 1537   -0.0769230769   -0.3750000000    0.3684210526    0.0005060729
 1538   -0.0769230769   -0.3750000000    0.4210526316    0.0005060729
 1539   -0.0769230769   -0.3750000000    0.4736842105    0.0005060729
 1540   -0.0769230769   -0.2500000000   -0.4736842105    0.0005060729
 1541   -0.0769230769   -0.2500000000   -0.4210526316    0.0005060729
 1542   -0.0769230769   -0.2500000000   -0.3684210526    0.0005060729
 1543   -0.0769230769   -0.2500000000   -0.3157894737    0.0005060729
 1544   -0.0769230769   -0.2500000000   -0.2631578947    0.0005060729
 1545   -0.0769230769   -0.2500000000   -0.2105263158    0.0005060729
 1546   -0.0769230769   -0.2500000000   -0.1578947368    0.0005060729
 1547   -0.0769230769   -0.2500000000   -0.1052631579    0.0005060729
 1548   -0.0769230769   -0.2500000000   -0.0526315789    0.0005060729
 1549   -0.0769230769   -0.2500000000    0.0000000000    0.0005060729
 1550   -0.0769230769   -0.2500000000    0.0526315789    0.0005060729
 1551   -0.0769230769   -0.2500000000    0.1052631579    0.0005060729
 1552   -0.0769230769   -0.2500000000    0.1578947368    0.0005060729
 1553   -0.0769230769   -0.2500000000    0.2105263158    0.0005060729
 1554   -0.0769230769   -0.2500000000    0.2631578947    0.0005060729
 1555   -0.0769230769   -0.2500000000    0.3157894737    0.0005060729
 1556   -0.0769230769   -0.2500000000    0.3684210526    0.0005060729
 1557   -0.0769230769   -0.2500000000    0.4210526316    0.0005060729
 1558   -0.0769230769   -0.2500000000    0.4736842105    0.0005060729
 1559   -0.0769230769   -0.1250000000   -0.4736842105    0.0005060729
 1560   -0.0769230769   -0.1250000000   -0.4210526316    0.0005060729
 1561   -0.0769230769   -0.1250000000   -0.3684210526    0.0005060729
 1562   -0.0769230769   -0.1250000000   -0.3157894737    0.0005060729
 1563   -0.0769230769   -0.1250000000   -0.2631578947    0.0005060729
 1564   -0.0769230769   -0.1250000000   -0.2105263158    0.0005060729
 1565   -0.0769230769   -0.1250000000   -0.1578947368    0.0005060729
 1566   -0.0769230769   -0.1250000000   -0.1052631579    0.0005060729
 1567   -0.0769230769   -0.1250000000   -0.0526315789    0.0005060729
 1568   -0.0769230769   -0.1250000000    0.0000000000    0.0005060729
 1569   -0.0769230769   -0.1250000000    0.0526315789    0.0005060729
 1570   -0.0769230769   -0.1250000000    0.1052631579    0.0005060729
 1571   -0.0769230769   -0.1250000000    0.1578947368    0.0005060729
 1572   -0.0769230769   -0.1250000000    0.2105263158    0.0005060729
 1573   -0.0769230769   -0.1250000000    0.2631578947    0.0005060729
 1574   -0.0769230769   -0.1250000000    0.3157894737    0.0005060729
 1575   -0.0769230769   -0.1250000000    0.3684210526    0.0005060729
 1576   -0.0769230769   -0.1250000000    0.4210526316    0.0005060729
 1577   -0.0769230769   -0.1250000000    0.4736842105    0.0005060729
 1578   -0.0769230769    0.0000000000   -0.4736842105    0.0005060729
 1579   -0.0769230769    0.0000000000   -0.4210526316    0.0005060729
 1580   -0.0769230769    0.0000000000   -0.3684210526    0.0005060729
 1581   -0.0769230769    0.0000000000   -0.3157894737    0.0005060729
 1582   -0.0769230769    0.0000000000   -0.2631578947    0.0005060729
 1583   -0.0769230769    0.0000000000   -0.2105263158    0.0005060729
 1584   -0.0769230769    0.0000000000   -0.1578947368    0.0005060729
 1585   -0.0769230769    0.0000000000   -0.1052631579    0.0005060729
 1586   -0.0769230769    0.0000000000   -0.0526315789    0.0005060729
 1587   -0.0769230769    0.0000000000    0.0000000000    0.0005060729
 1588   -0.0769230769    0.0000000000    0.0526315789    0.0005060729
 1589   -0.0769230769    0.0000000000    0.1052631579    0.0005060729
 1590   -0.0769230769    0.0000000000    0.1578947368    0.0005060729
 1591   -0.0769230769    0.0000000000    0.2105263158    0.0005060729
 1592   -0.0769230769    0.0000000000    0.2631578947    0.0005060729
 1593   -0.0769230769    0.0000000000    0.3157894737    0.0005060729
 1594   -0.0769230769    0.0000000000    0.3684210526    0.0005060729
 1595   -0.0769230769    0.0000000000    0.4210526316    0.0005060729
 1596   -0.0769230769    0.0000000000    0.4736842105    0.0005060729
 1597   -0.0769230769    0.1250000000   -0.4736842105    0.0005060729
 1598   -0.0769230769    0.1250000000   -0.4210526316    0.0005060729
 1599   -0.0769230769    0.1250000000   -0.3684210526    0.0005060729
 1600   -0.0769230769    0.1250000000   -0.3157894737    0.0005060729
 1601   -0.0769230769    0.1250000000   -0.2631578947    0.0005060729
 1602   -0.0769230769    0.1250000000   -0.2105263158    0.0005060729
 1603   -0.0769230769    0.1250000000   -0.1578947368    0.0005060729
 1604   -0.0769230769    0.1250000000   -0.1052631579    0.0005060729
 1605   -0.0769230769    0.1250000000   -0.0526315789    0.0005060729
 1606   -0.0769230769    0.1250000000    0.0000000000    0.0005060729
 1607   -0.0769230769    0.1250000000    0.0526315789    0.0005060729
 1608   -0.0769230769    0.1250000000    0.1052631579    0.0005060729
 1609   -0.0769230769    0.1250000000    0.1578947368    0.0005060729
 1610   -0.0769230769    0.1250000000    0.2105263158    0.0005060729
 1611   -0.0769230769    0.1250000000    0.2631578947    0.0005060729
 1612   -0.0769230769    0.1250000000    0.3157894737    0.0005060729
 1613   -0.0769230769    0.1250000000    0.3684210526    0.0005060729
 1614   -0.0769230769    0.1250000000    0.4210526316    0.0005060729
 1615   -0.0769230769    0.1250000000    0.4736842105    0.0005060729
 1616   -0.0769230769    0.2500000000   -0.4736842105    0.0005060729
 1617   -0.0769230769    0.2500000000   -0.4210526316    0.0005060729
 1618   -0.0769230769    0.2500000000   -0.3684210526    0.0005060729
 1619   -0.0769230769    0.2500000000   -0.3157894737    0.0005060729
 1620   -0.0769230769    0.2500000000   -0.2631578947    0.0005060729
 1621   -0.0769230769    0.2500000000   -0.2105263158    0.0005060729
 1622   -0.0769230769    0.2500000000   -0.1578947368    0.0005060729
 1623   -0.0769230769    0.2500000000   -0.1052631579    0.0005060729
 1624   -0.0769230769    0.2500000000   -0.0526315789    0.0005060729
 1625   -0.0769230769    0.2500000000    0.0000000000    0.0005060729
 1626   -0.0769230769    0.2500000000    0.0526315789    0.0005060729
 1627   -0.0769230769    0.2500000000    0.1052631579    0.0005060729
 1628   -0.0769230769    0.2500000000    0.1578947368    0.0005060729
 1629   -0.0769230769    0.2500000000    0.2105263158    0.0005060729
 1630   -0.0769230769    0.2500000000    0.2631578947    0.0005060729
 1631   -0.0769230769    0.2500000000    0.3157894737    0.0005060729
 1632   -0.0769230769    0.2500000000    0.3684210526    0.0005060729
 1633   -0.0769230769    0.2500000000    0.4210526316    0.0005060729
 1634   -0.0769230769    0.2500000000    0.4736842105    0.0005060729
 1635   -0.0769230769    0.3750000000   -0.4736842105    0.0005060729
 1636   -0.0769230769    0.3750000000   -0.4210526316    0.0005060729
 1637   -0.0769230769    0.3750000000   -0.3684210526    0.0005060729
 1638   -0.0769230769    0.3750000000   -0.3157894737    0.0005060729
 1639   -0.0769230769    0.3750000000   -0.2631578947    0.0005060729
 1640   -0.0769230769    0.3750000000   -0.2105263158    0.0005060729
 1641   -0.0769230769    0.3750000000   -0.1578947368    0.0005060729
 1642   -0.0769230769    0.3750000000   -0.1052631579    0.0005060729
 1643   -0.0769230769    0.3750000000   -0.0526315789    0.0005060729
 1644   -0.0769230769    0.3750000000    0.0000000000    0.0005060729
 1645   -0.0769230769    0.3750000000    0.0526315789    0.0005060729
 1646   -0.0769230769    0.3750000000    0.1052631579    0.0005060729
 1647   -0.0769230769    0.3750000000    0.1578947368    0.0005060729
 1648   -0.0769230769    0.3750000000    0.2105263158    0.0005060729
 1649   -0.0769230769    0.3750000000    0.2631578947    0.0005060729
 1650   -0.0769230769    0.3750000000    0.3157894737    0.0005060729
 1651   -0.0769230769    0.3750000000    0.3684210526    0.0005060729
 1652   -0.0769230769    0.3750000000    0.4210526316    0.0005060729
 1653   -0.0769230769    0.3750000000    0.4736842105    0.0005060729
 1654   -0.0769230769    0.5000000000   -0.4736842105    0.0005060729
 1655   -0.0769230769    0.5000000000   -0.4210526316    0.0005060729
 1656   -0.0769230769    0.5000000000   -0.3684210526    0.0005060729
 1657   -0.0769230769    0.5000000000   -0.3157894737    0.0005060729
 1658   -0.0769230769    0.5000000000   -0.2631578947    0.0005060729
 1659   -0.0769230769    0.5000000000   -0.2105263158    0.0005060729
 1660   -0.0769230769    0.5000000000   -0.1578947368    0.0005060729
 1661   -0.0769230769    0.5000000000   -0.1052631579    0.0005060729
 1662   -0.0769230769    0.5000000000   -0.0526315789    0.0005060729
 1663   -0.0769230769    0.5000000000    0.0000000000    0.0005060729
 1664   -0.0769230769    0.5000000000    0.0526315789    0.0005060729
 1665   -0.0769230769    0.5000000000    0.1052631579    0.0005060729
 1666   -0.0769230769    0.5000000000    0.1578947368    0.0005060729
 1667   -0.0769230769    0.5000000000    0.2105263158    0.0005060729
 1668   -0.0769230769    0.5000000000    0.2631578947    0.0005060729
 1669   -0.0769230769    0.5000000000    0.3157894737    0.0005060729
 1670   -0.0769230769    0.5000000000    0.3684210526    0.0005060729
 1671   -0.0769230769    0.5000000000    0.4210526316    0.0005060729
 1672   -0.0769230769    0.5000000000    0.4736842105    0.0005060729
 1673   -0.0384615385   -0.3750000000   -0.4736842105    0.0005060729
 1674   -0.0384615385   -0.3750000000   -0.4210526316    0.0005060729
 1675   -0.0384615385   -0.3750000000   -0.3684210526    0.0005060729
 1676   -0.0384615385   -0.3750000000   -0.3157894737    0.0005060729
 1677   -0.0384615385   -0.3750000000   -0.2631578947    0.0005060729
 1678   -0.0384615385   -0.3750000000   -0.2105263158    0.0005060729
 1679   -0.0384615385   -0.3750000000   -0.1578947368    0.0005060729
 1680   -0.0384615385   -0.3750000000   -0.1052631579    0.0005060729
 1681   -0.0384615385   -0.3750000000   -0.0526315789    0.0005060729
 1682   -0.0384615385   -0.3750000000    0.0000000000    0.0005060729
 1683   -0.0384615385   -0.3750000000    0.0526315789    0.0005060729
 1684   -0.0384615385   -0.3750000000    0.1052631579    0.0005060729
 1685   -0.0384615385   -0.3750000000    0.1578947368    0.0005060729
 1686   -0.0384615385   -0.3750000000    0.2105263158    0.0005060729
 1687   -0.0384615385   -0.3750000000    0.2631578947    0.0005060729
 1688   -0.0384615385   -0.3750000000    0.3157894737    0.0005060729
 1689   -0.0384615385   -0.3750000000    0.3684210526    0.0005060729
 1690   -0.0384615385   -0.3750000000    0.4210526316    0.0005060729
 1691   -0.0384615385   -0.3750000000    0.4736842105    0.0005060729
 1692   -0.0384615385   -0.2500000000   -0.4736842105    0.0005060729
 1693   -0.0384615385   -0.2500000000   -0.4210526316    0.0005060729
 1694   -0.0384615385   -0.2500000000   -0.3684210526    0.0005060729
 1695   -0.0384615385   -0.2500000000   -0.3157894737    0.0005060729
 1696   -0.0384615385   -0.2500000000   -0.2631578947    0.0005060729
 1697   -0.0384615385   -0.2500000000   -0.2105263158    0.0005060729
 1698   -0.0384615385   -0.2500000000   -0.1578947368    0.0005060729
 1699   -0.0384615385   -0.2500000000   -0.1052631579    0.0005060729
 1700   -0.0384615385   -0.2500000000   -0.0526315789    0.0005060729
 1701   -0.0384615385   -0.2500000000    0.0000000000    0.0005060729
 1702   -0.0384615385   -0.2500000000    0.0526315789    0.0005060729
 1703   -0.0384615385   -0.2500000000    0.1052631579    0.0005060729
 1704   -0.0384615385   -0.2500000000    0.1578947368    0.0005060729
 1705   -0.0384615385   -0.2500000000    0.2105263158    0.0005060729
 1706   -0.0384615385   -0.2500000000    0.2631578947    0.0005060729
 1707   -0.0384615385   -0.2500000000    0.3157894737    0.0005060729
 1708   -0.0384615385   -0.2500000000    0.3684210526    0.0005060729
 1709   -0.0384615385   -0.2500000000    0.4210526316    0.0005060729
 1710   -0.0384615385   -0.2500000000    0.4736842105    0.0005060729
 1711   -0.0384615385   -0.1250000000   -0.4736842105    0.0005060729
 1712   -0.0384615385   -0.1250000000   -0.4210526316    0.0005060729
 1713   -0.0384615385   -0.1250000000   -0.3684210526    0.0005060729
 1714   -0.0384615385   -0.1250000000   -0.3157894737    0.0005060729
 1715   -0.0384615385   -0.1250000000   -0.2631578947    0.0005060729
 1716   -0.0384615385   -0.1250000000   -0.2105263158    0.0005060729
 1717   -0.0384615385   -0.1250000000   -0.1578947368    0.0005060729
 1718   -0.0384615385   -0.1250000000   -0.1052631579    0.0005060729
 1719   -0.0384615385   -0.1250000000   -0.0526315789    0.0005060729
 1720   -0.0384615385   -0.1250000000    0.0000000000    0.0005060729
 1721   -0.0384615385   -0.1250000000    0.0526315789    0.0005060729
 1722   -0.0384615385   -0.1250000000    0.1052631579    0.0005060729
 1723   -0.0384615385   -0.1250000000    0.1578947368    0.0005060729
 1724   -0.0384615385   -0.1250000000    0.2105263158    0.0005060729
 1725   -0.0384615385   -0.1250000000    0.2631578947    0.0005060729
 1726   -0.0384615385   -0.1250000000    0.3157894737    0.0005060729
 1727   -0.0384615385   -0.1250000000    0.3684210526    0.0005060729
 1728   -0.0384615385   -0.1250000000    0.4210526316    0.0005060729
 1729   -0.0384615385   -0.1250000000    0.4736842105    0.0005060729
 1730   -0.0384615385    0.0000000000   -0.4736842105    0.0005060729
 1731   -0.0384615385    0.0000000000   -0.4210526316    0.0005060729
 1732   -0.0384615385    0.0000000000   -0.3684210526    0.0005060729
 1733   -0.0384615385    0.0000000000   -0.3157894737    0.0005060729
 1734   -0.0384615385    0.0000000000   -0.2631578947    0.0005060729
 1735   -0.0384615385    0.0000000000   -0.2105263158    0.0005060729
 1736   -0.0384615385    0.0000000000   -0.1578947368    0.0005060729
 1737   -0.0384615385    0.0000000000   -0.1052631579    0.0005060729
 1738   -0.0384615385    0.0000000000   -0.0526315789    0.0005060729
 1739   -0.0384615385    0.0000000000    0.0000000000    0.0005060729
 1740   -0.0384615385    0.0000000000    0.0526315789    0.0005060729
 1741   -0.0384615385    0.0000000000    0.1052631579    0.0005060729
 1742   -0.0384615385    0.0000000000    0.1578947368    0.0005060729
 1743   -0.0384615385    0.0000000000    0.2105263158    0.0005060729
 1744   -0.0384615385    0.0000000000    0.2631578947    0.0005060729
 1745   -0.0384615385    0.0000000000    0.3157894737    0.0005060729
 1746   -0.0384615385    0.0000000000    0.3684210526    0.0005060729
 1747   -0.0384615385    0.0000000000    0.4210526316    0.0005060729
 1748   -0.0384615385    0.0000000000    0.4736842105    0.0005060729
 1749   -0.0384615385    0.1250000000   -0.4736842105    0.0005060729
 1750   -0.0384615385    0.1250000000   -0.4210526316    0.0005060729
 1751   -0.0384615385    0.1250000000   -0.3684210526    0.0005060729
 1752   -0.0384615385    0.1250000000   -0.3157894737    0.0005060729
 1753   -0.0384615385    0.1250000000   -0.2631578947    0.0005060729
 1754   -0.0384615385    0.1250000000   -0.2105263158    0.0005060729
 1755   -0.0384615385    0.1250000000   -0.1578947368    0.0005060729
 1756   -0.0384615385    0.1250000000   -0.1052631579    0.0005060729
 1757   -0.0384615385    0.1250000000   -0.0526315789    0.0005060729
 1758   -0.0384615385    0.1250000000    0.0000000000    0.0005060729
 1759   -0.0384615385    0.1250000000    0.0526315789    0.0005060729
 1760   -0.0384615385    0.1250000000    0.1052631579    0.0005060729
 1761   -0.0384615385    0.1250000000    0.1578947368    0.0005060729
 1762   -0.0384615385    0.1250000000    0.2105263158    0.0005060729
 1763   -0.0384615385    0.1250000000    0.2631578947    0.0005060729
 1764   -0.0384615385    0.1250000000    0.3157894737    0.0005060729
 1765   -0.0384615385    0.1250000000    0.3684210526    0.0005060729
 1766   -0.0384615385    0.1250000000    0.4210526316    0.0005060729
 1767   -0.0384615385    0.1250000000    0.4736842105    0.0005060729
 1768   -0.0384615385    0.2500000000   -0.4736842105    0.0005060729
 1769   -0.0384615385    0.2500000000   -0.4210526316    0.0005060729
 1770   -0.0384615385    0.2500000000   -0.3684210526    0.0005060729
 1771   -0.0384615385    0.2500000000   -0.3157894737    0.0005060729
 1772   -0.0384615385    0.2500000000   -0.2631578947    0.0005060729
 1773   -0.0384615385    0.2500000000   -0.2105263158    0.0005060729
 1774   -0.0384615385    0.2500000000   -0.1578947368    0.0005060729
 1775   -0.0384615385    0.2500000000   -0.1052631579    0.0005060729
 1776   -0.0384615385    0.2500000000   -0.0526315789    0.0005060729
 1777   -0.0384615385    0.2500000000    0.0000000000    0.0005060729
 1778   -0.0384615385    0.2500000000    0.0526315789    0.0005060729
 1779   -0.0384615385    0.2500000000    0.1052631579    0.0005060729
 1780   -0.0384615385    0.2500000000    0.1578947368    0.0005060729
 1781   -0.0384615385    0.2500000000    0.2105263158    0.0005060729
 1782   -0.0384615385    0.2500000000    0.2631578947    0.0005060729
 1783   -0.0384615385    0.2500000000    0.3157894737    0.0005060729
 1784   -0.0384615385    0.2500000000    0.3684210526    0.0005060729
 1785   -0.0384615385    0.2500000000    0.4210526316    0.0005060729
 1786   -0.0384615385    0.2500000000    0.4736842105    0.0005060729
 1787   -0.0384615385    0.3750000000   -0.4736842105    0.0005060729
 1788   -0.0384615385    0.3750000000   -0.4210526316    0.0005060729
 1789   -0.0384615385    0.3750000000   -0.3684210526    0.0005060729
 1790   -0.0384615385    0.3750000000   -0.3157894737    0.0005060729
 1791   -0.0384615385    0.3750000000   -0.2631578947    0.0005060729
 1792   -0.0384615385    0.3750000000   -0.2105263158    0.0005060729
 1793   -0.0384615385    0.3750000000   -0.1578947368    0.0005060729
 1794   -0.0384615385    0.3750000000   -0.1052631579    0.0005060729
 1795   -0.0384615385    0.3750000000   -0.0526315789    0.0005060729
 1796   -0.0384615385    0.3750000000    0.0000000000    0.0005060729
 1797   -0.0384615385    0.3750000000    0.0526315789    0.0005060729
 1798   -0.0384615385    0.3750000000    0.1052631579    0.0005060729
 1799   -0.0384615385    0.3750000000    0.1578947368    0.0005060729
 1800   -0.0384615385    0.3750000000    0.2105263158    0.0005060729
 1801   -0.0384615385    0.3750000000    0.2631578947    0.0005060729
 1802   -0.0384615385    0.3750000000    0.3157894737    0.0005060729
 1803   -0.0384615385    0.3750000000    0.3684210526    0.0005060729
 1804   -0.0384615385    0.3750000000    0.4210526316    0.0005060729
 1805   -0.0384615385    0.3750000000    0.4736842105    0.0005060729
 1806   -0.0384615385    0.5000000000   -0.4736842105    0.0005060729
 1807   -0.0384615385    0.5000000000   -0.4210526316    0.0005060729
 1808   -0.0384615385    0.5000000000   -0.3684210526    0.0005060729
 1809   -0.0384615385    0.5000000000   -0.3157894737    0.0005060729
 1810   -0.0384615385    0.5000000000   -0.2631578947    0.0005060729
 1811   -0.0384615385    0.5000000000   -0.2105263158    0.0005060729
 1812   -0.0384615385    0.5000000000   -0.1578947368    0.0005060729
 1813   -0.0384615385    0.5000000000   -0.1052631579    0.0005060729
 1814   -0.0384615385    0.5000000000   -0.0526315789    0.0005060729
 1815   -0.0384615385    0.5000000000    0.0000000000    0.0005060729
 1816   -0.0384615385    0.5000000000    0.0526315789    0.0005060729
 1817   -0.0384615385    0.5000000000    0.1052631579    0.0005060729
 1818   -0.0384615385    0.5000000000    0.1578947368    0.0005060729
 1819   -0.0384615385    0.5000000000    0.2105263158    0.0005060729
 1820   -0.0384615385    0.5000000000    0.2631578947    0.0005060729
 1821   -0.0384615385    0.5000000000    0.3157894737    0.0005060729
 1822   -0.0384615385    0.5000000000    0.3684210526    0.0005060729
 1823   -0.0384615385    0.5000000000    0.4210526316    0.0005060729
 1824   -0.0384615385    0.5000000000    0.4736842105    0.0005060729
 1825    0.0000000000   -0.3750000000   -0.4736842105    0.0005060729
 1826    0.0000000000   -0.3750000000   -0.4210526316    0.0005060729
 1827    0.0000000000   -0.3750000000   -0.3684210526    0.0005060729
 1828    0.0000000000   -0.3750000000   -0.3157894737    0.0005060729
 1829    0.0000000000   -0.3750000000   -0.2631578947    0.0005060729
 1830    0.0000000000   -0.3750000000   -0.2105263158    0.0005060729
 1831    0.0000000000   -0.3750000000   -0.1578947368    0.0005060729
 1832    0.0000000000   -0.3750000000   -0.1052631579    0.0005060729
 1833    0.0000000000   -0.3750000000   -0.0526315789    0.0005060729
 1834    0.0000000000   -0.3750000000    0.0000000000    0.0005060729
 1835    0.0000000000   -0.3750000000    0.0526315789    0.0005060729
 1836    0.0000000000   -0.3750000000    0.1052631579    0.0005060729
 1837    0.0000000000   -0.3750000000    0.1578947368    0.0005060729
 1838    0.0000000000   -0.3750000000    0.2105263158    0.0005060729
 1839    0.0000000000   -0.3750000000    0.2631578947    0.0005060729
 1840    0.0000000000   -0.3750000000    0.3157894737    0.0005060729
 1841    0.0000000000   -0.3750000000    0.3684210526    0.0005060729
 1842    0.0000000000   -0.3750000000    0.4210526316    0.0005060729
 1843    0.0000000000   -0.3750000000    0.4736842105    0.0005060729
 1844    0.0000000000   -0.2500000000   -0.4736842105    0.0005060729
 1845    0.0000000000   -0.2500000000   -0.4210526316    0.0005060729
 1846    0.0000000000   -0.2500000000   -0.3684210526    0.0005060729
 1847    0.0000000000   -0.2500000000   -0.3157894737    0.0005060729
 1848    0.0000000000   -0.2500000000   -0.2631578947    0.0005060729
 1849    0.0000000000   -0.2500000000   -0.2105263158    0.0005060729
 1850    0.0000000000   -0.2500000000   -0.1578947368    0.0005060729
 1851    0.0000000000   -0.2500000000   -0.1052631579    0.0005060729
 1852    0.0000000000   -0.2500000000   -0.0526315789    0.0005060729
 1853    0.0000000000   -0.2500000000    0.0000000000    0.0005060729
 1854    0.0000000000   -0.2500000000    0.0526315789    0.0005060729
 1855    0.0000000000   -0.2500000000    0.1052631579    0.0005060729
 1856    0.0000000000   -0.2500000000    0.1578947368    0.0005060729
 1857    0.0000000000   -0.2500000000    0.2105263158    0.0005060729
 1858    0.0000000000   -0.2500000000    0.2631578947    0.0005060729
 1859    0.0000000000   -0.2500000000    0.3157894737    0.0005060729
 1860    0.0000000000   -0.2500000000    0.3684210526    0.0005060729
 1861    0.0000000000   -0.2500000000    0.4210526316    0.0005060729
 1862    0.0000000000   -0.2500000000    0.4736842105    0.0005060729
 1863    0.0000000000   -0.1250000000   -0.4736842105    0.0005060729
 1864    0.0000000000   -0.1250000000   -0.4210526316    0.0005060729
 1865    0.0000000000   -0.1250000000   -0.3684210526    0.0005060729
 1866    0.0000000000   -0.1250000000   -0.3157894737    0.0005060729
 1867    0.0000000000   -0.1250000000   -0.2631578947    0.0005060729
 1868    0.0000000000   -0.1250000000   -0.2105263158    0.0005060729
 1869    0.0000000000   -0.1250000000   -0.1578947368    0.0005060729
 1870    0.0000000000   -0.1250000000   -0.1052631579    0.0005060729
 1871    0.0000000000   -0.1250000000   -0.0526315789    0.0005060729
 1872    0.0000000000   -0.1250000000    0.0000000000    0.0005060729
 1873    0.0000000000   -0.1250000000    0.0526315789    0.0005060729
 1874    0.0000000000   -0.1250000000    0.1052631579    0.0005060729
 1875    0.0000000000   -0.1250000000    0.1578947368    0.0005060729
 1876    0.0000000000   -0.1250000000    0.2105263158    0.0005060729
 1877    0.0000000000   -0.1250000000    0.2631578947    0.0005060729
 1878    0.0000000000   -0.1250000000    0.3157894737    0.0005060729
 1879    0.0000000000   -0.1250000000    0.3684210526    0.0005060729
 1880    0.0000000000   -0.1250000000    0.4210526316    0.0005060729
 1881    0.0000000000   -0.1250000000    0.4736842105    0.0005060729
 1882    0.0000000000    0.0000000000   -0.4736842105    0.0005060729
 1883    0.0000000000    0.0000000000   -0.4210526316    0.0005060729
 1884    0.0000000000    0.0000000000   -0.3684210526    0.0005060729
 1885    0.0000000000    0.0000000000   -0.3157894737    0.0005060729
 1886    0.0000000000    0.0000000000   -0.2631578947    0.0005060729
 1887    0.0000000000    0.0000000000   -0.2105263158    0.0005060729
 1888    0.0000000000    0.0000000000   -0.1578947368    0.0005060729
 1889    0.0000000000    0.0000000000   -0.1052631579    0.0005060729
 1890    0.0000000000    0.0000000000   -0.0526315789    0.0005060729
 1891    0.0000000000    0.0000000000    0.0000000000    0.0002530364
 1892    0.0000000000    0.5000000000   -0.4736842105    0.0005060729
 1893    0.0000000000    0.5000000000   -0.4210526316    0.0005060729
 1894    0.0000000000    0.5000000000   -0.3684210526    0.0005060729
 1895    0.0000000000    0.5000000000   -0.3157894737    0.0005060729
 1896    0.0000000000    0.5000000000   -0.2631578947    0.0005060729
 1897    0.0000000000    0.5000000000   -0.2105263158    0.0005060729
 1898    0.0000000000    0.5000000000   -0.1578947368    0.0005060729
 1899    0.0000000000    0.5000000000   -0.1052631579    0.0005060729
 1900    0.0000000000    0.5000000000   -0.0526315789    0.0005060729
 1901    0.0000000000    0.5000000000    0.0000000000    0.0002530364
 1902    0.5000000000   -0.3750000000   -0.4736842105    0.0005060729
 1903    0.5000000000   -0.3750000000   -0.4210526316    0.0005060729
 1904    0.5000000000   -0.3750000000   -0.3684210526    0.0005060729
 1905    0.5000000000   -0.3750000000   -0.3157894737    0.0005060729
 1906    0.5000000000   -0.3750000000   -0.2631578947    0.0005060729
 1907    0.5000000000   -0.3750000000   -0.2105263158    0.0005060729
 1908    0.5000000000   -0.3750000000   -0.1578947368    0.0005060729
 1909    0.5000000000   -0.3750000000   -0.1052631579    0.0005060729
 1910    0.5000000000   -0.3750000000   -0.0526315789    0.0005060729
 1911    0.5000000000   -0.3750000000    0.0000000000    0.0005060729
 1912    0.5000000000   -0.3750000000    0.0526315789    0.0005060729
 1913    0.5000000000   -0.3750000000    0.1052631579    0.0005060729
 1914    0.5000000000   -0.3750000000    0.1578947368    0.0005060729
 1915    0.5000000000   -0.3750000000    0.2105263158    0.0005060729
 1916    0.5000000000   -0.3750000000    0.2631578947    0.0005060729
 1917    0.5000000000   -0.3750000000    0.3157894737    0.0005060729
 1918    0.5000000000   -0.3750000000    0.3684210526    0.0005060729
 1919    0.5000000000   -0.3750000000    0.4210526316    0.0005060729
 1920    0.5000000000   -0.3750000000    0.4736842105    0.0005060729
 1921    0.5000000000   -0.2500000000   -0.4736842105    0.0005060729
 1922    0.5000000000   -0.2500000000   -0.4210526316    0.0005060729
 1923    0.5000000000   -0.2500000000   -0.3684210526    0.0005060729
 1924    0.5000000000   -0.2500000000   -0.3157894737    0.0005060729
 1925    0.5000000000   -0.2500000000   -0.2631578947    0.0005060729
 1926    0.5000000000   -0.2500000000   -0.2105263158    0.0005060729
 1927    0.5000000000   -0.2500000000   -0.1578947368    0.0005060729
 1928    0.5000000000   -0.2500000000   -0.1052631579    0.0005060729
 1929    0.5000000000   -0.2500000000   -0.0526315789    0.0005060729
 1930    0.5000000000   -0.2500000000    0.0000000000    0.0005060729
 1931    0.5000000000   -0.2500000000    0.0526315789    0.0005060729
 1932    0.5000000000   -0.2500000000    0.1052631579    0.0005060729
 1933    0.5000000000   -0.2500000000    0.1578947368    0.0005060729
 1934    0.5000000000   -0.2500000000    0.2105263158    0.0005060729
 1935    0.5000000000   -0.2500000000    0.2631578947    0.0005060729
 1936    0.5000000000   -0.2500000000    0.3157894737    0.0005060729
 1937    0.5000000000   -0.2500000000    0.3684210526    0.0005060729
 1938    0.5000000000   -0.2500000000    0.4210526316    0.0005060729
 1939    0.5000000000   -0.2500000000    0.4736842105    0.0005060729
 1940    0.5000000000   -0.1250000000   -0.4736842105    0.0005060729
 1941    0.5000000000   -0.1250000000   -0.4210526316    0.0005060729
 1942    0.5000000000   -0.1250000000   -0.3684210526    0.0005060729
 1943    0.5000000000   -0.1250000000   -0.3157894737    0.0005060729
 1944    0.5000000000   -0.1250000000   -0.2631578947    0.0005060729
 1945    0.5000000000   -0.1250000000   -0.2105263158    0.0005060729
 1946    0.5000000000   -0.1250000000   -0.1578947368    0.0005060729
 1947    0.5000000000   -0.1250000000   -0.1052631579    0.0005060729
 1948    0.5000000000   -0.1250000000   -0.0526315789    0.0005060729
 1949    0.5000000000   -0.1250000000    0.0000000000    0.0005060729
 1950    0.5000000000   -0.1250000000    0.0526315789    0.0005060729
 1951    0.5000000000   -0.1250000000    0.1052631579    0.0005060729
 1952    0.5000000000   -0.1250000000    0.1578947368    0.0005060729
 1953    0.5000000000   -0.1250000000    0.2105263158    0.0005060729
 1954    0.5000000000   -0.1250000000    0.2631578947    0.0005060729
 1955    0.5000000000   -0.1250000000    0.3157894737    0.0005060729
 1956    0.5000000000   -0.1250000000    0.3684210526    0.0005060729
 1957    0.5000000000   -0.1250000000    0.4210526316    0.0005060729
 1958    0.5000000000   -0.1250000000    0.4736842105    0.0005060729
 1959    0.5000000000    0.0000000000   -0.4736842105    0.0005060729
 1960    0.5000000000    0.0000000000   -0.4210526316    0.0005060729
 1961    0.5000000000    0.0000000000   -0.3684210526    0.0005060729
 1962    0.5000000000    0.0000000000   -0.3157894737    0.0005060729
 1963    0.5000000000    0.0000000000   -0.2631578947    0.0005060729
 1964    0.5000000000    0.0000000000   -0.2105263158    0.0005060729
 1965    0.5000000000    0.0000000000   -0.1578947368    0.0005060729
 1966    0.5000000000    0.0000000000   -0.1052631579    0.0005060729
 1967    0.5000000000    0.0000000000   -0.0526315789    0.0005060729
 1968    0.5000000000    0.0000000000    0.0000000000    0.0002530364
 1969    0.5000000000    0.5000000000   -0.4736842105    0.0005060729
 1970    0.5000000000    0.5000000000   -0.4210526316    0.0005060729
 1971    0.5000000000    0.5000000000   -0.3684210526    0.0005060729
 1972    0.5000000000    0.5000000000   -0.3157894737    0.0005060729
 1973    0.5000000000    0.5000000000   -0.2631578947    0.0005060729
 1974    0.5000000000    0.5000000000   -0.2105263158    0.0005060729
 1975    0.5000000000    0.5000000000   -0.1578947368    0.0005060729
 1976    0.5000000000    0.5000000000   -0.1052631579    0.0005060729
 1977    0.5000000000    0.5000000000   -0.0526315789    0.0005060729
 1978    0.5000000000    0.5000000000    0.0000000000    0.0002530364
================================================================================


============================ local K-points summary ============================
Number |               Cartesian coordinates              |       Weight
  1      0.4997554008      0.0000000000     -0.3421183282      0.0005060729
  2      0.4997554008      0.0000000000     -0.3041051806      0.0005060729
  3      0.4997554008      0.0000000000     -0.2660920331      0.0005060729
  4      0.4997554008      0.0000000000     -0.2280788855      0.0005060729
  5      0.4997554008      0.0000000000     -0.1900657379      0.0005060729
  6      0.4997554008      0.0000000000     -0.1520525903      0.0005060729
  7      0.4997554008      0.0000000000     -0.1140394427      0.0005060729
  8      0.4997554008      0.0000000000     -0.0760262952      0.0005060729
  9      0.4997554008      0.0000000000     -0.0380131476      0.0005060729
 10      0.4997554008      0.0000000000      0.0000000000      0.0002530364
 11      0.4997554008      0.1459335899     -0.3421183282      0.0005060729
 12      0.4997554008      0.1459335899     -0.3041051806      0.0005060729
 13      0.4997554008      0.1459335899     -0.2660920331      0.0005060729
 14      0.4997554008      0.1459335899     -0.2280788855      0.0005060729
 15      0.4997554008      0.1459335899     -0.1900657379      0.0005060729
 16      0.4997554008      0.1459335899     -0.1520525903      0.0005060729
 17      0.4997554008      0.1459335899     -0.1140394427      0.0005060729
 18      0.4997554008      0.1459335899     -0.0760262952      0.0005060729
 19      0.4997554008      0.1459335899     -0.0380131476      0.0005060729
 20      0.4997554008      0.1459335899      0.0000000000      0.0002530364
================================================================================

Complex-valued NGWFs will be used.
Non Gamma point calculation with KP method will be performed.
Cartesian coordinates of k-point are          0.50000         0.50000         0.50000

Determining parallel strategy ...... done
Calculating Ewald energy ...              -47.692924 Hartree
Basis initialisation ...
... done
Sparse matrix initialisation ...
 done
Fully random NGWF initialisation ...
WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
 done

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
Density renormalisation ...
Target Charge:    40.000000000000 ; Input Charge:    38.914261509155
Density kernel initialisation

Writing density kernel to file "P95.dkn" ... done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.609805023291E+03     3.7620E-03     3.0096E-03
    2         1.609802205021E+03     1.6829E-03     1.3464E-03    -2.8183E-03
    3         1.609801557260E+03     1.0107E-03     8.0858E-04    -6.4776E-04
    4         1.609801300556E+03     7.0239E-04     5.6191E-04    -2.5670E-04
    5         1.609801167998E+03     5.2960E-04     4.2368E-04    -1.3256E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.60980116799797E+03  Eh
     Estimated bandgap           =   7.6563E-02  Eh
     RMS occupancy error         =   1.7877E-08
     [H,K] commutator            =   4.2368E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  001 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.5887E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       9.85177976655196E+02 Eh
   Predicted gain in energy  =      -6.24623191342778E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         8.576204686403E+02     1.3461E-01     1.0769E-01
    2         8.584989079234E+02     2.6505E-01     2.1204E-01     8.7844E-01
    3         8.614623358549E+02     4.9569E-01     3.9656E-01     2.9634E+00
    4         8.678696506511E+02     7.8549E-01     6.2840E-01     6.4073E+00
    5         8.610391195799E+02     4.7552E-01     3.8042E-01    -6.8305E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   8.61039119579929E+02  Eh
     Estimated bandgap           =   1.1285E+01  Eh
     RMS occupancy error         =   5.2579E-07
     [H,K] commutator            =   3.8042E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  002 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.4623E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       3.35041876344046E+02 Eh
   Predicted gain in energy  =      -5.25997243235883E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         3.068929781324E+02     3.5142E-01     2.8114E-01
    2         3.180224305940E+02     1.0085E+00     8.0681E-01     1.1129E+01
    3         3.197456293053E+02     1.0742E+00     8.5933E-01     1.7232E+00
    4         3.144545339821E+02     8.5655E-01     6.8525E-01    -5.2911E+00
    5         3.062673077509E+02     2.6844E-01     2.1475E-01    -8.1872E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   3.06267307750857E+02  Eh
     Estimated bandgap           =   1.8225E+01  Eh
     RMS occupancy error         =   2.0500E-06
     [H,K] commutator            =   2.1475E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  003 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2794E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       1.46150828446605E+02 Eh
   Predicted gain in energy  =      -1.60116479304251E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.251760856753E+02     1.3463E-01     1.0771E-01
    2         1.264133739287E+02     3.1677E-01     2.5342E-01     1.2373E+00
    3         1.319725941279E+02     6.8023E-01     5.4419E-01     5.5592E+00
    4         1.296125727050E+02     5.5855E-01     4.4684E-01    -2.3600E+00
    5         1.253260735520E+02     1.6556E-01     1.3246E-01    -4.2865E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.25326073551967E+02  Eh
     Estimated bandgap           =   1.4343E+01  Eh
     RMS occupancy error         =   5.6974E-05
     [H,K] commutator            =   1.3246E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  004 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2568E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       4.66545563265847E+01 Eh
   Predicted gain in energy  =      -7.86715172253820E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         3.418595360389E+01     8.1648E-02     6.5318E-02
    2         3.416445372062E+01     7.7245E-02     6.1796E-02    -2.1500E-02
    3         3.413565716983E+01     6.8339E-02     5.4671E-02    -2.8797E-02
    4         3.413307233730E+01     6.9318E-02     5.5454E-02    -2.5848E-03
    5         3.416217078042E+01     7.4855E-02     5.9884E-02     2.9098E-02
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   3.41621707804207E+01  Eh
     Estimated bandgap           =   8.0155E+00  Eh
     RMS occupancy error         =   6.7359E-08
     [H,K] commutator            =   5.9884E-02
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  005 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.3885E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -2.90936167951526E+01 Eh
   Predicted gain in energy  =      -6.32557875755733E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -3.141067837204E+01     5.9723E-02     4.7782E-02
    2        -3.162984915854E+01     1.3233E-02     1.0586E-02    -2.1917E-01
    3        -3.164178545477E+01     2.2447E-03     1.7958E-03    -1.1936E-02
    4        -3.164211122080E+01     3.7607E-04     3.0085E-04    -3.2577E-04
    5        -3.164212034314E+01     6.2943E-05     5.0355E-05    -9.1223E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -3.16421203431440E+01  Eh
     Estimated bandgap           =   3.0056E+00  Eh
     RMS occupancy error         =   3.9362E-12
     [H,K] commutator            =   5.0355E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  006 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.4864E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -5.25328002709301E+01 Eh
   Predicted gain in energy  =      -2.08906799277861E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -5.307284243320E+01     4.8589E-02     3.8873E-02
    2        -5.336510202012E+01     8.5637E-03     6.8509E-03    -2.9226E-01
    3        -5.337469180506E+01     1.8962E-03     1.5169E-03    -9.5898E-03
    4        -5.337515527761E+01     4.5141E-04     3.6113E-04    -4.6347E-04
    5        -5.337518129669E+01     1.1187E-04     8.9497E-05    -2.6019E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -5.33751812966859E+01  Eh
     Estimated bandgap           =   1.2452E+00  Eh
     RMS occupancy error         =   2.0200E-10
     [H,K] commutator            =   8.9497E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  007 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.4019E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.23494622963533E+01 Eh
   Predicted gain in energy  =      -8.97428099966736E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.337717833498E+01     3.7816E-02     3.0253E-02
    2        -6.363501565524E+01     8.7689E-03     7.0151E-03    -2.5784E-01
    3        -6.365007721326E+01     2.5843E-03     2.0675E-03    -1.5062E-02
    4        -6.365138032503E+01     8.3030E-04     6.6424E-04    -1.3031E-03
    5        -6.365151308462E+01     2.7698E-04     2.2158E-04    -1.3276E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.36515130846249E+01  Eh
     Estimated bandgap           =   6.6359E-01  Eh
     RMS occupancy error         =   9.7210E-09
     [H,K] commutator            =   2.2158E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  008 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.5990E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.85210357550672E+01 Eh
   Predicted gain in energy  =      -4.86952267044237E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.893347242476E+01     3.0420E-02     2.4336E-02
    2        -6.915071001604E+01     8.4554E-03     6.7643E-03    -2.1724E-01
    3        -6.916941300723E+01     3.0080E-03     2.4064E-03    -1.8703E-02
    4        -6.917179586566E+01     1.1650E-03     9.3198E-04    -2.3829E-03
    5        -6.917214759176E+01     4.7036E-04     3.7629E-04    -3.5173E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.91721475917581E+01  Eh
     Estimated bandgap           =   3.8020E-01  Eh
     RMS occupancy error         =   1.3729E-07
     [H,K] commutator            =   3.7629E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  009 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.1948E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.19208430747497E+01 Eh
   Predicted gain in energy  =      -2.74869548299158E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.190213368612E+01     2.2106E-02     1.7685E-02
    2        -7.204091476747E+01     6.8930E-03     5.5144E-03    -1.3878E-01
    3        -7.205562464232E+01     2.6964E-03     2.1571E-03    -1.4710E-02
    4        -7.205789134723E+01     1.1345E-03     9.0763E-04    -2.2667E-03
    5        -7.205829152355E+01     5.0070E-04     4.0056E-04    -4.0018E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.20582915235492E+01  Eh
     Estimated bandgap           =   2.7047E-01  Eh
     RMS occupancy error         =   2.8611E-12
     [H,K] commutator            =   4.0056E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  010 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0239E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.41939322736993E+01 Eh
   Predicted gain in energy  =      -2.13564075015016E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.419535626815E+01     2.2141E-02     1.7713E-02
    2        -7.436691325382E+01     7.4558E-03     5.9646E-03    -1.7156E-01
    3        -7.438885123590E+01     3.1993E-03     2.5594E-03    -2.1938E-02
    4        -7.439300720638E+01     1.5035E-03     1.2028E-03    -4.1560E-03
    5        -7.439391774497E+01     7.4833E-04     5.9866E-04    -9.1054E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.43939177449689E+01  Eh
     Estimated bandgap           =   1.9124E-01  Eh
     RMS occupancy error         =   1.5972E-10
     [H,K] commutator            =   5.9866E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  011 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.0685E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.54244268758721E+01 Eh
   Predicted gain in energy  =      -1.03050913090320E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.538902997880E+01     1.1753E-02     9.4027E-03
    2        -7.544963689712E+01     4.5071E-03     3.6057E-03    -6.0607E-02
    3        -7.545905568959E+01     2.2006E-03     1.7605E-03    -9.4188E-03
    4        -7.546131223239E+01     1.1555E-03     9.2441E-04    -2.2565E-03
    5        -7.546194346102E+01     6.4112E-04     5.1289E-04    -6.3123E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.54619434610167E+01  Eh
     Estimated bandgap           =   1.8375E-01  Eh
     RMS occupancy error         =   2.3803E-10
     [H,K] commutator            =   5.1289E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  012 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.3012E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.60755725393220E+01 Eh
   Predicted gain in energy  =      -6.13629078305379E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.601391248028E+01     9.7721E-03     7.8177E-03
    2        -7.606414062649E+01     4.0431E-03     3.2345E-03    -5.0228E-02
    3        -7.607286624667E+01     2.1669E-03     1.7335E-03    -8.7256E-03
    4        -7.607536057196E+01     1.2439E-03     9.9510E-04    -2.4943E-03
    5        -7.607621332890E+01     7.4231E-04     5.9385E-04    -8.5276E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.60762133288996E+01  Eh
     Estimated bandgap           =   1.7810E-01  Eh
     RMS occupancy error         =   6.0040E-09
     [H,K] commutator            =   5.9385E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  013 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.6206E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.63722344998155E+01 Eh
   Predicted gain in energy  =      -2.96021170915935E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.637184328129E+01     3.4486E-03     2.7589E-03
    2        -7.637854320627E+01     1.7287E-03     1.3830E-03    -6.6999E-03
    3        -7.638025608169E+01     1.1374E-03     9.0991E-04    -1.7129E-03
    4        -7.638095105721E+01     6.9095E-04     5.5276E-04    -6.9498E-04
    5        -7.638121207846E+01     4.2541E-04     3.4033E-04    -2.6102E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.63812120784618E+01  Eh
     Estimated bandgap           =   1.7789E-01  Eh
     RMS occupancy error         =   1.7170E-09
     [H,K] commutator            =   3.4033E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  014 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.4457E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.66327591948974E+01 Eh
   Predicted gain in energy  =      -2.51547116435603E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.662941123264E+01     6.0920E-03     4.8736E-03
    2        -7.665382801167E+01     2.8021E-03     2.2416E-03    -2.4417E-02
    3        -7.665893824801E+01     1.6570E-03     1.3256E-03    -5.1102E-03
    4        -7.666062843325E+01     1.0432E-03     8.3459E-04    -1.6902E-03
    5        -7.666132010009E+01     6.5936E-04     5.2748E-04    -6.9167E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.66613201000925E+01  Eh
     Estimated bandgap           =   1.7461E-01  Eh
     RMS occupancy error         =   1.2464E-08
     [H,K] commutator            =   5.2748E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  015 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.2749E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.68834761935226E+01 Eh
   Predicted gain in energy  =      -2.22156093430172E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.685909420158E+01     5.8567E-03     4.6854E-03
    2        -7.688440905120E+01     2.5304E-03     2.0243E-03    -2.5315E-02
    3        -7.688930147385E+01     1.5924E-03     1.2739E-03    -4.8924E-03
    4        -7.689085581467E+01     1.0823E-03     8.6582E-04    -1.5543E-03
    5        -7.689161478857E+01     6.7024E-04     5.3619E-04    -7.5897E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.68916147885667E+01  Eh
     Estimated bandgap           =   1.7256E-01  Eh
     RMS occupancy error         =   3.7281E-08
     [H,K] commutator            =   5.3619E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  016 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.6904E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70372582593553E+01 Eh
   Predicted gain in energy  =      -1.45643470788613E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.699589488061E+01     4.1609E-03     3.3287E-03
    2        -7.700945499926E+01     2.0850E-03     1.6680E-03    -1.3560E-02
    3        -7.701242919108E+01     1.4431E-03     1.1545E-03    -2.9742E-03
    4        -7.701377850885E+01     8.9736E-04     7.1789E-04    -1.3493E-03
    5        -7.701439417479E+01     6.2166E-04     4.9733E-04    -6.1567E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70143941747854E+01  Eh
     Estimated bandgap           =   1.6785E-01  Eh
     RMS occupancy error         =   6.3436E-08
     [H,K] commutator            =   4.9733E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  017 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3000E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70956026269732E+01 Eh
   Predicted gain in energy  =      -8.12084521878376E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.709557004080E+01     1.3290E-03     1.0632E-03
    2        -7.709691750420E+01     8.2914E-04     6.6331E-04    -1.3475E-03
    3        -7.709737027880E+01     6.9301E-04     5.5441E-04    -4.5277E-04
    4        -7.709770623889E+01     4.8624E-04     3.8899E-04    -3.3596E-04
    5        -7.709787607834E+01     3.4729E-04     2.7783E-04    -1.6984E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70978760783422E+01  Eh
     Estimated bandgap           =   1.6691E-01  Eh
     RMS occupancy error         =   3.3711E-08
     [H,K] commutator            =   2.7783E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  018 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.7227E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71538341398763E+01 Eh
   Predicted gain in energy  =      -5.59580615341275E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.715350848524E+01     1.7528E-03     1.4022E-03
    2        -7.715594343568E+01     8.9769E-04     7.1815E-04    -2.4350E-03
    3        -7.715655067694E+01     6.5660E-04     5.2528E-04    -6.0724E-04
    4        -7.715683436046E+01     4.5962E-04     3.6769E-04    -2.8368E-04
    5        -7.715696755702E+01     3.4237E-04     2.7390E-04    -1.3320E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71569675570206E+01  Eh
     Estimated bandgap           =   1.6445E-01  Eh
     RMS occupancy error         =   2.0827E-08
     [H,K] commutator            =   2.7390E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  019 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.3931E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71936130428243E+01 Eh
   Predicted gain in energy  =      -3.66454858037173E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.719253935863E+01     1.6301E-03     1.3041E-03
    2        -7.719494691235E+01     7.6139E-04     6.0911E-04    -2.4076E-03
    3        -7.719550144550E+01     5.5323E-04     4.4258E-04    -5.5453E-04
    4        -7.719568850761E+01     3.8009E-04     3.0407E-04    -1.8706E-04
    5        -7.719580070810E+01     2.6120E-04     2.0896E-04    -1.1220E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71958007081003E+01  Eh
     Estimated bandgap           =   1.6202E-01  Eh
     RMS occupancy error         =   5.4590E-08
     [H,K] commutator            =   2.0896E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  020 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.1402E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72203262318880E+01 Eh
   Predicted gain in energy  =      -2.45255237877160E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.721839683645E+01     1.3972E-03     1.1178E-03
    2        -7.722021978542E+01     6.6468E-04     5.3175E-04    -1.8229E-03
    3        -7.722051002848E+01     5.8999E-04     4.7199E-04    -2.9024E-04
    4        -7.722068858762E+01     3.4401E-04     2.7521E-04    -1.7856E-04
    5        -7.722077392789E+01     2.7560E-04     2.2048E-04    -8.5340E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72207739278879E+01  Eh
     Estimated bandgap           =   1.5818E-01  Eh
     RMS occupancy error         =   6.2999E-09
     [H,K] commutator            =   2.2048E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  021 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  9.7548E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72335772485067E+01 Eh
   Predicted gain in energy  =      -1.28033206187723E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.723357757898E+01     3.7911E-04     3.0329E-04
    2        -7.723368793534E+01     2.6137E-04     2.0910E-04    -1.1036E-04
    3        -7.723373309473E+01     2.2103E-04     1.7682E-04    -4.5159E-05
    4        -7.723378943328E+01     1.7179E-04     1.3744E-04    -5.6339E-05
    5        -7.723381167580E+01     1.1403E-04     9.1225E-05    -2.2243E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72338116758045E+01  Eh
     Estimated bandgap           =   1.5674E-01  Eh
     RMS occupancy error         =   1.3696E-08
     [H,K] commutator            =   9.1225E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  022 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.0368E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72430596067162E+01 Eh
   Predicted gain in energy  =      -9.24793091161291E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.724304875363E+01     5.5755E-04     4.4604E-04
    2        -7.724328858647E+01     3.3251E-04     2.6601E-04    -2.3983E-04
    3        -7.724333798159E+01     2.2520E-04     1.8016E-04    -4.9395E-05
    4        -7.724336923735E+01     1.7016E-04     1.3613E-04    -3.1256E-05
    5        -7.724338898829E+01     1.1481E-04     9.1845E-05    -1.9751E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72433889882858E+01  Eh
     Estimated bandgap           =   1.5390E-01  Eh
     RMS occupancy error         =   1.3064E-09
     [H,K] commutator            =   9.1845E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  023 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.9636E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72499349073457E+01 Eh
   Predicted gain in energy  =      -6.54591905994550E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.724987692373E+01     5.7352E-04     4.5881E-04
    2        -7.725017936857E+01     3.2895E-04     2.6316E-04    -3.0244E-04
    3        -7.725022758019E+01     2.6204E-04     2.0963E-04    -4.8212E-05
    4        -7.725027470408E+01     1.6103E-04     1.2882E-04    -4.7124E-05
    5        -7.725029379808E+01     1.2264E-04     9.8112E-05    -1.9094E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72502937980800E+01  Eh
     Estimated bandgap           =   1.5059E-01  Eh
     RMS occupancy error         =   1.2269E-10
     [H,K] commutator            =   9.8112E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  024 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.6476E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72543747677101E+01 Eh
   Predicted gain in energy  =      -4.08096963006699E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725427435607E+01     4.8047E-04     3.8438E-04
    2        -7.725449975705E+01     2.4505E-04     1.9604E-04    -2.2540E-04
    3        -7.725453943123E+01     2.2426E-04     1.7941E-04    -3.9674E-05
    4        -7.725456750241E+01     1.6476E-04     1.3181E-04    -2.8071E-05
    5        -7.725458301899E+01     1.1882E-04     9.5059E-05    -1.5517E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72545830189869E+01  Eh
     Estimated bandgap           =   1.4736E-01  Eh
     RMS occupancy error         =   2.2851E-09
     [H,K] commutator            =   9.5059E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  025 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.9169E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72568282707420E+01 Eh
   Predicted gain in energy  =      -2.24525175515566E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725682830431E+01     1.4800E-04     1.1840E-04
    2        -7.725684517058E+01     1.0620E-04     8.4959E-05    -1.6866E-05
    3        -7.725685412177E+01     1.0339E-04     8.2709E-05    -8.9512E-06
    4        -7.725686857342E+01     1.1177E-04     8.9412E-05    -1.4452E-05
    5        -7.725687450580E+01     7.3092E-05     5.8474E-05    -5.9324E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72568745058009E+01  Eh
     Estimated bandgap           =   1.4645E-01  Eh
     RMS occupancy error         =   2.6851E-08
     [H,K] commutator            =   5.8474E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  026 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.8361E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72584761280617E+01 Eh
   Predicted gain in energy  =      -1.60162226075045E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725847543238E+01     1.9486E-04     1.5589E-04
    2        -7.725850678257E+01     1.2705E-04     1.0164E-04    -3.1350E-05
    3        -7.725851424049E+01     9.3057E-05     7.4445E-05    -7.4579E-06
    4        -7.725851924588E+01     7.3550E-05     5.8840E-05    -5.0054E-06
    5        -7.725852344199E+01     5.6708E-05     4.5366E-05    -4.1961E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72585234419884E+01  Eh
     Estimated bandgap           =   1.4482E-01  Eh
     RMS occupancy error         =   1.4846E-10
     [H,K] commutator            =   4.5366E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  027 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3645E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72595461326223E+01 Eh
   Predicted gain in energy  =      -1.02269063394544E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725954317114E+01     2.0148E-04     1.6119E-04
    2        -7.725958209889E+01     1.4908E-04     1.1927E-04    -3.8928E-05
    3        -7.725958958137E+01     9.2570E-05     7.4056E-05    -7.4825E-06
    4        -7.725959825463E+01     7.3384E-05     5.8707E-05    -8.6733E-06
    5        -7.725960177171E+01     5.4291E-05     4.3433E-05    -3.5171E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72596017717073E+01  Eh
     Estimated bandgap           =   1.4311E-01  Eh
     RMS occupancy error         =   3.6710E-11
     [H,K] commutator            =   4.3433E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  028 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.9014E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72602677140052E+01 Eh
   Predicted gain in energy  =      -6.65942297871425E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726026197423E+01     1.8057E-04     1.4445E-04
    2        -7.726029504742E+01     1.1062E-04     8.8497E-05    -3.3073E-05
    3        -7.726030176695E+01     8.2650E-05     6.6120E-05    -6.7195E-06
    4        -7.726030726095E+01     8.0581E-05     6.4465E-05    -5.4940E-06
    5        -7.726030990294E+01     4.7327E-05     3.7861E-05    -2.6420E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72603099029377E+01  Eh
     Estimated bandgap           =   1.4152E-01  Eh
     RMS occupancy error         =   9.8556E-08
     [H,K] commutator            =   3.7861E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  029 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.7926E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72607012934552E+01 Eh
   Predicted gain in energy  =      -3.91390517464174E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726070132747E+01     5.1608E-05     4.1287E-05
    2        -7.726070341198E+01     3.7868E-05     3.0294E-05    -2.0845E-06
    3        -7.726070459157E+01     3.7721E-05     3.0177E-05    -1.1796E-06
    4        -7.726070620837E+01     4.3183E-05     3.4547E-05    -1.6168E-06
    5        -7.726070698476E+01     2.5345E-05     2.0276E-05    -7.7639E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72607069847577E+01  Eh
     Estimated bandgap           =   1.4116E-01  Eh
     RMS occupancy error         =   6.1267E-12
     [H,K] commutator            =   2.0276E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  030 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2370E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72609929609999E+01 Eh
   Predicted gain in energy  =      -2.85976242167862E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726099295263E+01     7.1360E-05     5.7088E-05
    2        -7.726099697720E+01     6.4536E-05     5.1629E-05    -4.0246E-06
    3        -7.726099846123E+01     3.3837E-05     2.7069E-05    -1.4840E-06
    4        -7.726099918665E+01     2.4183E-05     1.9346E-05    -7.2542E-07
    5        -7.726099968799E+01     1.9085E-05     1.5268E-05    -5.0134E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72609996879873E+01  Eh
     Estimated bandgap           =   1.4043E-01  Eh
     RMS occupancy error         =   2.8874E-09
     [H,K] commutator            =   1.5268E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  031 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0483E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72612090210990E+01 Eh
   Predicted gain in energy  =      -2.09333111754972E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726120882965E+01     8.7984E-05     7.0387E-05
    2        -7.726121563748E+01     9.0534E-05     7.2427E-05    -6.8078E-06
    3        -7.726121827143E+01     3.8603E-05     3.0883E-05    -2.6340E-06
    4        -7.726121999374E+01     3.5747E-05     2.8597E-05    -1.7223E-06
    5        -7.726122077412E+01     2.2861E-05     1.8289E-05    -7.8038E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72612207741158E+01  Eh
     Estimated bandgap           =   1.3952E-01  Eh
     RMS occupancy error         =   9.8180E-09
     [H,K] commutator            =   1.8289E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  032 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  8.3241E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72613582224086E+01 Eh
   Predicted gain in energy  =      -1.37448292861109E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726135774602E+01     7.9063E-05     6.3250E-05
    2        -7.726136433701E+01     6.8251E-05     5.4601E-05    -6.5910E-06
    3        -7.726136586646E+01     4.0529E-05     3.2424E-05    -1.5294E-06
    4        -7.726136734947E+01     4.0170E-05     3.2136E-05    -1.4830E-06
    5        -7.726136835993E+01     2.2596E-05     1.8076E-05    -1.0105E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72613683599329E+01  Eh
     Estimated bandgap           =   1.3865E-01  Eh
     RMS occupancy error         =   2.1510E-08
     [H,K] commutator            =   1.8076E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  033 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.5672E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72614510762892E+01 Eh
   Predicted gain in energy  =      -8.27163563457134E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726145107778E+01     2.4861E-05     1.9888E-05
    2        -7.726145160244E+01     2.0638E-05     1.6511E-05    -5.2466E-07
    3        -7.726145190711E+01     2.1239E-05     1.6991E-05    -3.0467E-07
    4        -7.726145225638E+01     2.6024E-05     2.0819E-05    -3.4927E-07
    5        -7.726145269467E+01     1.4793E-05     1.1835E-05    -4.3828E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72614526946683E+01  Eh
     Estimated bandgap           =   1.3843E-01  Eh
     RMS occupancy error         =   5.3363E-08
     [H,K] commutator            =   1.1835E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  034 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.4461E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72615140975420E+01 Eh
   Predicted gain in energy  =      -6.14028736976024E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726151409511E+01     3.2996E-05     2.6397E-05
    2        -7.726151513248E+01     2.9150E-05     2.3320E-05    -1.0374E-06
    3        -7.726151549626E+01     1.9389E-05     1.5511E-05    -3.6378E-07
    4        -7.726151567162E+01     1.3659E-05     1.0927E-05    -1.7536E-07
    5        -7.726151584211E+01     1.2030E-05     9.6238E-06    -1.7049E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72615158421116E+01  Eh
     Estimated bandgap           =   1.3799E-01  Eh
     RMS occupancy error         =   2.3001E-09
     [H,K] commutator            =   9.6238E-06
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  035 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.6162E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72615568577268E+01 Eh
   Predicted gain in energy  =      -4.10156151957608E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726155683834E+01     3.6428E-05     2.9142E-05
    2        -7.726155855085E+01     2.6525E-05     2.1220E-05    -1.7125E-06
    3        -7.726155890614E+01     2.2501E-05     1.8001E-05    -3.5529E-07
    4        -7.726155924737E+01     2.2768E-05     1.8214E-05    -3.4123E-07
    5        -7.726155952662E+01     1.2924E-05     1.0340E-05    -2.7925E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72615595266152E+01  Eh
     Estimated bandgap           =   1.3751E-01  Eh
     RMS occupancy error         =   6.6104E-09
     [H,K] commutator            =   1.0340E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  036 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.8034E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72615873333470E+01 Eh
   Predicted gain in energy  =      -2.78067317935893E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726158728393E+01     3.3669E-05     2.6935E-05
    2        -7.726158872762E+01     2.3597E-05     1.8878E-05    -1.4437E-06
    3        -7.726158910743E+01     2.0348E-05     1.6279E-05    -3.7980E-07
    4        -7.726158961572E+01     1.6446E-05     1.3156E-05    -5.0829E-07
    5        -7.726158977963E+01     1.6615E-05     1.3292E-05    -1.6391E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72615897796287E+01  Eh
     Estimated bandgap           =   1.3706E-01  Eh
     RMS occupancy error         =   7.7052E-09
     [H,K] commutator            =   1.3292E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  037 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.9538E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72616071278267E+01 Eh
   Predicted gain in energy  =      -1.73481980567658E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726160712993E+01     1.1241E-05     8.9926E-06
    2        -7.726160720673E+01     1.2817E-05     1.0253E-05    -7.6796E-08
    3        -7.726160729785E+01     9.0151E-06     7.2121E-06    -9.1126E-08
    4        -7.726160731004E+01     8.6105E-06     6.8884E-06    -1.2188E-08
    5        -7.726160740458E+01     1.2476E-05     9.9811E-06    -9.4539E-08
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72616074045810E+01  Eh
     Estimated bandgap           =   1.3697E-01  Eh
     RMS occupancy error         =   2.9880E-09
     [H,K] commutator            =   9.9811E-06
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  038 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.6130E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72616204534974E+01 Eh
   Predicted gain in energy  =      -1.30489164291703E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726162045443E+01     1.5752E-05     1.2601E-05
    2        -7.726162064343E+01     2.0116E-05     1.6093E-05    -1.8900E-07
    3        -7.726162084783E+01     1.2302E-05     9.8416E-06    -2.0440E-07
    4        -7.726162094541E+01     9.9374E-06     7.9499E-06    -9.7579E-08
    5        -7.726162108981E+01     9.9116E-06     7.9293E-06    -1.4440E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72616210898118E+01  Eh
     Estimated bandgap           =   1.3677E-01  Eh
     RMS occupancy error         =   1.0614E-08
     [H,K] commutator            =   7.9293E-06
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  039 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2379E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72616313820684E+01 Eh
   Predicted gain in energy  =      -1.02922566611596E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726163138000E+01     1.8238E-05     1.4590E-05
    2        -7.726163171631E+01     1.6394E-05     1.3115E-05    -3.3631E-07
    3        -7.726163185723E+01     1.2663E-05     1.0130E-05    -1.4091E-07
    4        -7.726163194249E+01     1.2597E-05     1.0077E-05    -8.5260E-08
    5        -7.726163209742E+01     1.0262E-05     8.2095E-06    -1.5494E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72616320974220E+01  Eh
     Estimated bandgap           =   1.3648E-01  Eh
     RMS occupancy error         =   9.4587E-09
     [H,K] commutator            =   8.2095E-06
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  040 #############################
################################################################################

>>> Checking for convergence of NGWFs: 
           ........................................................
           |         *** NGWF optimisation converged ***          |
           | RMS NGWF gradient =    0.00000185516791              |
           | Criteria satisfied:                                  |
           | -> RMS NGWF gradient lower than set threshold.       |
           ========================================================

================================================================================
           ---------------- ENERGY COMPONENTS (Eh) ----------------
           | Kinetic                    :       19.63895613157761 |
           | Pseudopotential (local)    :      -20.12560854717804 |
           | Pseudo (non-coul chg cor)  :        0.00000000000000
           | Pseudopotential (non-local):        1.29172777000891 |
           | Hartree                    :        8.26154231111257 |
           | Exchange-correlation       :      -38.63532531792912 |
           | Ewald                      :      -47.69292444501394 |
           | Total                      :      -77.26163209742202 |
           --------------------------------------------------------
           Integrated density           :       39.99999999999988
================================================================================


                        <<<<< CALCULATION SUMMARY >>>>>                         
|ITER|    RMS GRADIENT   |     TOTAL ENERGY    |   step   |     Epredicted              
   0     0.03588658692396   1609.80116799797383   0.625630    985.17797665519629        
   1     0.04462320647771    861.03911957992932   0.325580    335.04187634404593        
   2     0.02279431464005    306.26730775085667   0.477084    146.15082844660537        
   3     0.01256848763887    125.32607355196672   0.767729     46.65455632658472        
   4     0.00738854158726     34.16217078042068   2.508077    -29.09361679515264        
   5     0.00348639765954    -31.64212034314399   3.253570    -52.53280027093014        
   6     0.00240190290486    -53.37518129668590   3.001931    -62.34946229635327        
   7     0.00159895253264    -63.65151308462487   3.356203    -68.52103575506725        
   8     0.00119482296261    -69.17214759175810   4.167518    -71.92084307474968        
   9     0.00102389652601    -72.05829152354919   4.233266    -74.19393227369935        
  10     0.00070685302798    -74.39391774496895   4.108375    -75.42442687587214        
  11     0.00053012174052    -75.46194346101666   4.431209    -76.07557253932204        
  12     0.00046205914067    -76.07621332889956   3.001136    -76.37223449981549        
  13     0.00034456525694    -76.38121207846177   4.467460    -76.63275919489737        
  14     0.00032748860952    -76.66132010009247   4.095429    -76.88347619352264        
  15     0.00026904364577    -76.89161478856670   4.294414    -77.03725825935531        
  16     0.00023000274765    -77.01439417478537   3.322716    -77.09560262697320        
  17     0.00017227374213    -77.09787607834215   4.006420    -77.15383413987628        
  18     0.00013930896334    -77.15696755702062   3.897224    -77.19361304282434        
  19     0.00011402210770    -77.19580070810031   3.891240    -77.22032623188802        
  20     0.00009754767863    -77.22077392788795   2.912371    -77.23357724850672        
  21     0.00007036753812    -77.23381167580455   4.004508    -77.24305960671616        
  22     0.00005963558633    -77.24338898828579   3.856128    -77.24993490734573        
  23     0.00004647590601    -77.25029379808002   3.896900    -77.25437476771009        
  24     0.00003916920588    -77.25458301898686   3.167623    -77.25682827074202        
  25     0.00002836111552    -77.25687450580092   4.273361    -77.25847612806167        
  26     0.00002364532588    -77.25852344198840   3.847378    -77.25954613262235        
  27     0.00001901427226    -77.25960177170728   3.793564    -77.26026771400515        
  28     0.00001792600506    -77.26030990293771   2.636339    -77.26070129345517        
  29     0.00001236981148    -77.26070698475772   4.024935    -77.26099296099989        
  30     0.00001048291277    -77.26099968798727   4.028312    -77.26120902109902        
  31     0.00000832409013    -77.26122077411577   4.077526    -77.26135822240863        
  32     0.00000756721695    -77.26136835993287   3.126634    -77.26145107628922        
  33     0.00000544609789    -77.26145269466828   4.450925    -77.26151409754198        
  34     0.00000461622300    -77.26151584211161   4.051999    -77.26155685772680        
  35     0.00000380342431    -77.26155952661522   3.921981    -77.26158733334701        
  36     0.00000395375213    -77.26158977962869   2.402113    -77.26160712782675        
  37     0.00000261298796    -77.26160740458096   4.133829    -77.26162045349739        
  38     0.00000223787056    -77.26162108981178   4.307335    -77.26163138206844        
  39     0.00000185516791    -77.26163209742204  <-- CG                                 

------------------------------ TIMING INFORMATION ------------------------------
AVERAGE TIME:   10143.742s on      1 proc(s)                                    
TOTAL TIME:     10143.742s on      1 proc(s)                                    
==================== AVERAGE TIMINGS FROM ALL PROCS (CUMULATIVE) =====================
|| TAG                                         #calls     cpu time   %total  Gflops ||
|| onetep.F90 final imbalance                 :     1        0.00s   0.000%  ------ ||
|| onetep.F90 main loop imbalance             :     1        0.00s   0.000%  ------ ||
|| hash_table_free                            :    80        0.00s   0.000%  ------ ||
|| sparse_init                                :     1        0.00s   0.000%  ------ ||
|| pseudo_make_structure_factor               :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_core_density              :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_local_on_grid             :     1        0.01s   0.000%  ------ ||
|| ewald_calculate_energy                     :     1        0.01s   0.000%  ------ ||
|| linalg_dgemv                               :    49        0.02s   0.000%  ------ ||
|| palser_mano_kernel_optimise_spam3_embed    :    20        0.06s   0.001%  ------ ||
|| sparse_set_to_garbage                      :  9560        0.06s   0.001%  ------ ||
|| density_fftbox_interp_mult_imbal           : 245.8k       0.10s   0.001%  ------ ||
|| density_init_guess_real                    :     1        0.17s   0.002%  ------ ||
|| pseudopotentials_nonlocal_mat              :    80        0.19s   0.002%  ------ ||
|| sparse_embed_array_hotelling_invert        :    82        0.40s   0.004%  ------ ||
|| restart_kernel_write                       :    41        0.71s   0.007%  ------ ||
|| ngwfs_initialise_from_radial               :    20        1.09s   0.011%  ------ ||
|| sparse_trace                               : 163.8k       1.49s   0.015%  ------ ||
|| ngwf_gradient_coeffs                       :    40        2.14s   0.021%  ------ ||
|| lnv_gradient_norm                          :   200        2.23s   0.022%  ------ ||
|| hartree_on_grid_single                     :   385        4.05s   0.040%  ------ ||
|| sparse_product                             : 204.3k       5.21s   0.051%  ------ ||
|| basis_extract_function_from_box            : 51200        9.46s   0.093%  ------ ||
|| fourier_apply_cell_backward                :  1927        9.66s   0.095%   2.121 ||
|| fourier_apply_cell_forward                 :  1925        9.81s   0.097%   2.085 ||
|| energy_and_force_init_cell                 :     1       10.76s   0.106%  ------ ||
|| restart_ngwfs_tightbox_output              :    39       12.05s   0.119%  ------ ||
|| hamiltonian_energy_components              :     1       14.77s   0.146%  ------ ||
|| cell_grid_extract_box_real                 : 154.2k      16.44s   0.162%  ------ ||
|| projectors_init_fftbox_recip               :  3200       19.24s   0.190%  ------ ||
|| kernel_fix                                 :   203       28.86s   0.284%  ------ ||
|| kernel_purify                              :   623       29.31s   0.289%  ------ ||
|| xc_energy_potential                        :   385       31.87s   0.314%  ------ ||
|| cell_grid_deposit_box_real                 : 245.8k     106.07s   1.046%  ------ ||
|| density_fftbox_deposit_to_cell             : 245.8k     107.62s   1.061%  ------ ||
|| basis_copy_function_to_box                 : 450.6k     111.48s   1.099%  ------ ||
|| integrals_kinetic_spam3                    :  1600      130.20s   1.284%  ------ ||
|| function_ops_brappd_ketppd_spam3           :  1600      138.42s   1.365%  ------ ||
|| projectors_gradient_batch                  :  1600      201.07s   1.982%  ------ ||
|| projectors_func_ovlp_box_spam3             :  1600      285.65s   2.816%  ------ ||
|| integrals_locpot_mat_els_batch             :  8040      576.39s   5.682%  ------ ||
|| ngwf_gradient_build_batch                  :  1600      672.45s   6.629%  ------ ||
|| basis_dot_function_with_box                : 7.419M     899.17s   8.864%  ------ ||
|| ngwf_gradient_batch                        :  1600     1405.04s  13.851%  ------ ||
|| potential_apply_to_ngwf_batch              :  8040     1421.49s  14.013%  ------ ||
|| density_batch_row_sums                     : 15360     1435.04s  14.147%  ------ ||
|| ngwf_gradient_lnv                          :    40     1458.57s  14.379%  ------ ||
|| basis_add_function_to_box                  : 11.14M    1954.10s  19.264%  ------ ||
|| integrals_locpot_dbl_grid                  :  4020     1998.54s  19.702%  ------ ||
|| fourier_apply_box                          : 2.086M    3081.41s  30.377%   6.542 ||
|| density_fftbox_interpolate_multiply        : 245.8k    3644.57s  35.929%  ------ ||
|| density_batch_interp_deposit               : 15360     3774.45s  37.210%  ------ ||
|| density_on_dbl_grid                        :  7680     5249.57s  51.752%  ------ ||
|| hamiltonian_lhxc_calculate                 :   383     5654.99s  55.749%  ------ ||
|| lnv_denskernel_optimise_cg                 :    40     7231.90s  71.294%  ------ ||
|| ngwf_cg_optimise                           :     1    10113.66s  99.703%  ------ ||
|| energy_and_forces                          :     1    10132.54s  99.890%  ------ ||
|| total_time                                 :     1    10143.74s 100.000%  ------ ||
======================================================================================
Overhead of generating timer report: 
- 0 ms averaging over threads,
- 0 ms ensuring consistency across MPI ranks,
- 0 ms printing in order.

Job completed: 16-01-2025 20:13 (-0000)

