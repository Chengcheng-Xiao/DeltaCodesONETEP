 Initialized kpar          95  with            1 processes.
If your calculation crashes here, before "Checking processes and threads..."
is displayed, then your stack size is insufficient.
If so, use "ulimit -s unlimited" at runtime.
You can disable this check with "check_stack_size F".

Checking processes and threads...
      Default threads: 1
   Running with 1 MPI process.
   There are 96 MPI processes running on the same node as the root process.
   Each MPI process is using: 
               1 threads for simulation cell FFTs.
               1 threads for threaded FFT box operations.
               1 threads for loops over batched FFT box operations.
               1 threads in other parallel regions.
   MPI Interface: S2 (use mpi) (-DMPI, no -DUSE_MPI_F08, no -DUSE_INCLUDE_MPIF).
   MPI_ASYNC_PROTECTS_NONBLOCKING:  No. MPI_SUBARRAYS_SUPPORTED:  No.
   FFTW Interface: OMP-capable and DEPRECATED. (Use -DUSE_MODERN_FFTW to switch to modern).
   GPU Interface: None.
   GPU FFT Backend: None.
... done

Basic input checks...... done

Reading geometry and species blocks from file "P.dat" ...
  <species_atomic_set> block not found: NGWF initialisation set to SOLVE
... done


--------------------------------------------------------------------------------
---------------------------------- INPUT FILE ----------------------------------
--------------------------------------------------------------------------------

cutoff_energy : 1380 eV                                                         
do_properties : F                                                               
edft : F                                                                        
extend_ngwf : T T T                                                             
forces_output_detail : verbose                                                  
full_rand_ngwf : T                                                              
kpoint_grid_shift : 1 1 0                                                       
kpoint_grid_size : 26 8 19                                                      
kpoint_method : KP                                                              
maxit_ngwf_cg : 1000                                                            
output_detail : Normal                                                          
paw : F                                                                         
permit_unusual_ngwf_count : T                                                   
pseudo_path : .                                                                 
rand_seed_ngwf_dynamic : F                                                      
read_denskern : F                                                               
read_tightbox_ngwfs : F                                                         
spin : 0                                                                        
spin_polarized : F                                                              
task : SinglePoint                                                              
use_cmplx_ngwfs : T                                                             
write_forces : F                                                                
xc_functional : PBE                                                             
%BLOCK LATTICE_CART                                                             
ang                                                                             
3.23719903       0.00000000       0.00000000                                    
0.00000000      11.08591722       0.00000000                                    
0.00000000       0.00000000       4.47991176                                    
%ENDBLOCK LATTICE_CART                                                          
%BLOCK POSITIONS_ABS                                                            
ang                                                                             
P     0.000000     1.037309     0.390604                                        
P     0.000000    10.048608     4.089308                                        
P     0.000000     4.505649     2.630559                                        
P     0.000000     6.580268     1.849352                                        
P     1.618600     6.580268     0.390604                                        
P     1.618600     4.505649     4.089308                                        
P     1.618600    10.048608     2.630559                                        
P     1.618600     1.037309     1.849352                                        
%ENDBLOCK POSITIONS_ABS                                                         
%BLOCK SPECIES                                                                  
P P 15 -1 9.0                                                                   
%ENDBLOCK SPECIES                                                               
%BLOCK SPECIES_POT                                                              
P P_NCP19_PBE_OTF.usp                                                           
%ENDBLOCK SPECIES_POT                                                           
num_kpars : 96                                                                  

--------------------------------------------------------------------------------
-------------------------------- END INPUT FILE --------------------------------
--------------------------------------------------------------------------------


 
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Full system >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<< Pseudopotential information >>>>>>>>>>>>>>>>>>>>>>>>>>
File: P_NCP19_PBE_OTF.usp [ 2001 points up to Gmax=  52.9 (1/bohr)]
  Atomic number: 15;  ionic charge:  5.000000
    Shell 1: l = 0; rc = 1.54 bohr
    Shell 2: l = 2; rc = 1.60 bohr
  Core charge supplied for Nonlinear Core Corrections
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

-------------------------- Atom counting information ---------------------------
Symbol    Natoms    Nngwfs    Nprojs
  P          8        32        48
.......   ......    ......    ......
Totals:      8        32        48
--------------------------------------------------------------------------------

=============================== PSINC grid sizes ===============================
                      Simulation cell:   21 x  55 x  25
                              FFT-box:   21 x  55 x  25
                                  PPD:   21 x  55 x  25
Grid space d1=  0.291305695707a0 (KE cutoff=  89.51711Eh =2435.88449eV)
Grid space d2=  0.380897227208a0 (KE cutoff=  52.35864Eh =1424.75116eV)
Grid space d3=  0.338632253340a0 (KE cutoff=  66.24412Eh =1802.59433eV)
================================================================================

********************* Fourier parallelisation information **********************
       Coarse grid (whole simulation cell) dimensions:     21    55    25
          Real-space ('12') slabs/proc (min max mean):     25    25    25
         Recip-space ('23') slabs/proc (min max mean):     11    11    11
********************************************************************************

********************* Fourier parallelisation information **********************
       Double grid (whole simulation cell) dimensions:     42   110    50
          Real-space ('12') slabs/proc (min max mean):     50    50    50
         Recip-space ('23') slabs/proc (min max mean):     22    22    22
********************************************************************************

Atom SCF Calculation for P  : Z (AE atom) =  15 : Z (PS atom) =   5
Config String: 3s2.0 3p3.0
Orbitals (num,occ):  2     2.00 3.00
Orbitals   (num,l):  2        0    1
Atom SCF converged after  24 iterations to a total energy of     -9.45760280

=============================== K-points summary ===============================
Number |             Fractional coordinates          |    Weight
    1   -0.4615384615   -0.3750000000   -0.4736842105    0.0005060729
    2   -0.4615384615   -0.3750000000   -0.4210526316    0.0005060729
    3   -0.4615384615   -0.3750000000   -0.3684210526    0.0005060729
    4   -0.4615384615   -0.3750000000   -0.3157894737    0.0005060729
    5   -0.4615384615   -0.3750000000   -0.2631578947    0.0005060729
    6   -0.4615384615   -0.3750000000   -0.2105263158    0.0005060729
    7   -0.4615384615   -0.3750000000   -0.1578947368    0.0005060729
    8   -0.4615384615   -0.3750000000   -0.1052631579    0.0005060729
    9   -0.4615384615   -0.3750000000   -0.0526315789    0.0005060729
   10   -0.4615384615   -0.3750000000    0.0000000000    0.0005060729
   11   -0.4615384615   -0.3750000000    0.0526315789    0.0005060729
   12   -0.4615384615   -0.3750000000    0.1052631579    0.0005060729
   13   -0.4615384615   -0.3750000000    0.1578947368    0.0005060729
   14   -0.4615384615   -0.3750000000    0.2105263158    0.0005060729
   15   -0.4615384615   -0.3750000000    0.2631578947    0.0005060729
   16   -0.4615384615   -0.3750000000    0.3157894737    0.0005060729
   17   -0.4615384615   -0.3750000000    0.3684210526    0.0005060729
   18   -0.4615384615   -0.3750000000    0.4210526316    0.0005060729
   19   -0.4615384615   -0.3750000000    0.4736842105    0.0005060729
   20   -0.4615384615   -0.2500000000   -0.4736842105    0.0005060729
   21   -0.4615384615   -0.2500000000   -0.4210526316    0.0005060729
   22   -0.4615384615   -0.2500000000   -0.3684210526    0.0005060729
   23   -0.4615384615   -0.2500000000   -0.3157894737    0.0005060729
   24   -0.4615384615   -0.2500000000   -0.2631578947    0.0005060729
   25   -0.4615384615   -0.2500000000   -0.2105263158    0.0005060729
   26   -0.4615384615   -0.2500000000   -0.1578947368    0.0005060729
   27   -0.4615384615   -0.2500000000   -0.1052631579    0.0005060729
   28   -0.4615384615   -0.2500000000   -0.0526315789    0.0005060729
   29   -0.4615384615   -0.2500000000    0.0000000000    0.0005060729
   30   -0.4615384615   -0.2500000000    0.0526315789    0.0005060729
   31   -0.4615384615   -0.2500000000    0.1052631579    0.0005060729
   32   -0.4615384615   -0.2500000000    0.1578947368    0.0005060729
   33   -0.4615384615   -0.2500000000    0.2105263158    0.0005060729
   34   -0.4615384615   -0.2500000000    0.2631578947    0.0005060729
   35   -0.4615384615   -0.2500000000    0.3157894737    0.0005060729
   36   -0.4615384615   -0.2500000000    0.3684210526    0.0005060729
   37   -0.4615384615   -0.2500000000    0.4210526316    0.0005060729
   38   -0.4615384615   -0.2500000000    0.4736842105    0.0005060729
   39   -0.4615384615   -0.1250000000   -0.4736842105    0.0005060729
   40   -0.4615384615   -0.1250000000   -0.4210526316    0.0005060729
   41   -0.4615384615   -0.1250000000   -0.3684210526    0.0005060729
   42   -0.4615384615   -0.1250000000   -0.3157894737    0.0005060729
   43   -0.4615384615   -0.1250000000   -0.2631578947    0.0005060729
   44   -0.4615384615   -0.1250000000   -0.2105263158    0.0005060729
   45   -0.4615384615   -0.1250000000   -0.1578947368    0.0005060729
   46   -0.4615384615   -0.1250000000   -0.1052631579    0.0005060729
   47   -0.4615384615   -0.1250000000   -0.0526315789    0.0005060729
   48   -0.4615384615   -0.1250000000    0.0000000000    0.0005060729
   49   -0.4615384615   -0.1250000000    0.0526315789    0.0005060729
   50   -0.4615384615   -0.1250000000    0.1052631579    0.0005060729
   51   -0.4615384615   -0.1250000000    0.1578947368    0.0005060729
   52   -0.4615384615   -0.1250000000    0.2105263158    0.0005060729
   53   -0.4615384615   -0.1250000000    0.2631578947    0.0005060729
   54   -0.4615384615   -0.1250000000    0.3157894737    0.0005060729
   55   -0.4615384615   -0.1250000000    0.3684210526    0.0005060729
   56   -0.4615384615   -0.1250000000    0.4210526316    0.0005060729
   57   -0.4615384615   -0.1250000000    0.4736842105    0.0005060729
   58   -0.4615384615    0.0000000000   -0.4736842105    0.0005060729
   59   -0.4615384615    0.0000000000   -0.4210526316    0.0005060729
   60   -0.4615384615    0.0000000000   -0.3684210526    0.0005060729
   61   -0.4615384615    0.0000000000   -0.3157894737    0.0005060729
   62   -0.4615384615    0.0000000000   -0.2631578947    0.0005060729
   63   -0.4615384615    0.0000000000   -0.2105263158    0.0005060729
   64   -0.4615384615    0.0000000000   -0.1578947368    0.0005060729
   65   -0.4615384615    0.0000000000   -0.1052631579    0.0005060729
   66   -0.4615384615    0.0000000000   -0.0526315789    0.0005060729
   67   -0.4615384615    0.0000000000    0.0000000000    0.0005060729
   68   -0.4615384615    0.0000000000    0.0526315789    0.0005060729
   69   -0.4615384615    0.0000000000    0.1052631579    0.0005060729
   70   -0.4615384615    0.0000000000    0.1578947368    0.0005060729
   71   -0.4615384615    0.0000000000    0.2105263158    0.0005060729
   72   -0.4615384615    0.0000000000    0.2631578947    0.0005060729
   73   -0.4615384615    0.0000000000    0.3157894737    0.0005060729
   74   -0.4615384615    0.0000000000    0.3684210526    0.0005060729
   75   -0.4615384615    0.0000000000    0.4210526316    0.0005060729
   76   -0.4615384615    0.0000000000    0.4736842105    0.0005060729
   77   -0.4615384615    0.1250000000   -0.4736842105    0.0005060729
   78   -0.4615384615    0.1250000000   -0.4210526316    0.0005060729
   79   -0.4615384615    0.1250000000   -0.3684210526    0.0005060729
   80   -0.4615384615    0.1250000000   -0.3157894737    0.0005060729
   81   -0.4615384615    0.1250000000   -0.2631578947    0.0005060729
   82   -0.4615384615    0.1250000000   -0.2105263158    0.0005060729
   83   -0.4615384615    0.1250000000   -0.1578947368    0.0005060729
   84   -0.4615384615    0.1250000000   -0.1052631579    0.0005060729
   85   -0.4615384615    0.1250000000   -0.0526315789    0.0005060729
   86   -0.4615384615    0.1250000000    0.0000000000    0.0005060729
   87   -0.4615384615    0.1250000000    0.0526315789    0.0005060729
   88   -0.4615384615    0.1250000000    0.1052631579    0.0005060729
   89   -0.4615384615    0.1250000000    0.1578947368    0.0005060729
   90   -0.4615384615    0.1250000000    0.2105263158    0.0005060729
   91   -0.4615384615    0.1250000000    0.2631578947    0.0005060729
   92   -0.4615384615    0.1250000000    0.3157894737    0.0005060729
   93   -0.4615384615    0.1250000000    0.3684210526    0.0005060729
   94   -0.4615384615    0.1250000000    0.4210526316    0.0005060729
   95   -0.4615384615    0.1250000000    0.4736842105    0.0005060729
   96   -0.4615384615    0.2500000000   -0.4736842105    0.0005060729
   97   -0.4615384615    0.2500000000   -0.4210526316    0.0005060729
   98   -0.4615384615    0.2500000000   -0.3684210526    0.0005060729
   99   -0.4615384615    0.2500000000   -0.3157894737    0.0005060729
  100   -0.4615384615    0.2500000000   -0.2631578947    0.0005060729
  101   -0.4615384615    0.2500000000   -0.2105263158    0.0005060729
  102   -0.4615384615    0.2500000000   -0.1578947368    0.0005060729
  103   -0.4615384615    0.2500000000   -0.1052631579    0.0005060729
  104   -0.4615384615    0.2500000000   -0.0526315789    0.0005060729
  105   -0.4615384615    0.2500000000    0.0000000000    0.0005060729
  106   -0.4615384615    0.2500000000    0.0526315789    0.0005060729
  107   -0.4615384615    0.2500000000    0.1052631579    0.0005060729
  108   -0.4615384615    0.2500000000    0.1578947368    0.0005060729
  109   -0.4615384615    0.2500000000    0.2105263158    0.0005060729
  110   -0.4615384615    0.2500000000    0.2631578947    0.0005060729
  111   -0.4615384615    0.2500000000    0.3157894737    0.0005060729
  112   -0.4615384615    0.2500000000    0.3684210526    0.0005060729
  113   -0.4615384615    0.2500000000    0.4210526316    0.0005060729
  114   -0.4615384615    0.2500000000    0.4736842105    0.0005060729
  115   -0.4615384615    0.3750000000   -0.4736842105    0.0005060729
  116   -0.4615384615    0.3750000000   -0.4210526316    0.0005060729
  117   -0.4615384615    0.3750000000   -0.3684210526    0.0005060729
  118   -0.4615384615    0.3750000000   -0.3157894737    0.0005060729
  119   -0.4615384615    0.3750000000   -0.2631578947    0.0005060729
  120   -0.4615384615    0.3750000000   -0.2105263158    0.0005060729
  121   -0.4615384615    0.3750000000   -0.1578947368    0.0005060729
  122   -0.4615384615    0.3750000000   -0.1052631579    0.0005060729
  123   -0.4615384615    0.3750000000   -0.0526315789    0.0005060729
  124   -0.4615384615    0.3750000000    0.0000000000    0.0005060729
  125   -0.4615384615    0.3750000000    0.0526315789    0.0005060729
  126   -0.4615384615    0.3750000000    0.1052631579    0.0005060729
  127   -0.4615384615    0.3750000000    0.1578947368    0.0005060729
  128   -0.4615384615    0.3750000000    0.2105263158    0.0005060729
  129   -0.4615384615    0.3750000000    0.2631578947    0.0005060729
  130   -0.4615384615    0.3750000000    0.3157894737    0.0005060729
  131   -0.4615384615    0.3750000000    0.3684210526    0.0005060729
  132   -0.4615384615    0.3750000000    0.4210526316    0.0005060729
  133   -0.4615384615    0.3750000000    0.4736842105    0.0005060729
  134   -0.4615384615    0.5000000000   -0.4736842105    0.0005060729
  135   -0.4615384615    0.5000000000   -0.4210526316    0.0005060729
  136   -0.4615384615    0.5000000000   -0.3684210526    0.0005060729
  137   -0.4615384615    0.5000000000   -0.3157894737    0.0005060729
  138   -0.4615384615    0.5000000000   -0.2631578947    0.0005060729
  139   -0.4615384615    0.5000000000   -0.2105263158    0.0005060729
  140   -0.4615384615    0.5000000000   -0.1578947368    0.0005060729
  141   -0.4615384615    0.5000000000   -0.1052631579    0.0005060729
  142   -0.4615384615    0.5000000000   -0.0526315789    0.0005060729
  143   -0.4615384615    0.5000000000    0.0000000000    0.0005060729
  144   -0.4615384615    0.5000000000    0.0526315789    0.0005060729
  145   -0.4615384615    0.5000000000    0.1052631579    0.0005060729
  146   -0.4615384615    0.5000000000    0.1578947368    0.0005060729
  147   -0.4615384615    0.5000000000    0.2105263158    0.0005060729
  148   -0.4615384615    0.5000000000    0.2631578947    0.0005060729
  149   -0.4615384615    0.5000000000    0.3157894737    0.0005060729
  150   -0.4615384615    0.5000000000    0.3684210526    0.0005060729
  151   -0.4615384615    0.5000000000    0.4210526316    0.0005060729
  152   -0.4615384615    0.5000000000    0.4736842105    0.0005060729
  153   -0.4230769231   -0.3750000000   -0.4736842105    0.0005060729
  154   -0.4230769231   -0.3750000000   -0.4210526316    0.0005060729
  155   -0.4230769231   -0.3750000000   -0.3684210526    0.0005060729
  156   -0.4230769231   -0.3750000000   -0.3157894737    0.0005060729
  157   -0.4230769231   -0.3750000000   -0.2631578947    0.0005060729
  158   -0.4230769231   -0.3750000000   -0.2105263158    0.0005060729
  159   -0.4230769231   -0.3750000000   -0.1578947368    0.0005060729
  160   -0.4230769231   -0.3750000000   -0.1052631579    0.0005060729
  161   -0.4230769231   -0.3750000000   -0.0526315789    0.0005060729
  162   -0.4230769231   -0.3750000000    0.0000000000    0.0005060729
  163   -0.4230769231   -0.3750000000    0.0526315789    0.0005060729
  164   -0.4230769231   -0.3750000000    0.1052631579    0.0005060729
  165   -0.4230769231   -0.3750000000    0.1578947368    0.0005060729
  166   -0.4230769231   -0.3750000000    0.2105263158    0.0005060729
  167   -0.4230769231   -0.3750000000    0.2631578947    0.0005060729
  168   -0.4230769231   -0.3750000000    0.3157894737    0.0005060729
  169   -0.4230769231   -0.3750000000    0.3684210526    0.0005060729
  170   -0.4230769231   -0.3750000000    0.4210526316    0.0005060729
  171   -0.4230769231   -0.3750000000    0.4736842105    0.0005060729
  172   -0.4230769231   -0.2500000000   -0.4736842105    0.0005060729
  173   -0.4230769231   -0.2500000000   -0.4210526316    0.0005060729
  174   -0.4230769231   -0.2500000000   -0.3684210526    0.0005060729
  175   -0.4230769231   -0.2500000000   -0.3157894737    0.0005060729
  176   -0.4230769231   -0.2500000000   -0.2631578947    0.0005060729
  177   -0.4230769231   -0.2500000000   -0.2105263158    0.0005060729
  178   -0.4230769231   -0.2500000000   -0.1578947368    0.0005060729
  179   -0.4230769231   -0.2500000000   -0.1052631579    0.0005060729
  180   -0.4230769231   -0.2500000000   -0.0526315789    0.0005060729
  181   -0.4230769231   -0.2500000000    0.0000000000    0.0005060729
  182   -0.4230769231   -0.2500000000    0.0526315789    0.0005060729
  183   -0.4230769231   -0.2500000000    0.1052631579    0.0005060729
  184   -0.4230769231   -0.2500000000    0.1578947368    0.0005060729
  185   -0.4230769231   -0.2500000000    0.2105263158    0.0005060729
  186   -0.4230769231   -0.2500000000    0.2631578947    0.0005060729
  187   -0.4230769231   -0.2500000000    0.3157894737    0.0005060729
  188   -0.4230769231   -0.2500000000    0.3684210526    0.0005060729
  189   -0.4230769231   -0.2500000000    0.4210526316    0.0005060729
  190   -0.4230769231   -0.2500000000    0.4736842105    0.0005060729
  191   -0.4230769231   -0.1250000000   -0.4736842105    0.0005060729
  192   -0.4230769231   -0.1250000000   -0.4210526316    0.0005060729
  193   -0.4230769231   -0.1250000000   -0.3684210526    0.0005060729
  194   -0.4230769231   -0.1250000000   -0.3157894737    0.0005060729
  195   -0.4230769231   -0.1250000000   -0.2631578947    0.0005060729
  196   -0.4230769231   -0.1250000000   -0.2105263158    0.0005060729
  197   -0.4230769231   -0.1250000000   -0.1578947368    0.0005060729
  198   -0.4230769231   -0.1250000000   -0.1052631579    0.0005060729
  199   -0.4230769231   -0.1250000000   -0.0526315789    0.0005060729
  200   -0.4230769231   -0.1250000000    0.0000000000    0.0005060729
  201   -0.4230769231   -0.1250000000    0.0526315789    0.0005060729
  202   -0.4230769231   -0.1250000000    0.1052631579    0.0005060729
  203   -0.4230769231   -0.1250000000    0.1578947368    0.0005060729
  204   -0.4230769231   -0.1250000000    0.2105263158    0.0005060729
  205   -0.4230769231   -0.1250000000    0.2631578947    0.0005060729
  206   -0.4230769231   -0.1250000000    0.3157894737    0.0005060729
  207   -0.4230769231   -0.1250000000    0.3684210526    0.0005060729
  208   -0.4230769231   -0.1250000000    0.4210526316    0.0005060729
  209   -0.4230769231   -0.1250000000    0.4736842105    0.0005060729
  210   -0.4230769231    0.0000000000   -0.4736842105    0.0005060729
  211   -0.4230769231    0.0000000000   -0.4210526316    0.0005060729
  212   -0.4230769231    0.0000000000   -0.3684210526    0.0005060729
  213   -0.4230769231    0.0000000000   -0.3157894737    0.0005060729
  214   -0.4230769231    0.0000000000   -0.2631578947    0.0005060729
  215   -0.4230769231    0.0000000000   -0.2105263158    0.0005060729
  216   -0.4230769231    0.0000000000   -0.1578947368    0.0005060729
  217   -0.4230769231    0.0000000000   -0.1052631579    0.0005060729
  218   -0.4230769231    0.0000000000   -0.0526315789    0.0005060729
  219   -0.4230769231    0.0000000000    0.0000000000    0.0005060729
  220   -0.4230769231    0.0000000000    0.0526315789    0.0005060729
  221   -0.4230769231    0.0000000000    0.1052631579    0.0005060729
  222   -0.4230769231    0.0000000000    0.1578947368    0.0005060729
  223   -0.4230769231    0.0000000000    0.2105263158    0.0005060729
  224   -0.4230769231    0.0000000000    0.2631578947    0.0005060729
  225   -0.4230769231    0.0000000000    0.3157894737    0.0005060729
  226   -0.4230769231    0.0000000000    0.3684210526    0.0005060729
  227   -0.4230769231    0.0000000000    0.4210526316    0.0005060729
  228   -0.4230769231    0.0000000000    0.4736842105    0.0005060729
  229   -0.4230769231    0.1250000000   -0.4736842105    0.0005060729
  230   -0.4230769231    0.1250000000   -0.4210526316    0.0005060729
  231   -0.4230769231    0.1250000000   -0.3684210526    0.0005060729
  232   -0.4230769231    0.1250000000   -0.3157894737    0.0005060729
  233   -0.4230769231    0.1250000000   -0.2631578947    0.0005060729
  234   -0.4230769231    0.1250000000   -0.2105263158    0.0005060729
  235   -0.4230769231    0.1250000000   -0.1578947368    0.0005060729
  236   -0.4230769231    0.1250000000   -0.1052631579    0.0005060729
  237   -0.4230769231    0.1250000000   -0.0526315789    0.0005060729
  238   -0.4230769231    0.1250000000    0.0000000000    0.0005060729
  239   -0.4230769231    0.1250000000    0.0526315789    0.0005060729
  240   -0.4230769231    0.1250000000    0.1052631579    0.0005060729
  241   -0.4230769231    0.1250000000    0.1578947368    0.0005060729
  242   -0.4230769231    0.1250000000    0.2105263158    0.0005060729
  243   -0.4230769231    0.1250000000    0.2631578947    0.0005060729
  244   -0.4230769231    0.1250000000    0.3157894737    0.0005060729
  245   -0.4230769231    0.1250000000    0.3684210526    0.0005060729
  246   -0.4230769231    0.1250000000    0.4210526316    0.0005060729
  247   -0.4230769231    0.1250000000    0.4736842105    0.0005060729
  248   -0.4230769231    0.2500000000   -0.4736842105    0.0005060729
  249   -0.4230769231    0.2500000000   -0.4210526316    0.0005060729
  250   -0.4230769231    0.2500000000   -0.3684210526    0.0005060729
  251   -0.4230769231    0.2500000000   -0.3157894737    0.0005060729
  252   -0.4230769231    0.2500000000   -0.2631578947    0.0005060729
  253   -0.4230769231    0.2500000000   -0.2105263158    0.0005060729
  254   -0.4230769231    0.2500000000   -0.1578947368    0.0005060729
  255   -0.4230769231    0.2500000000   -0.1052631579    0.0005060729
  256   -0.4230769231    0.2500000000   -0.0526315789    0.0005060729
  257   -0.4230769231    0.2500000000    0.0000000000    0.0005060729
  258   -0.4230769231    0.2500000000    0.0526315789    0.0005060729
  259   -0.4230769231    0.2500000000    0.1052631579    0.0005060729
  260   -0.4230769231    0.2500000000    0.1578947368    0.0005060729
  261   -0.4230769231    0.2500000000    0.2105263158    0.0005060729
  262   -0.4230769231    0.2500000000    0.2631578947    0.0005060729
  263   -0.4230769231    0.2500000000    0.3157894737    0.0005060729
  264   -0.4230769231    0.2500000000    0.3684210526    0.0005060729
  265   -0.4230769231    0.2500000000    0.4210526316    0.0005060729
  266   -0.4230769231    0.2500000000    0.4736842105    0.0005060729
  267   -0.4230769231    0.3750000000   -0.4736842105    0.0005060729
  268   -0.4230769231    0.3750000000   -0.4210526316    0.0005060729
  269   -0.4230769231    0.3750000000   -0.3684210526    0.0005060729
  270   -0.4230769231    0.3750000000   -0.3157894737    0.0005060729
  271   -0.4230769231    0.3750000000   -0.2631578947    0.0005060729
  272   -0.4230769231    0.3750000000   -0.2105263158    0.0005060729
  273   -0.4230769231    0.3750000000   -0.1578947368    0.0005060729
  274   -0.4230769231    0.3750000000   -0.1052631579    0.0005060729
  275   -0.4230769231    0.3750000000   -0.0526315789    0.0005060729
  276   -0.4230769231    0.3750000000    0.0000000000    0.0005060729
  277   -0.4230769231    0.3750000000    0.0526315789    0.0005060729
  278   -0.4230769231    0.3750000000    0.1052631579    0.0005060729
  279   -0.4230769231    0.3750000000    0.1578947368    0.0005060729
  280   -0.4230769231    0.3750000000    0.2105263158    0.0005060729
  281   -0.4230769231    0.3750000000    0.2631578947    0.0005060729
  282   -0.4230769231    0.3750000000    0.3157894737    0.0005060729
  283   -0.4230769231    0.3750000000    0.3684210526    0.0005060729
  284   -0.4230769231    0.3750000000    0.4210526316    0.0005060729
  285   -0.4230769231    0.3750000000    0.4736842105    0.0005060729
  286   -0.4230769231    0.5000000000   -0.4736842105    0.0005060729
  287   -0.4230769231    0.5000000000   -0.4210526316    0.0005060729
  288   -0.4230769231    0.5000000000   -0.3684210526    0.0005060729
  289   -0.4230769231    0.5000000000   -0.3157894737    0.0005060729
  290   -0.4230769231    0.5000000000   -0.2631578947    0.0005060729
  291   -0.4230769231    0.5000000000   -0.2105263158    0.0005060729
  292   -0.4230769231    0.5000000000   -0.1578947368    0.0005060729
  293   -0.4230769231    0.5000000000   -0.1052631579    0.0005060729
  294   -0.4230769231    0.5000000000   -0.0526315789    0.0005060729
  295   -0.4230769231    0.5000000000    0.0000000000    0.0005060729
  296   -0.4230769231    0.5000000000    0.0526315789    0.0005060729
  297   -0.4230769231    0.5000000000    0.1052631579    0.0005060729
  298   -0.4230769231    0.5000000000    0.1578947368    0.0005060729
  299   -0.4230769231    0.5000000000    0.2105263158    0.0005060729
  300   -0.4230769231    0.5000000000    0.2631578947    0.0005060729
  301   -0.4230769231    0.5000000000    0.3157894737    0.0005060729
  302   -0.4230769231    0.5000000000    0.3684210526    0.0005060729
  303   -0.4230769231    0.5000000000    0.4210526316    0.0005060729
  304   -0.4230769231    0.5000000000    0.4736842105    0.0005060729
  305   -0.3846153846   -0.3750000000   -0.4736842105    0.0005060729
  306   -0.3846153846   -0.3750000000   -0.4210526316    0.0005060729
  307   -0.3846153846   -0.3750000000   -0.3684210526    0.0005060729
  308   -0.3846153846   -0.3750000000   -0.3157894737    0.0005060729
  309   -0.3846153846   -0.3750000000   -0.2631578947    0.0005060729
  310   -0.3846153846   -0.3750000000   -0.2105263158    0.0005060729
  311   -0.3846153846   -0.3750000000   -0.1578947368    0.0005060729
  312   -0.3846153846   -0.3750000000   -0.1052631579    0.0005060729
  313   -0.3846153846   -0.3750000000   -0.0526315789    0.0005060729
  314   -0.3846153846   -0.3750000000    0.0000000000    0.0005060729
  315   -0.3846153846   -0.3750000000    0.0526315789    0.0005060729
  316   -0.3846153846   -0.3750000000    0.1052631579    0.0005060729
  317   -0.3846153846   -0.3750000000    0.1578947368    0.0005060729
  318   -0.3846153846   -0.3750000000    0.2105263158    0.0005060729
  319   -0.3846153846   -0.3750000000    0.2631578947    0.0005060729
  320   -0.3846153846   -0.3750000000    0.3157894737    0.0005060729
  321   -0.3846153846   -0.3750000000    0.3684210526    0.0005060729
  322   -0.3846153846   -0.3750000000    0.4210526316    0.0005060729
  323   -0.3846153846   -0.3750000000    0.4736842105    0.0005060729
  324   -0.3846153846   -0.2500000000   -0.4736842105    0.0005060729
  325   -0.3846153846   -0.2500000000   -0.4210526316    0.0005060729
  326   -0.3846153846   -0.2500000000   -0.3684210526    0.0005060729
  327   -0.3846153846   -0.2500000000   -0.3157894737    0.0005060729
  328   -0.3846153846   -0.2500000000   -0.2631578947    0.0005060729
  329   -0.3846153846   -0.2500000000   -0.2105263158    0.0005060729
  330   -0.3846153846   -0.2500000000   -0.1578947368    0.0005060729
  331   -0.3846153846   -0.2500000000   -0.1052631579    0.0005060729
  332   -0.3846153846   -0.2500000000   -0.0526315789    0.0005060729
  333   -0.3846153846   -0.2500000000    0.0000000000    0.0005060729
  334   -0.3846153846   -0.2500000000    0.0526315789    0.0005060729
  335   -0.3846153846   -0.2500000000    0.1052631579    0.0005060729
  336   -0.3846153846   -0.2500000000    0.1578947368    0.0005060729
  337   -0.3846153846   -0.2500000000    0.2105263158    0.0005060729
  338   -0.3846153846   -0.2500000000    0.2631578947    0.0005060729
  339   -0.3846153846   -0.2500000000    0.3157894737    0.0005060729
  340   -0.3846153846   -0.2500000000    0.3684210526    0.0005060729
  341   -0.3846153846   -0.2500000000    0.4210526316    0.0005060729
  342   -0.3846153846   -0.2500000000    0.4736842105    0.0005060729
  343   -0.3846153846   -0.1250000000   -0.4736842105    0.0005060729
  344   -0.3846153846   -0.1250000000   -0.4210526316    0.0005060729
  345   -0.3846153846   -0.1250000000   -0.3684210526    0.0005060729
  346   -0.3846153846   -0.1250000000   -0.3157894737    0.0005060729
  347   -0.3846153846   -0.1250000000   -0.2631578947    0.0005060729
  348   -0.3846153846   -0.1250000000   -0.2105263158    0.0005060729
  349   -0.3846153846   -0.1250000000   -0.1578947368    0.0005060729
  350   -0.3846153846   -0.1250000000   -0.1052631579    0.0005060729
  351   -0.3846153846   -0.1250000000   -0.0526315789    0.0005060729
  352   -0.3846153846   -0.1250000000    0.0000000000    0.0005060729
  353   -0.3846153846   -0.1250000000    0.0526315789    0.0005060729
  354   -0.3846153846   -0.1250000000    0.1052631579    0.0005060729
  355   -0.3846153846   -0.1250000000    0.1578947368    0.0005060729
  356   -0.3846153846   -0.1250000000    0.2105263158    0.0005060729
  357   -0.3846153846   -0.1250000000    0.2631578947    0.0005060729
  358   -0.3846153846   -0.1250000000    0.3157894737    0.0005060729
  359   -0.3846153846   -0.1250000000    0.3684210526    0.0005060729
  360   -0.3846153846   -0.1250000000    0.4210526316    0.0005060729
  361   -0.3846153846   -0.1250000000    0.4736842105    0.0005060729
  362   -0.3846153846    0.0000000000   -0.4736842105    0.0005060729
  363   -0.3846153846    0.0000000000   -0.4210526316    0.0005060729
  364   -0.3846153846    0.0000000000   -0.3684210526    0.0005060729
  365   -0.3846153846    0.0000000000   -0.3157894737    0.0005060729
  366   -0.3846153846    0.0000000000   -0.2631578947    0.0005060729
  367   -0.3846153846    0.0000000000   -0.2105263158    0.0005060729
  368   -0.3846153846    0.0000000000   -0.1578947368    0.0005060729
  369   -0.3846153846    0.0000000000   -0.1052631579    0.0005060729
  370   -0.3846153846    0.0000000000   -0.0526315789    0.0005060729
  371   -0.3846153846    0.0000000000    0.0000000000    0.0005060729
  372   -0.3846153846    0.0000000000    0.0526315789    0.0005060729
  373   -0.3846153846    0.0000000000    0.1052631579    0.0005060729
  374   -0.3846153846    0.0000000000    0.1578947368    0.0005060729
  375   -0.3846153846    0.0000000000    0.2105263158    0.0005060729
  376   -0.3846153846    0.0000000000    0.2631578947    0.0005060729
  377   -0.3846153846    0.0000000000    0.3157894737    0.0005060729
  378   -0.3846153846    0.0000000000    0.3684210526    0.0005060729
  379   -0.3846153846    0.0000000000    0.4210526316    0.0005060729
  380   -0.3846153846    0.0000000000    0.4736842105    0.0005060729
  381   -0.3846153846    0.1250000000   -0.4736842105    0.0005060729
  382   -0.3846153846    0.1250000000   -0.4210526316    0.0005060729
  383   -0.3846153846    0.1250000000   -0.3684210526    0.0005060729
  384   -0.3846153846    0.1250000000   -0.3157894737    0.0005060729
  385   -0.3846153846    0.1250000000   -0.2631578947    0.0005060729
  386   -0.3846153846    0.1250000000   -0.2105263158    0.0005060729
  387   -0.3846153846    0.1250000000   -0.1578947368    0.0005060729
  388   -0.3846153846    0.1250000000   -0.1052631579    0.0005060729
  389   -0.3846153846    0.1250000000   -0.0526315789    0.0005060729
  390   -0.3846153846    0.1250000000    0.0000000000    0.0005060729
  391   -0.3846153846    0.1250000000    0.0526315789    0.0005060729
  392   -0.3846153846    0.1250000000    0.1052631579    0.0005060729
  393   -0.3846153846    0.1250000000    0.1578947368    0.0005060729
  394   -0.3846153846    0.1250000000    0.2105263158    0.0005060729
  395   -0.3846153846    0.1250000000    0.2631578947    0.0005060729
  396   -0.3846153846    0.1250000000    0.3157894737    0.0005060729
  397   -0.3846153846    0.1250000000    0.3684210526    0.0005060729
  398   -0.3846153846    0.1250000000    0.4210526316    0.0005060729
  399   -0.3846153846    0.1250000000    0.4736842105    0.0005060729
  400   -0.3846153846    0.2500000000   -0.4736842105    0.0005060729
  401   -0.3846153846    0.2500000000   -0.4210526316    0.0005060729
  402   -0.3846153846    0.2500000000   -0.3684210526    0.0005060729
  403   -0.3846153846    0.2500000000   -0.3157894737    0.0005060729
  404   -0.3846153846    0.2500000000   -0.2631578947    0.0005060729
  405   -0.3846153846    0.2500000000   -0.2105263158    0.0005060729
  406   -0.3846153846    0.2500000000   -0.1578947368    0.0005060729
  407   -0.3846153846    0.2500000000   -0.1052631579    0.0005060729
  408   -0.3846153846    0.2500000000   -0.0526315789    0.0005060729
  409   -0.3846153846    0.2500000000    0.0000000000    0.0005060729
  410   -0.3846153846    0.2500000000    0.0526315789    0.0005060729
  411   -0.3846153846    0.2500000000    0.1052631579    0.0005060729
  412   -0.3846153846    0.2500000000    0.1578947368    0.0005060729
  413   -0.3846153846    0.2500000000    0.2105263158    0.0005060729
  414   -0.3846153846    0.2500000000    0.2631578947    0.0005060729
  415   -0.3846153846    0.2500000000    0.3157894737    0.0005060729
  416   -0.3846153846    0.2500000000    0.3684210526    0.0005060729
  417   -0.3846153846    0.2500000000    0.4210526316    0.0005060729
  418   -0.3846153846    0.2500000000    0.4736842105    0.0005060729
  419   -0.3846153846    0.3750000000   -0.4736842105    0.0005060729
  420   -0.3846153846    0.3750000000   -0.4210526316    0.0005060729
  421   -0.3846153846    0.3750000000   -0.3684210526    0.0005060729
  422   -0.3846153846    0.3750000000   -0.3157894737    0.0005060729
  423   -0.3846153846    0.3750000000   -0.2631578947    0.0005060729
  424   -0.3846153846    0.3750000000   -0.2105263158    0.0005060729
  425   -0.3846153846    0.3750000000   -0.1578947368    0.0005060729
  426   -0.3846153846    0.3750000000   -0.1052631579    0.0005060729
  427   -0.3846153846    0.3750000000   -0.0526315789    0.0005060729
  428   -0.3846153846    0.3750000000    0.0000000000    0.0005060729
  429   -0.3846153846    0.3750000000    0.0526315789    0.0005060729
  430   -0.3846153846    0.3750000000    0.1052631579    0.0005060729
  431   -0.3846153846    0.3750000000    0.1578947368    0.0005060729
  432   -0.3846153846    0.3750000000    0.2105263158    0.0005060729
  433   -0.3846153846    0.3750000000    0.2631578947    0.0005060729
  434   -0.3846153846    0.3750000000    0.3157894737    0.0005060729
  435   -0.3846153846    0.3750000000    0.3684210526    0.0005060729
  436   -0.3846153846    0.3750000000    0.4210526316    0.0005060729
  437   -0.3846153846    0.3750000000    0.4736842105    0.0005060729
  438   -0.3846153846    0.5000000000   -0.4736842105    0.0005060729
  439   -0.3846153846    0.5000000000   -0.4210526316    0.0005060729
  440   -0.3846153846    0.5000000000   -0.3684210526    0.0005060729
  441   -0.3846153846    0.5000000000   -0.3157894737    0.0005060729
  442   -0.3846153846    0.5000000000   -0.2631578947    0.0005060729
  443   -0.3846153846    0.5000000000   -0.2105263158    0.0005060729
  444   -0.3846153846    0.5000000000   -0.1578947368    0.0005060729
  445   -0.3846153846    0.5000000000   -0.1052631579    0.0005060729
  446   -0.3846153846    0.5000000000   -0.0526315789    0.0005060729
  447   -0.3846153846    0.5000000000    0.0000000000    0.0005060729
  448   -0.3846153846    0.5000000000    0.0526315789    0.0005060729
  449   -0.3846153846    0.5000000000    0.1052631579    0.0005060729
  450   -0.3846153846    0.5000000000    0.1578947368    0.0005060729
  451   -0.3846153846    0.5000000000    0.2105263158    0.0005060729
  452   -0.3846153846    0.5000000000    0.2631578947    0.0005060729
  453   -0.3846153846    0.5000000000    0.3157894737    0.0005060729
  454   -0.3846153846    0.5000000000    0.3684210526    0.0005060729
  455   -0.3846153846    0.5000000000    0.4210526316    0.0005060729
  456   -0.3846153846    0.5000000000    0.4736842105    0.0005060729
  457   -0.3461538462   -0.3750000000   -0.4736842105    0.0005060729
  458   -0.3461538462   -0.3750000000   -0.4210526316    0.0005060729
  459   -0.3461538462   -0.3750000000   -0.3684210526    0.0005060729
  460   -0.3461538462   -0.3750000000   -0.3157894737    0.0005060729
  461   -0.3461538462   -0.3750000000   -0.2631578947    0.0005060729
  462   -0.3461538462   -0.3750000000   -0.2105263158    0.0005060729
  463   -0.3461538462   -0.3750000000   -0.1578947368    0.0005060729
  464   -0.3461538462   -0.3750000000   -0.1052631579    0.0005060729
  465   -0.3461538462   -0.3750000000   -0.0526315789    0.0005060729
  466   -0.3461538462   -0.3750000000    0.0000000000    0.0005060729
  467   -0.3461538462   -0.3750000000    0.0526315789    0.0005060729
  468   -0.3461538462   -0.3750000000    0.1052631579    0.0005060729
  469   -0.3461538462   -0.3750000000    0.1578947368    0.0005060729
  470   -0.3461538462   -0.3750000000    0.2105263158    0.0005060729
  471   -0.3461538462   -0.3750000000    0.2631578947    0.0005060729
  472   -0.3461538462   -0.3750000000    0.3157894737    0.0005060729
  473   -0.3461538462   -0.3750000000    0.3684210526    0.0005060729
  474   -0.3461538462   -0.3750000000    0.4210526316    0.0005060729
  475   -0.3461538462   -0.3750000000    0.4736842105    0.0005060729
  476   -0.3461538462   -0.2500000000   -0.4736842105    0.0005060729
  477   -0.3461538462   -0.2500000000   -0.4210526316    0.0005060729
  478   -0.3461538462   -0.2500000000   -0.3684210526    0.0005060729
  479   -0.3461538462   -0.2500000000   -0.3157894737    0.0005060729
  480   -0.3461538462   -0.2500000000   -0.2631578947    0.0005060729
  481   -0.3461538462   -0.2500000000   -0.2105263158    0.0005060729
  482   -0.3461538462   -0.2500000000   -0.1578947368    0.0005060729
  483   -0.3461538462   -0.2500000000   -0.1052631579    0.0005060729
  484   -0.3461538462   -0.2500000000   -0.0526315789    0.0005060729
  485   -0.3461538462   -0.2500000000    0.0000000000    0.0005060729
  486   -0.3461538462   -0.2500000000    0.0526315789    0.0005060729
  487   -0.3461538462   -0.2500000000    0.1052631579    0.0005060729
  488   -0.3461538462   -0.2500000000    0.1578947368    0.0005060729
  489   -0.3461538462   -0.2500000000    0.2105263158    0.0005060729
  490   -0.3461538462   -0.2500000000    0.2631578947    0.0005060729
  491   -0.3461538462   -0.2500000000    0.3157894737    0.0005060729
  492   -0.3461538462   -0.2500000000    0.3684210526    0.0005060729
  493   -0.3461538462   -0.2500000000    0.4210526316    0.0005060729
  494   -0.3461538462   -0.2500000000    0.4736842105    0.0005060729
  495   -0.3461538462   -0.1250000000   -0.4736842105    0.0005060729
  496   -0.3461538462   -0.1250000000   -0.4210526316    0.0005060729
  497   -0.3461538462   -0.1250000000   -0.3684210526    0.0005060729
  498   -0.3461538462   -0.1250000000   -0.3157894737    0.0005060729
  499   -0.3461538462   -0.1250000000   -0.2631578947    0.0005060729
  500   -0.3461538462   -0.1250000000   -0.2105263158    0.0005060729
  501   -0.3461538462   -0.1250000000   -0.1578947368    0.0005060729
  502   -0.3461538462   -0.1250000000   -0.1052631579    0.0005060729
  503   -0.3461538462   -0.1250000000   -0.0526315789    0.0005060729
  504   -0.3461538462   -0.1250000000    0.0000000000    0.0005060729
  505   -0.3461538462   -0.1250000000    0.0526315789    0.0005060729
  506   -0.3461538462   -0.1250000000    0.1052631579    0.0005060729
  507   -0.3461538462   -0.1250000000    0.1578947368    0.0005060729
  508   -0.3461538462   -0.1250000000    0.2105263158    0.0005060729
  509   -0.3461538462   -0.1250000000    0.2631578947    0.0005060729
  510   -0.3461538462   -0.1250000000    0.3157894737    0.0005060729
  511   -0.3461538462   -0.1250000000    0.3684210526    0.0005060729
  512   -0.3461538462   -0.1250000000    0.4210526316    0.0005060729
  513   -0.3461538462   -0.1250000000    0.4736842105    0.0005060729
  514   -0.3461538462    0.0000000000   -0.4736842105    0.0005060729
  515   -0.3461538462    0.0000000000   -0.4210526316    0.0005060729
  516   -0.3461538462    0.0000000000   -0.3684210526    0.0005060729
  517   -0.3461538462    0.0000000000   -0.3157894737    0.0005060729
  518   -0.3461538462    0.0000000000   -0.2631578947    0.0005060729
  519   -0.3461538462    0.0000000000   -0.2105263158    0.0005060729
  520   -0.3461538462    0.0000000000   -0.1578947368    0.0005060729
  521   -0.3461538462    0.0000000000   -0.1052631579    0.0005060729
  522   -0.3461538462    0.0000000000   -0.0526315789    0.0005060729
  523   -0.3461538462    0.0000000000    0.0000000000    0.0005060729
  524   -0.3461538462    0.0000000000    0.0526315789    0.0005060729
  525   -0.3461538462    0.0000000000    0.1052631579    0.0005060729
  526   -0.3461538462    0.0000000000    0.1578947368    0.0005060729
  527   -0.3461538462    0.0000000000    0.2105263158    0.0005060729
  528   -0.3461538462    0.0000000000    0.2631578947    0.0005060729
  529   -0.3461538462    0.0000000000    0.3157894737    0.0005060729
  530   -0.3461538462    0.0000000000    0.3684210526    0.0005060729
  531   -0.3461538462    0.0000000000    0.4210526316    0.0005060729
  532   -0.3461538462    0.0000000000    0.4736842105    0.0005060729
  533   -0.3461538462    0.1250000000   -0.4736842105    0.0005060729
  534   -0.3461538462    0.1250000000   -0.4210526316    0.0005060729
  535   -0.3461538462    0.1250000000   -0.3684210526    0.0005060729
  536   -0.3461538462    0.1250000000   -0.3157894737    0.0005060729
  537   -0.3461538462    0.1250000000   -0.2631578947    0.0005060729
  538   -0.3461538462    0.1250000000   -0.2105263158    0.0005060729
  539   -0.3461538462    0.1250000000   -0.1578947368    0.0005060729
  540   -0.3461538462    0.1250000000   -0.1052631579    0.0005060729
  541   -0.3461538462    0.1250000000   -0.0526315789    0.0005060729
  542   -0.3461538462    0.1250000000    0.0000000000    0.0005060729
  543   -0.3461538462    0.1250000000    0.0526315789    0.0005060729
  544   -0.3461538462    0.1250000000    0.1052631579    0.0005060729
  545   -0.3461538462    0.1250000000    0.1578947368    0.0005060729
  546   -0.3461538462    0.1250000000    0.2105263158    0.0005060729
  547   -0.3461538462    0.1250000000    0.2631578947    0.0005060729
  548   -0.3461538462    0.1250000000    0.3157894737    0.0005060729
  549   -0.3461538462    0.1250000000    0.3684210526    0.0005060729
  550   -0.3461538462    0.1250000000    0.4210526316    0.0005060729
  551   -0.3461538462    0.1250000000    0.4736842105    0.0005060729
  552   -0.3461538462    0.2500000000   -0.4736842105    0.0005060729
  553   -0.3461538462    0.2500000000   -0.4210526316    0.0005060729
  554   -0.3461538462    0.2500000000   -0.3684210526    0.0005060729
  555   -0.3461538462    0.2500000000   -0.3157894737    0.0005060729
  556   -0.3461538462    0.2500000000   -0.2631578947    0.0005060729
  557   -0.3461538462    0.2500000000   -0.2105263158    0.0005060729
  558   -0.3461538462    0.2500000000   -0.1578947368    0.0005060729
  559   -0.3461538462    0.2500000000   -0.1052631579    0.0005060729
  560   -0.3461538462    0.2500000000   -0.0526315789    0.0005060729
  561   -0.3461538462    0.2500000000    0.0000000000    0.0005060729
  562   -0.3461538462    0.2500000000    0.0526315789    0.0005060729
  563   -0.3461538462    0.2500000000    0.1052631579    0.0005060729
  564   -0.3461538462    0.2500000000    0.1578947368    0.0005060729
  565   -0.3461538462    0.2500000000    0.2105263158    0.0005060729
  566   -0.3461538462    0.2500000000    0.2631578947    0.0005060729
  567   -0.3461538462    0.2500000000    0.3157894737    0.0005060729
  568   -0.3461538462    0.2500000000    0.3684210526    0.0005060729
  569   -0.3461538462    0.2500000000    0.4210526316    0.0005060729
  570   -0.3461538462    0.2500000000    0.4736842105    0.0005060729
  571   -0.3461538462    0.3750000000   -0.4736842105    0.0005060729
  572   -0.3461538462    0.3750000000   -0.4210526316    0.0005060729
  573   -0.3461538462    0.3750000000   -0.3684210526    0.0005060729
  574   -0.3461538462    0.3750000000   -0.3157894737    0.0005060729
  575   -0.3461538462    0.3750000000   -0.2631578947    0.0005060729
  576   -0.3461538462    0.3750000000   -0.2105263158    0.0005060729
  577   -0.3461538462    0.3750000000   -0.1578947368    0.0005060729
  578   -0.3461538462    0.3750000000   -0.1052631579    0.0005060729
  579   -0.3461538462    0.3750000000   -0.0526315789    0.0005060729
  580   -0.3461538462    0.3750000000    0.0000000000    0.0005060729
  581   -0.3461538462    0.3750000000    0.0526315789    0.0005060729
  582   -0.3461538462    0.3750000000    0.1052631579    0.0005060729
  583   -0.3461538462    0.3750000000    0.1578947368    0.0005060729
  584   -0.3461538462    0.3750000000    0.2105263158    0.0005060729
  585   -0.3461538462    0.3750000000    0.2631578947    0.0005060729
  586   -0.3461538462    0.3750000000    0.3157894737    0.0005060729
  587   -0.3461538462    0.3750000000    0.3684210526    0.0005060729
  588   -0.3461538462    0.3750000000    0.4210526316    0.0005060729
  589   -0.3461538462    0.3750000000    0.4736842105    0.0005060729
  590   -0.3461538462    0.5000000000   -0.4736842105    0.0005060729
  591   -0.3461538462    0.5000000000   -0.4210526316    0.0005060729
  592   -0.3461538462    0.5000000000   -0.3684210526    0.0005060729
  593   -0.3461538462    0.5000000000   -0.3157894737    0.0005060729
  594   -0.3461538462    0.5000000000   -0.2631578947    0.0005060729
  595   -0.3461538462    0.5000000000   -0.2105263158    0.0005060729
  596   -0.3461538462    0.5000000000   -0.1578947368    0.0005060729
  597   -0.3461538462    0.5000000000   -0.1052631579    0.0005060729
  598   -0.3461538462    0.5000000000   -0.0526315789    0.0005060729
  599   -0.3461538462    0.5000000000    0.0000000000    0.0005060729
  600   -0.3461538462    0.5000000000    0.0526315789    0.0005060729
  601   -0.3461538462    0.5000000000    0.1052631579    0.0005060729
  602   -0.3461538462    0.5000000000    0.1578947368    0.0005060729
  603   -0.3461538462    0.5000000000    0.2105263158    0.0005060729
  604   -0.3461538462    0.5000000000    0.2631578947    0.0005060729
  605   -0.3461538462    0.5000000000    0.3157894737    0.0005060729
  606   -0.3461538462    0.5000000000    0.3684210526    0.0005060729
  607   -0.3461538462    0.5000000000    0.4210526316    0.0005060729
  608   -0.3461538462    0.5000000000    0.4736842105    0.0005060729
  609   -0.3076923077   -0.3750000000   -0.4736842105    0.0005060729
  610   -0.3076923077   -0.3750000000   -0.4210526316    0.0005060729
  611   -0.3076923077   -0.3750000000   -0.3684210526    0.0005060729
  612   -0.3076923077   -0.3750000000   -0.3157894737    0.0005060729
  613   -0.3076923077   -0.3750000000   -0.2631578947    0.0005060729
  614   -0.3076923077   -0.3750000000   -0.2105263158    0.0005060729
  615   -0.3076923077   -0.3750000000   -0.1578947368    0.0005060729
  616   -0.3076923077   -0.3750000000   -0.1052631579    0.0005060729
  617   -0.3076923077   -0.3750000000   -0.0526315789    0.0005060729
  618   -0.3076923077   -0.3750000000    0.0000000000    0.0005060729
  619   -0.3076923077   -0.3750000000    0.0526315789    0.0005060729
  620   -0.3076923077   -0.3750000000    0.1052631579    0.0005060729
  621   -0.3076923077   -0.3750000000    0.1578947368    0.0005060729
  622   -0.3076923077   -0.3750000000    0.2105263158    0.0005060729
  623   -0.3076923077   -0.3750000000    0.2631578947    0.0005060729
  624   -0.3076923077   -0.3750000000    0.3157894737    0.0005060729
  625   -0.3076923077   -0.3750000000    0.3684210526    0.0005060729
  626   -0.3076923077   -0.3750000000    0.4210526316    0.0005060729
  627   -0.3076923077   -0.3750000000    0.4736842105    0.0005060729
  628   -0.3076923077   -0.2500000000   -0.4736842105    0.0005060729
  629   -0.3076923077   -0.2500000000   -0.4210526316    0.0005060729
  630   -0.3076923077   -0.2500000000   -0.3684210526    0.0005060729
  631   -0.3076923077   -0.2500000000   -0.3157894737    0.0005060729
  632   -0.3076923077   -0.2500000000   -0.2631578947    0.0005060729
  633   -0.3076923077   -0.2500000000   -0.2105263158    0.0005060729
  634   -0.3076923077   -0.2500000000   -0.1578947368    0.0005060729
  635   -0.3076923077   -0.2500000000   -0.1052631579    0.0005060729
  636   -0.3076923077   -0.2500000000   -0.0526315789    0.0005060729
  637   -0.3076923077   -0.2500000000    0.0000000000    0.0005060729
  638   -0.3076923077   -0.2500000000    0.0526315789    0.0005060729
  639   -0.3076923077   -0.2500000000    0.1052631579    0.0005060729
  640   -0.3076923077   -0.2500000000    0.1578947368    0.0005060729
  641   -0.3076923077   -0.2500000000    0.2105263158    0.0005060729
  642   -0.3076923077   -0.2500000000    0.2631578947    0.0005060729
  643   -0.3076923077   -0.2500000000    0.3157894737    0.0005060729
  644   -0.3076923077   -0.2500000000    0.3684210526    0.0005060729
  645   -0.3076923077   -0.2500000000    0.4210526316    0.0005060729
  646   -0.3076923077   -0.2500000000    0.4736842105    0.0005060729
  647   -0.3076923077   -0.1250000000   -0.4736842105    0.0005060729
  648   -0.3076923077   -0.1250000000   -0.4210526316    0.0005060729
  649   -0.3076923077   -0.1250000000   -0.3684210526    0.0005060729
  650   -0.3076923077   -0.1250000000   -0.3157894737    0.0005060729
  651   -0.3076923077   -0.1250000000   -0.2631578947    0.0005060729
  652   -0.3076923077   -0.1250000000   -0.2105263158    0.0005060729
  653   -0.3076923077   -0.1250000000   -0.1578947368    0.0005060729
  654   -0.3076923077   -0.1250000000   -0.1052631579    0.0005060729
  655   -0.3076923077   -0.1250000000   -0.0526315789    0.0005060729
  656   -0.3076923077   -0.1250000000    0.0000000000    0.0005060729
  657   -0.3076923077   -0.1250000000    0.0526315789    0.0005060729
  658   -0.3076923077   -0.1250000000    0.1052631579    0.0005060729
  659   -0.3076923077   -0.1250000000    0.1578947368    0.0005060729
  660   -0.3076923077   -0.1250000000    0.2105263158    0.0005060729
  661   -0.3076923077   -0.1250000000    0.2631578947    0.0005060729
  662   -0.3076923077   -0.1250000000    0.3157894737    0.0005060729
  663   -0.3076923077   -0.1250000000    0.3684210526    0.0005060729
  664   -0.3076923077   -0.1250000000    0.4210526316    0.0005060729
  665   -0.3076923077   -0.1250000000    0.4736842105    0.0005060729
  666   -0.3076923077    0.0000000000   -0.4736842105    0.0005060729
  667   -0.3076923077    0.0000000000   -0.4210526316    0.0005060729
  668   -0.3076923077    0.0000000000   -0.3684210526    0.0005060729
  669   -0.3076923077    0.0000000000   -0.3157894737    0.0005060729
  670   -0.3076923077    0.0000000000   -0.2631578947    0.0005060729
  671   -0.3076923077    0.0000000000   -0.2105263158    0.0005060729
  672   -0.3076923077    0.0000000000   -0.1578947368    0.0005060729
  673   -0.3076923077    0.0000000000   -0.1052631579    0.0005060729
  674   -0.3076923077    0.0000000000   -0.0526315789    0.0005060729
  675   -0.3076923077    0.0000000000    0.0000000000    0.0005060729
  676   -0.3076923077    0.0000000000    0.0526315789    0.0005060729
  677   -0.3076923077    0.0000000000    0.1052631579    0.0005060729
  678   -0.3076923077    0.0000000000    0.1578947368    0.0005060729
  679   -0.3076923077    0.0000000000    0.2105263158    0.0005060729
  680   -0.3076923077    0.0000000000    0.2631578947    0.0005060729
  681   -0.3076923077    0.0000000000    0.3157894737    0.0005060729
  682   -0.3076923077    0.0000000000    0.3684210526    0.0005060729
  683   -0.3076923077    0.0000000000    0.4210526316    0.0005060729
  684   -0.3076923077    0.0000000000    0.4736842105    0.0005060729
  685   -0.3076923077    0.1250000000   -0.4736842105    0.0005060729
  686   -0.3076923077    0.1250000000   -0.4210526316    0.0005060729
  687   -0.3076923077    0.1250000000   -0.3684210526    0.0005060729
  688   -0.3076923077    0.1250000000   -0.3157894737    0.0005060729
  689   -0.3076923077    0.1250000000   -0.2631578947    0.0005060729
  690   -0.3076923077    0.1250000000   -0.2105263158    0.0005060729
  691   -0.3076923077    0.1250000000   -0.1578947368    0.0005060729
  692   -0.3076923077    0.1250000000   -0.1052631579    0.0005060729
  693   -0.3076923077    0.1250000000   -0.0526315789    0.0005060729
  694   -0.3076923077    0.1250000000    0.0000000000    0.0005060729
  695   -0.3076923077    0.1250000000    0.0526315789    0.0005060729
  696   -0.3076923077    0.1250000000    0.1052631579    0.0005060729
  697   -0.3076923077    0.1250000000    0.1578947368    0.0005060729
  698   -0.3076923077    0.1250000000    0.2105263158    0.0005060729
  699   -0.3076923077    0.1250000000    0.2631578947    0.0005060729
  700   -0.3076923077    0.1250000000    0.3157894737    0.0005060729
  701   -0.3076923077    0.1250000000    0.3684210526    0.0005060729
  702   -0.3076923077    0.1250000000    0.4210526316    0.0005060729
  703   -0.3076923077    0.1250000000    0.4736842105    0.0005060729
  704   -0.3076923077    0.2500000000   -0.4736842105    0.0005060729
  705   -0.3076923077    0.2500000000   -0.4210526316    0.0005060729
  706   -0.3076923077    0.2500000000   -0.3684210526    0.0005060729
  707   -0.3076923077    0.2500000000   -0.3157894737    0.0005060729
  708   -0.3076923077    0.2500000000   -0.2631578947    0.0005060729
  709   -0.3076923077    0.2500000000   -0.2105263158    0.0005060729
  710   -0.3076923077    0.2500000000   -0.1578947368    0.0005060729
  711   -0.3076923077    0.2500000000   -0.1052631579    0.0005060729
  712   -0.3076923077    0.2500000000   -0.0526315789    0.0005060729
  713   -0.3076923077    0.2500000000    0.0000000000    0.0005060729
  714   -0.3076923077    0.2500000000    0.0526315789    0.0005060729
  715   -0.3076923077    0.2500000000    0.1052631579    0.0005060729
  716   -0.3076923077    0.2500000000    0.1578947368    0.0005060729
  717   -0.3076923077    0.2500000000    0.2105263158    0.0005060729
  718   -0.3076923077    0.2500000000    0.2631578947    0.0005060729
  719   -0.3076923077    0.2500000000    0.3157894737    0.0005060729
  720   -0.3076923077    0.2500000000    0.3684210526    0.0005060729
  721   -0.3076923077    0.2500000000    0.4210526316    0.0005060729
  722   -0.3076923077    0.2500000000    0.4736842105    0.0005060729
  723   -0.3076923077    0.3750000000   -0.4736842105    0.0005060729
  724   -0.3076923077    0.3750000000   -0.4210526316    0.0005060729
  725   -0.3076923077    0.3750000000   -0.3684210526    0.0005060729
  726   -0.3076923077    0.3750000000   -0.3157894737    0.0005060729
  727   -0.3076923077    0.3750000000   -0.2631578947    0.0005060729
  728   -0.3076923077    0.3750000000   -0.2105263158    0.0005060729
  729   -0.3076923077    0.3750000000   -0.1578947368    0.0005060729
  730   -0.3076923077    0.3750000000   -0.1052631579    0.0005060729
  731   -0.3076923077    0.3750000000   -0.0526315789    0.0005060729
  732   -0.3076923077    0.3750000000    0.0000000000    0.0005060729
  733   -0.3076923077    0.3750000000    0.0526315789    0.0005060729
  734   -0.3076923077    0.3750000000    0.1052631579    0.0005060729
  735   -0.3076923077    0.3750000000    0.1578947368    0.0005060729
  736   -0.3076923077    0.3750000000    0.2105263158    0.0005060729
  737   -0.3076923077    0.3750000000    0.2631578947    0.0005060729
  738   -0.3076923077    0.3750000000    0.3157894737    0.0005060729
  739   -0.3076923077    0.3750000000    0.3684210526    0.0005060729
  740   -0.3076923077    0.3750000000    0.4210526316    0.0005060729
  741   -0.3076923077    0.3750000000    0.4736842105    0.0005060729
  742   -0.3076923077    0.5000000000   -0.4736842105    0.0005060729
  743   -0.3076923077    0.5000000000   -0.4210526316    0.0005060729
  744   -0.3076923077    0.5000000000   -0.3684210526    0.0005060729
  745   -0.3076923077    0.5000000000   -0.3157894737    0.0005060729
  746   -0.3076923077    0.5000000000   -0.2631578947    0.0005060729
  747   -0.3076923077    0.5000000000   -0.2105263158    0.0005060729
  748   -0.3076923077    0.5000000000   -0.1578947368    0.0005060729
  749   -0.3076923077    0.5000000000   -0.1052631579    0.0005060729
  750   -0.3076923077    0.5000000000   -0.0526315789    0.0005060729
  751   -0.3076923077    0.5000000000    0.0000000000    0.0005060729
  752   -0.3076923077    0.5000000000    0.0526315789    0.0005060729
  753   -0.3076923077    0.5000000000    0.1052631579    0.0005060729
  754   -0.3076923077    0.5000000000    0.1578947368    0.0005060729
  755   -0.3076923077    0.5000000000    0.2105263158    0.0005060729
  756   -0.3076923077    0.5000000000    0.2631578947    0.0005060729
  757   -0.3076923077    0.5000000000    0.3157894737    0.0005060729
  758   -0.3076923077    0.5000000000    0.3684210526    0.0005060729
  759   -0.3076923077    0.5000000000    0.4210526316    0.0005060729
  760   -0.3076923077    0.5000000000    0.4736842105    0.0005060729
  761   -0.2692307692   -0.3750000000   -0.4736842105    0.0005060729
  762   -0.2692307692   -0.3750000000   -0.4210526316    0.0005060729
  763   -0.2692307692   -0.3750000000   -0.3684210526    0.0005060729
  764   -0.2692307692   -0.3750000000   -0.3157894737    0.0005060729
  765   -0.2692307692   -0.3750000000   -0.2631578947    0.0005060729
  766   -0.2692307692   -0.3750000000   -0.2105263158    0.0005060729
  767   -0.2692307692   -0.3750000000   -0.1578947368    0.0005060729
  768   -0.2692307692   -0.3750000000   -0.1052631579    0.0005060729
  769   -0.2692307692   -0.3750000000   -0.0526315789    0.0005060729
  770   -0.2692307692   -0.3750000000    0.0000000000    0.0005060729
  771   -0.2692307692   -0.3750000000    0.0526315789    0.0005060729
  772   -0.2692307692   -0.3750000000    0.1052631579    0.0005060729
  773   -0.2692307692   -0.3750000000    0.1578947368    0.0005060729
  774   -0.2692307692   -0.3750000000    0.2105263158    0.0005060729
  775   -0.2692307692   -0.3750000000    0.2631578947    0.0005060729
  776   -0.2692307692   -0.3750000000    0.3157894737    0.0005060729
  777   -0.2692307692   -0.3750000000    0.3684210526    0.0005060729
  778   -0.2692307692   -0.3750000000    0.4210526316    0.0005060729
  779   -0.2692307692   -0.3750000000    0.4736842105    0.0005060729
  780   -0.2692307692   -0.2500000000   -0.4736842105    0.0005060729
  781   -0.2692307692   -0.2500000000   -0.4210526316    0.0005060729
  782   -0.2692307692   -0.2500000000   -0.3684210526    0.0005060729
  783   -0.2692307692   -0.2500000000   -0.3157894737    0.0005060729
  784   -0.2692307692   -0.2500000000   -0.2631578947    0.0005060729
  785   -0.2692307692   -0.2500000000   -0.2105263158    0.0005060729
  786   -0.2692307692   -0.2500000000   -0.1578947368    0.0005060729
  787   -0.2692307692   -0.2500000000   -0.1052631579    0.0005060729
  788   -0.2692307692   -0.2500000000   -0.0526315789    0.0005060729
  789   -0.2692307692   -0.2500000000    0.0000000000    0.0005060729
  790   -0.2692307692   -0.2500000000    0.0526315789    0.0005060729
  791   -0.2692307692   -0.2500000000    0.1052631579    0.0005060729
  792   -0.2692307692   -0.2500000000    0.1578947368    0.0005060729
  793   -0.2692307692   -0.2500000000    0.2105263158    0.0005060729
  794   -0.2692307692   -0.2500000000    0.2631578947    0.0005060729
  795   -0.2692307692   -0.2500000000    0.3157894737    0.0005060729
  796   -0.2692307692   -0.2500000000    0.3684210526    0.0005060729
  797   -0.2692307692   -0.2500000000    0.4210526316    0.0005060729
  798   -0.2692307692   -0.2500000000    0.4736842105    0.0005060729
  799   -0.2692307692   -0.1250000000   -0.4736842105    0.0005060729
  800   -0.2692307692   -0.1250000000   -0.4210526316    0.0005060729
  801   -0.2692307692   -0.1250000000   -0.3684210526    0.0005060729
  802   -0.2692307692   -0.1250000000   -0.3157894737    0.0005060729
  803   -0.2692307692   -0.1250000000   -0.2631578947    0.0005060729
  804   -0.2692307692   -0.1250000000   -0.2105263158    0.0005060729
  805   -0.2692307692   -0.1250000000   -0.1578947368    0.0005060729
  806   -0.2692307692   -0.1250000000   -0.1052631579    0.0005060729
  807   -0.2692307692   -0.1250000000   -0.0526315789    0.0005060729
  808   -0.2692307692   -0.1250000000    0.0000000000    0.0005060729
  809   -0.2692307692   -0.1250000000    0.0526315789    0.0005060729
  810   -0.2692307692   -0.1250000000    0.1052631579    0.0005060729
  811   -0.2692307692   -0.1250000000    0.1578947368    0.0005060729
  812   -0.2692307692   -0.1250000000    0.2105263158    0.0005060729
  813   -0.2692307692   -0.1250000000    0.2631578947    0.0005060729
  814   -0.2692307692   -0.1250000000    0.3157894737    0.0005060729
  815   -0.2692307692   -0.1250000000    0.3684210526    0.0005060729
  816   -0.2692307692   -0.1250000000    0.4210526316    0.0005060729
  817   -0.2692307692   -0.1250000000    0.4736842105    0.0005060729
  818   -0.2692307692    0.0000000000   -0.4736842105    0.0005060729
  819   -0.2692307692    0.0000000000   -0.4210526316    0.0005060729
  820   -0.2692307692    0.0000000000   -0.3684210526    0.0005060729
  821   -0.2692307692    0.0000000000   -0.3157894737    0.0005060729
  822   -0.2692307692    0.0000000000   -0.2631578947    0.0005060729
  823   -0.2692307692    0.0000000000   -0.2105263158    0.0005060729
  824   -0.2692307692    0.0000000000   -0.1578947368    0.0005060729
  825   -0.2692307692    0.0000000000   -0.1052631579    0.0005060729
  826   -0.2692307692    0.0000000000   -0.0526315789    0.0005060729
  827   -0.2692307692    0.0000000000    0.0000000000    0.0005060729
  828   -0.2692307692    0.0000000000    0.0526315789    0.0005060729
  829   -0.2692307692    0.0000000000    0.1052631579    0.0005060729
  830   -0.2692307692    0.0000000000    0.1578947368    0.0005060729
  831   -0.2692307692    0.0000000000    0.2105263158    0.0005060729
  832   -0.2692307692    0.0000000000    0.2631578947    0.0005060729
  833   -0.2692307692    0.0000000000    0.3157894737    0.0005060729
  834   -0.2692307692    0.0000000000    0.3684210526    0.0005060729
  835   -0.2692307692    0.0000000000    0.4210526316    0.0005060729
  836   -0.2692307692    0.0000000000    0.4736842105    0.0005060729
  837   -0.2692307692    0.1250000000   -0.4736842105    0.0005060729
  838   -0.2692307692    0.1250000000   -0.4210526316    0.0005060729
  839   -0.2692307692    0.1250000000   -0.3684210526    0.0005060729
  840   -0.2692307692    0.1250000000   -0.3157894737    0.0005060729
  841   -0.2692307692    0.1250000000   -0.2631578947    0.0005060729
  842   -0.2692307692    0.1250000000   -0.2105263158    0.0005060729
  843   -0.2692307692    0.1250000000   -0.1578947368    0.0005060729
  844   -0.2692307692    0.1250000000   -0.1052631579    0.0005060729
  845   -0.2692307692    0.1250000000   -0.0526315789    0.0005060729
  846   -0.2692307692    0.1250000000    0.0000000000    0.0005060729
  847   -0.2692307692    0.1250000000    0.0526315789    0.0005060729
  848   -0.2692307692    0.1250000000    0.1052631579    0.0005060729
  849   -0.2692307692    0.1250000000    0.1578947368    0.0005060729
  850   -0.2692307692    0.1250000000    0.2105263158    0.0005060729
  851   -0.2692307692    0.1250000000    0.2631578947    0.0005060729
  852   -0.2692307692    0.1250000000    0.3157894737    0.0005060729
  853   -0.2692307692    0.1250000000    0.3684210526    0.0005060729
  854   -0.2692307692    0.1250000000    0.4210526316    0.0005060729
  855   -0.2692307692    0.1250000000    0.4736842105    0.0005060729
  856   -0.2692307692    0.2500000000   -0.4736842105    0.0005060729
  857   -0.2692307692    0.2500000000   -0.4210526316    0.0005060729
  858   -0.2692307692    0.2500000000   -0.3684210526    0.0005060729
  859   -0.2692307692    0.2500000000   -0.3157894737    0.0005060729
  860   -0.2692307692    0.2500000000   -0.2631578947    0.0005060729
  861   -0.2692307692    0.2500000000   -0.2105263158    0.0005060729
  862   -0.2692307692    0.2500000000   -0.1578947368    0.0005060729
  863   -0.2692307692    0.2500000000   -0.1052631579    0.0005060729
  864   -0.2692307692    0.2500000000   -0.0526315789    0.0005060729
  865   -0.2692307692    0.2500000000    0.0000000000    0.0005060729
  866   -0.2692307692    0.2500000000    0.0526315789    0.0005060729
  867   -0.2692307692    0.2500000000    0.1052631579    0.0005060729
  868   -0.2692307692    0.2500000000    0.1578947368    0.0005060729
  869   -0.2692307692    0.2500000000    0.2105263158    0.0005060729
  870   -0.2692307692    0.2500000000    0.2631578947    0.0005060729
  871   -0.2692307692    0.2500000000    0.3157894737    0.0005060729
  872   -0.2692307692    0.2500000000    0.3684210526    0.0005060729
  873   -0.2692307692    0.2500000000    0.4210526316    0.0005060729
  874   -0.2692307692    0.2500000000    0.4736842105    0.0005060729
  875   -0.2692307692    0.3750000000   -0.4736842105    0.0005060729
  876   -0.2692307692    0.3750000000   -0.4210526316    0.0005060729
  877   -0.2692307692    0.3750000000   -0.3684210526    0.0005060729
  878   -0.2692307692    0.3750000000   -0.3157894737    0.0005060729
  879   -0.2692307692    0.3750000000   -0.2631578947    0.0005060729
  880   -0.2692307692    0.3750000000   -0.2105263158    0.0005060729
  881   -0.2692307692    0.3750000000   -0.1578947368    0.0005060729
  882   -0.2692307692    0.3750000000   -0.1052631579    0.0005060729
  883   -0.2692307692    0.3750000000   -0.0526315789    0.0005060729
  884   -0.2692307692    0.3750000000    0.0000000000    0.0005060729
  885   -0.2692307692    0.3750000000    0.0526315789    0.0005060729
  886   -0.2692307692    0.3750000000    0.1052631579    0.0005060729
  887   -0.2692307692    0.3750000000    0.1578947368    0.0005060729
  888   -0.2692307692    0.3750000000    0.2105263158    0.0005060729
  889   -0.2692307692    0.3750000000    0.2631578947    0.0005060729
  890   -0.2692307692    0.3750000000    0.3157894737    0.0005060729
  891   -0.2692307692    0.3750000000    0.3684210526    0.0005060729
  892   -0.2692307692    0.3750000000    0.4210526316    0.0005060729
  893   -0.2692307692    0.3750000000    0.4736842105    0.0005060729
  894   -0.2692307692    0.5000000000   -0.4736842105    0.0005060729
  895   -0.2692307692    0.5000000000   -0.4210526316    0.0005060729
  896   -0.2692307692    0.5000000000   -0.3684210526    0.0005060729
  897   -0.2692307692    0.5000000000   -0.3157894737    0.0005060729
  898   -0.2692307692    0.5000000000   -0.2631578947    0.0005060729
  899   -0.2692307692    0.5000000000   -0.2105263158    0.0005060729
  900   -0.2692307692    0.5000000000   -0.1578947368    0.0005060729
  901   -0.2692307692    0.5000000000   -0.1052631579    0.0005060729
  902   -0.2692307692    0.5000000000   -0.0526315789    0.0005060729
  903   -0.2692307692    0.5000000000    0.0000000000    0.0005060729
  904   -0.2692307692    0.5000000000    0.0526315789    0.0005060729
  905   -0.2692307692    0.5000000000    0.1052631579    0.0005060729
  906   -0.2692307692    0.5000000000    0.1578947368    0.0005060729
  907   -0.2692307692    0.5000000000    0.2105263158    0.0005060729
  908   -0.2692307692    0.5000000000    0.2631578947    0.0005060729
  909   -0.2692307692    0.5000000000    0.3157894737    0.0005060729
  910   -0.2692307692    0.5000000000    0.3684210526    0.0005060729
  911   -0.2692307692    0.5000000000    0.4210526316    0.0005060729
  912   -0.2692307692    0.5000000000    0.4736842105    0.0005060729
  913   -0.2307692308   -0.3750000000   -0.4736842105    0.0005060729
  914   -0.2307692308   -0.3750000000   -0.4210526316    0.0005060729
  915   -0.2307692308   -0.3750000000   -0.3684210526    0.0005060729
  916   -0.2307692308   -0.3750000000   -0.3157894737    0.0005060729
  917   -0.2307692308   -0.3750000000   -0.2631578947    0.0005060729
  918   -0.2307692308   -0.3750000000   -0.2105263158    0.0005060729
  919   -0.2307692308   -0.3750000000   -0.1578947368    0.0005060729
  920   -0.2307692308   -0.3750000000   -0.1052631579    0.0005060729
  921   -0.2307692308   -0.3750000000   -0.0526315789    0.0005060729
  922   -0.2307692308   -0.3750000000    0.0000000000    0.0005060729
  923   -0.2307692308   -0.3750000000    0.0526315789    0.0005060729
  924   -0.2307692308   -0.3750000000    0.1052631579    0.0005060729
  925   -0.2307692308   -0.3750000000    0.1578947368    0.0005060729
  926   -0.2307692308   -0.3750000000    0.2105263158    0.0005060729
  927   -0.2307692308   -0.3750000000    0.2631578947    0.0005060729
  928   -0.2307692308   -0.3750000000    0.3157894737    0.0005060729
  929   -0.2307692308   -0.3750000000    0.3684210526    0.0005060729
  930   -0.2307692308   -0.3750000000    0.4210526316    0.0005060729
  931   -0.2307692308   -0.3750000000    0.4736842105    0.0005060729
  932   -0.2307692308   -0.2500000000   -0.4736842105    0.0005060729
  933   -0.2307692308   -0.2500000000   -0.4210526316    0.0005060729
  934   -0.2307692308   -0.2500000000   -0.3684210526    0.0005060729
  935   -0.2307692308   -0.2500000000   -0.3157894737    0.0005060729
  936   -0.2307692308   -0.2500000000   -0.2631578947    0.0005060729
  937   -0.2307692308   -0.2500000000   -0.2105263158    0.0005060729
  938   -0.2307692308   -0.2500000000   -0.1578947368    0.0005060729
  939   -0.2307692308   -0.2500000000   -0.1052631579    0.0005060729
  940   -0.2307692308   -0.2500000000   -0.0526315789    0.0005060729
  941   -0.2307692308   -0.2500000000    0.0000000000    0.0005060729
  942   -0.2307692308   -0.2500000000    0.0526315789    0.0005060729
  943   -0.2307692308   -0.2500000000    0.1052631579    0.0005060729
  944   -0.2307692308   -0.2500000000    0.1578947368    0.0005060729
  945   -0.2307692308   -0.2500000000    0.2105263158    0.0005060729
  946   -0.2307692308   -0.2500000000    0.2631578947    0.0005060729
  947   -0.2307692308   -0.2500000000    0.3157894737    0.0005060729
  948   -0.2307692308   -0.2500000000    0.3684210526    0.0005060729
  949   -0.2307692308   -0.2500000000    0.4210526316    0.0005060729
  950   -0.2307692308   -0.2500000000    0.4736842105    0.0005060729
  951   -0.2307692308   -0.1250000000   -0.4736842105    0.0005060729
  952   -0.2307692308   -0.1250000000   -0.4210526316    0.0005060729
  953   -0.2307692308   -0.1250000000   -0.3684210526    0.0005060729
  954   -0.2307692308   -0.1250000000   -0.3157894737    0.0005060729
  955   -0.2307692308   -0.1250000000   -0.2631578947    0.0005060729
  956   -0.2307692308   -0.1250000000   -0.2105263158    0.0005060729
  957   -0.2307692308   -0.1250000000   -0.1578947368    0.0005060729
  958   -0.2307692308   -0.1250000000   -0.1052631579    0.0005060729
  959   -0.2307692308   -0.1250000000   -0.0526315789    0.0005060729
  960   -0.2307692308   -0.1250000000    0.0000000000    0.0005060729
  961   -0.2307692308   -0.1250000000    0.0526315789    0.0005060729
  962   -0.2307692308   -0.1250000000    0.1052631579    0.0005060729
  963   -0.2307692308   -0.1250000000    0.1578947368    0.0005060729
  964   -0.2307692308   -0.1250000000    0.2105263158    0.0005060729
  965   -0.2307692308   -0.1250000000    0.2631578947    0.0005060729
  966   -0.2307692308   -0.1250000000    0.3157894737    0.0005060729
  967   -0.2307692308   -0.1250000000    0.3684210526    0.0005060729
  968   -0.2307692308   -0.1250000000    0.4210526316    0.0005060729
  969   -0.2307692308   -0.1250000000    0.4736842105    0.0005060729
  970   -0.2307692308    0.0000000000   -0.4736842105    0.0005060729
  971   -0.2307692308    0.0000000000   -0.4210526316    0.0005060729
  972   -0.2307692308    0.0000000000   -0.3684210526    0.0005060729
  973   -0.2307692308    0.0000000000   -0.3157894737    0.0005060729
  974   -0.2307692308    0.0000000000   -0.2631578947    0.0005060729
  975   -0.2307692308    0.0000000000   -0.2105263158    0.0005060729
  976   -0.2307692308    0.0000000000   -0.1578947368    0.0005060729
  977   -0.2307692308    0.0000000000   -0.1052631579    0.0005060729
  978   -0.2307692308    0.0000000000   -0.0526315789    0.0005060729
  979   -0.2307692308    0.0000000000    0.0000000000    0.0005060729
  980   -0.2307692308    0.0000000000    0.0526315789    0.0005060729
  981   -0.2307692308    0.0000000000    0.1052631579    0.0005060729
  982   -0.2307692308    0.0000000000    0.1578947368    0.0005060729
  983   -0.2307692308    0.0000000000    0.2105263158    0.0005060729
  984   -0.2307692308    0.0000000000    0.2631578947    0.0005060729
  985   -0.2307692308    0.0000000000    0.3157894737    0.0005060729
  986   -0.2307692308    0.0000000000    0.3684210526    0.0005060729
  987   -0.2307692308    0.0000000000    0.4210526316    0.0005060729
  988   -0.2307692308    0.0000000000    0.4736842105    0.0005060729
  989   -0.2307692308    0.1250000000   -0.4736842105    0.0005060729
  990   -0.2307692308    0.1250000000   -0.4210526316    0.0005060729
  991   -0.2307692308    0.1250000000   -0.3684210526    0.0005060729
  992   -0.2307692308    0.1250000000   -0.3157894737    0.0005060729
  993   -0.2307692308    0.1250000000   -0.2631578947    0.0005060729
  994   -0.2307692308    0.1250000000   -0.2105263158    0.0005060729
  995   -0.2307692308    0.1250000000   -0.1578947368    0.0005060729
  996   -0.2307692308    0.1250000000   -0.1052631579    0.0005060729
  997   -0.2307692308    0.1250000000   -0.0526315789    0.0005060729
  998   -0.2307692308    0.1250000000    0.0000000000    0.0005060729
  999   -0.2307692308    0.1250000000    0.0526315789    0.0005060729
 1000   -0.2307692308    0.1250000000    0.1052631579    0.0005060729
 1001   -0.2307692308    0.1250000000    0.1578947368    0.0005060729
 1002   -0.2307692308    0.1250000000    0.2105263158    0.0005060729
 1003   -0.2307692308    0.1250000000    0.2631578947    0.0005060729
 1004   -0.2307692308    0.1250000000    0.3157894737    0.0005060729
 1005   -0.2307692308    0.1250000000    0.3684210526    0.0005060729
 1006   -0.2307692308    0.1250000000    0.4210526316    0.0005060729
 1007   -0.2307692308    0.1250000000    0.4736842105    0.0005060729
 1008   -0.2307692308    0.2500000000   -0.4736842105    0.0005060729
 1009   -0.2307692308    0.2500000000   -0.4210526316    0.0005060729
 1010   -0.2307692308    0.2500000000   -0.3684210526    0.0005060729
 1011   -0.2307692308    0.2500000000   -0.3157894737    0.0005060729
 1012   -0.2307692308    0.2500000000   -0.2631578947    0.0005060729
 1013   -0.2307692308    0.2500000000   -0.2105263158    0.0005060729
 1014   -0.2307692308    0.2500000000   -0.1578947368    0.0005060729
 1015   -0.2307692308    0.2500000000   -0.1052631579    0.0005060729
 1016   -0.2307692308    0.2500000000   -0.0526315789    0.0005060729
 1017   -0.2307692308    0.2500000000    0.0000000000    0.0005060729
 1018   -0.2307692308    0.2500000000    0.0526315789    0.0005060729
 1019   -0.2307692308    0.2500000000    0.1052631579    0.0005060729
 1020   -0.2307692308    0.2500000000    0.1578947368    0.0005060729
 1021   -0.2307692308    0.2500000000    0.2105263158    0.0005060729
 1022   -0.2307692308    0.2500000000    0.2631578947    0.0005060729
 1023   -0.2307692308    0.2500000000    0.3157894737    0.0005060729
 1024   -0.2307692308    0.2500000000    0.3684210526    0.0005060729
 1025   -0.2307692308    0.2500000000    0.4210526316    0.0005060729
 1026   -0.2307692308    0.2500000000    0.4736842105    0.0005060729
 1027   -0.2307692308    0.3750000000   -0.4736842105    0.0005060729
 1028   -0.2307692308    0.3750000000   -0.4210526316    0.0005060729
 1029   -0.2307692308    0.3750000000   -0.3684210526    0.0005060729
 1030   -0.2307692308    0.3750000000   -0.3157894737    0.0005060729
 1031   -0.2307692308    0.3750000000   -0.2631578947    0.0005060729
 1032   -0.2307692308    0.3750000000   -0.2105263158    0.0005060729
 1033   -0.2307692308    0.3750000000   -0.1578947368    0.0005060729
 1034   -0.2307692308    0.3750000000   -0.1052631579    0.0005060729
 1035   -0.2307692308    0.3750000000   -0.0526315789    0.0005060729
 1036   -0.2307692308    0.3750000000    0.0000000000    0.0005060729
 1037   -0.2307692308    0.3750000000    0.0526315789    0.0005060729
 1038   -0.2307692308    0.3750000000    0.1052631579    0.0005060729
 1039   -0.2307692308    0.3750000000    0.1578947368    0.0005060729
 1040   -0.2307692308    0.3750000000    0.2105263158    0.0005060729
 1041   -0.2307692308    0.3750000000    0.2631578947    0.0005060729
 1042   -0.2307692308    0.3750000000    0.3157894737    0.0005060729
 1043   -0.2307692308    0.3750000000    0.3684210526    0.0005060729
 1044   -0.2307692308    0.3750000000    0.4210526316    0.0005060729
 1045   -0.2307692308    0.3750000000    0.4736842105    0.0005060729
 1046   -0.2307692308    0.5000000000   -0.4736842105    0.0005060729
 1047   -0.2307692308    0.5000000000   -0.4210526316    0.0005060729
 1048   -0.2307692308    0.5000000000   -0.3684210526    0.0005060729
 1049   -0.2307692308    0.5000000000   -0.3157894737    0.0005060729
 1050   -0.2307692308    0.5000000000   -0.2631578947    0.0005060729
 1051   -0.2307692308    0.5000000000   -0.2105263158    0.0005060729
 1052   -0.2307692308    0.5000000000   -0.1578947368    0.0005060729
 1053   -0.2307692308    0.5000000000   -0.1052631579    0.0005060729
 1054   -0.2307692308    0.5000000000   -0.0526315789    0.0005060729
 1055   -0.2307692308    0.5000000000    0.0000000000    0.0005060729
 1056   -0.2307692308    0.5000000000    0.0526315789    0.0005060729
 1057   -0.2307692308    0.5000000000    0.1052631579    0.0005060729
 1058   -0.2307692308    0.5000000000    0.1578947368    0.0005060729
 1059   -0.2307692308    0.5000000000    0.2105263158    0.0005060729
 1060   -0.2307692308    0.5000000000    0.2631578947    0.0005060729
 1061   -0.2307692308    0.5000000000    0.3157894737    0.0005060729
 1062   -0.2307692308    0.5000000000    0.3684210526    0.0005060729
 1063   -0.2307692308    0.5000000000    0.4210526316    0.0005060729
 1064   -0.2307692308    0.5000000000    0.4736842105    0.0005060729
 1065   -0.1923076923   -0.3750000000   -0.4736842105    0.0005060729
 1066   -0.1923076923   -0.3750000000   -0.4210526316    0.0005060729
 1067   -0.1923076923   -0.3750000000   -0.3684210526    0.0005060729
 1068   -0.1923076923   -0.3750000000   -0.3157894737    0.0005060729
 1069   -0.1923076923   -0.3750000000   -0.2631578947    0.0005060729
 1070   -0.1923076923   -0.3750000000   -0.2105263158    0.0005060729
 1071   -0.1923076923   -0.3750000000   -0.1578947368    0.0005060729
 1072   -0.1923076923   -0.3750000000   -0.1052631579    0.0005060729
 1073   -0.1923076923   -0.3750000000   -0.0526315789    0.0005060729
 1074   -0.1923076923   -0.3750000000    0.0000000000    0.0005060729
 1075   -0.1923076923   -0.3750000000    0.0526315789    0.0005060729
 1076   -0.1923076923   -0.3750000000    0.1052631579    0.0005060729
 1077   -0.1923076923   -0.3750000000    0.1578947368    0.0005060729
 1078   -0.1923076923   -0.3750000000    0.2105263158    0.0005060729
 1079   -0.1923076923   -0.3750000000    0.2631578947    0.0005060729
 1080   -0.1923076923   -0.3750000000    0.3157894737    0.0005060729
 1081   -0.1923076923   -0.3750000000    0.3684210526    0.0005060729
 1082   -0.1923076923   -0.3750000000    0.4210526316    0.0005060729
 1083   -0.1923076923   -0.3750000000    0.4736842105    0.0005060729
 1084   -0.1923076923   -0.2500000000   -0.4736842105    0.0005060729
 1085   -0.1923076923   -0.2500000000   -0.4210526316    0.0005060729
 1086   -0.1923076923   -0.2500000000   -0.3684210526    0.0005060729
 1087   -0.1923076923   -0.2500000000   -0.3157894737    0.0005060729
 1088   -0.1923076923   -0.2500000000   -0.2631578947    0.0005060729
 1089   -0.1923076923   -0.2500000000   -0.2105263158    0.0005060729
 1090   -0.1923076923   -0.2500000000   -0.1578947368    0.0005060729
 1091   -0.1923076923   -0.2500000000   -0.1052631579    0.0005060729
 1092   -0.1923076923   -0.2500000000   -0.0526315789    0.0005060729
 1093   -0.1923076923   -0.2500000000    0.0000000000    0.0005060729
 1094   -0.1923076923   -0.2500000000    0.0526315789    0.0005060729
 1095   -0.1923076923   -0.2500000000    0.1052631579    0.0005060729
 1096   -0.1923076923   -0.2500000000    0.1578947368    0.0005060729
 1097   -0.1923076923   -0.2500000000    0.2105263158    0.0005060729
 1098   -0.1923076923   -0.2500000000    0.2631578947    0.0005060729
 1099   -0.1923076923   -0.2500000000    0.3157894737    0.0005060729
 1100   -0.1923076923   -0.2500000000    0.3684210526    0.0005060729
 1101   -0.1923076923   -0.2500000000    0.4210526316    0.0005060729
 1102   -0.1923076923   -0.2500000000    0.4736842105    0.0005060729
 1103   -0.1923076923   -0.1250000000   -0.4736842105    0.0005060729
 1104   -0.1923076923   -0.1250000000   -0.4210526316    0.0005060729
 1105   -0.1923076923   -0.1250000000   -0.3684210526    0.0005060729
 1106   -0.1923076923   -0.1250000000   -0.3157894737    0.0005060729
 1107   -0.1923076923   -0.1250000000   -0.2631578947    0.0005060729
 1108   -0.1923076923   -0.1250000000   -0.2105263158    0.0005060729
 1109   -0.1923076923   -0.1250000000   -0.1578947368    0.0005060729
 1110   -0.1923076923   -0.1250000000   -0.1052631579    0.0005060729
 1111   -0.1923076923   -0.1250000000   -0.0526315789    0.0005060729
 1112   -0.1923076923   -0.1250000000    0.0000000000    0.0005060729
 1113   -0.1923076923   -0.1250000000    0.0526315789    0.0005060729
 1114   -0.1923076923   -0.1250000000    0.1052631579    0.0005060729
 1115   -0.1923076923   -0.1250000000    0.1578947368    0.0005060729
 1116   -0.1923076923   -0.1250000000    0.2105263158    0.0005060729
 1117   -0.1923076923   -0.1250000000    0.2631578947    0.0005060729
 1118   -0.1923076923   -0.1250000000    0.3157894737    0.0005060729
 1119   -0.1923076923   -0.1250000000    0.3684210526    0.0005060729
 1120   -0.1923076923   -0.1250000000    0.4210526316    0.0005060729
 1121   -0.1923076923   -0.1250000000    0.4736842105    0.0005060729
 1122   -0.1923076923    0.0000000000   -0.4736842105    0.0005060729
 1123   -0.1923076923    0.0000000000   -0.4210526316    0.0005060729
 1124   -0.1923076923    0.0000000000   -0.3684210526    0.0005060729
 1125   -0.1923076923    0.0000000000   -0.3157894737    0.0005060729
 1126   -0.1923076923    0.0000000000   -0.2631578947    0.0005060729
 1127   -0.1923076923    0.0000000000   -0.2105263158    0.0005060729
 1128   -0.1923076923    0.0000000000   -0.1578947368    0.0005060729
 1129   -0.1923076923    0.0000000000   -0.1052631579    0.0005060729
 1130   -0.1923076923    0.0000000000   -0.0526315789    0.0005060729
 1131   -0.1923076923    0.0000000000    0.0000000000    0.0005060729
 1132   -0.1923076923    0.0000000000    0.0526315789    0.0005060729
 1133   -0.1923076923    0.0000000000    0.1052631579    0.0005060729
 1134   -0.1923076923    0.0000000000    0.1578947368    0.0005060729
 1135   -0.1923076923    0.0000000000    0.2105263158    0.0005060729
 1136   -0.1923076923    0.0000000000    0.2631578947    0.0005060729
 1137   -0.1923076923    0.0000000000    0.3157894737    0.0005060729
 1138   -0.1923076923    0.0000000000    0.3684210526    0.0005060729
 1139   -0.1923076923    0.0000000000    0.4210526316    0.0005060729
 1140   -0.1923076923    0.0000000000    0.4736842105    0.0005060729
 1141   -0.1923076923    0.1250000000   -0.4736842105    0.0005060729
 1142   -0.1923076923    0.1250000000   -0.4210526316    0.0005060729
 1143   -0.1923076923    0.1250000000   -0.3684210526    0.0005060729
 1144   -0.1923076923    0.1250000000   -0.3157894737    0.0005060729
 1145   -0.1923076923    0.1250000000   -0.2631578947    0.0005060729
 1146   -0.1923076923    0.1250000000   -0.2105263158    0.0005060729
 1147   -0.1923076923    0.1250000000   -0.1578947368    0.0005060729
 1148   -0.1923076923    0.1250000000   -0.1052631579    0.0005060729
 1149   -0.1923076923    0.1250000000   -0.0526315789    0.0005060729
 1150   -0.1923076923    0.1250000000    0.0000000000    0.0005060729
 1151   -0.1923076923    0.1250000000    0.0526315789    0.0005060729
 1152   -0.1923076923    0.1250000000    0.1052631579    0.0005060729
 1153   -0.1923076923    0.1250000000    0.1578947368    0.0005060729
 1154   -0.1923076923    0.1250000000    0.2105263158    0.0005060729
 1155   -0.1923076923    0.1250000000    0.2631578947    0.0005060729
 1156   -0.1923076923    0.1250000000    0.3157894737    0.0005060729
 1157   -0.1923076923    0.1250000000    0.3684210526    0.0005060729
 1158   -0.1923076923    0.1250000000    0.4210526316    0.0005060729
 1159   -0.1923076923    0.1250000000    0.4736842105    0.0005060729
 1160   -0.1923076923    0.2500000000   -0.4736842105    0.0005060729
 1161   -0.1923076923    0.2500000000   -0.4210526316    0.0005060729
 1162   -0.1923076923    0.2500000000   -0.3684210526    0.0005060729
 1163   -0.1923076923    0.2500000000   -0.3157894737    0.0005060729
 1164   -0.1923076923    0.2500000000   -0.2631578947    0.0005060729
 1165   -0.1923076923    0.2500000000   -0.2105263158    0.0005060729
 1166   -0.1923076923    0.2500000000   -0.1578947368    0.0005060729
 1167   -0.1923076923    0.2500000000   -0.1052631579    0.0005060729
 1168   -0.1923076923    0.2500000000   -0.0526315789    0.0005060729
 1169   -0.1923076923    0.2500000000    0.0000000000    0.0005060729
 1170   -0.1923076923    0.2500000000    0.0526315789    0.0005060729
 1171   -0.1923076923    0.2500000000    0.1052631579    0.0005060729
 1172   -0.1923076923    0.2500000000    0.1578947368    0.0005060729
 1173   -0.1923076923    0.2500000000    0.2105263158    0.0005060729
 1174   -0.1923076923    0.2500000000    0.2631578947    0.0005060729
 1175   -0.1923076923    0.2500000000    0.3157894737    0.0005060729
 1176   -0.1923076923    0.2500000000    0.3684210526    0.0005060729
 1177   -0.1923076923    0.2500000000    0.4210526316    0.0005060729
 1178   -0.1923076923    0.2500000000    0.4736842105    0.0005060729
 1179   -0.1923076923    0.3750000000   -0.4736842105    0.0005060729
 1180   -0.1923076923    0.3750000000   -0.4210526316    0.0005060729
 1181   -0.1923076923    0.3750000000   -0.3684210526    0.0005060729
 1182   -0.1923076923    0.3750000000   -0.3157894737    0.0005060729
 1183   -0.1923076923    0.3750000000   -0.2631578947    0.0005060729
 1184   -0.1923076923    0.3750000000   -0.2105263158    0.0005060729
 1185   -0.1923076923    0.3750000000   -0.1578947368    0.0005060729
 1186   -0.1923076923    0.3750000000   -0.1052631579    0.0005060729
 1187   -0.1923076923    0.3750000000   -0.0526315789    0.0005060729
 1188   -0.1923076923    0.3750000000    0.0000000000    0.0005060729
 1189   -0.1923076923    0.3750000000    0.0526315789    0.0005060729
 1190   -0.1923076923    0.3750000000    0.1052631579    0.0005060729
 1191   -0.1923076923    0.3750000000    0.1578947368    0.0005060729
 1192   -0.1923076923    0.3750000000    0.2105263158    0.0005060729
 1193   -0.1923076923    0.3750000000    0.2631578947    0.0005060729
 1194   -0.1923076923    0.3750000000    0.3157894737    0.0005060729
 1195   -0.1923076923    0.3750000000    0.3684210526    0.0005060729
 1196   -0.1923076923    0.3750000000    0.4210526316    0.0005060729
 1197   -0.1923076923    0.3750000000    0.4736842105    0.0005060729
 1198   -0.1923076923    0.5000000000   -0.4736842105    0.0005060729
 1199   -0.1923076923    0.5000000000   -0.4210526316    0.0005060729
 1200   -0.1923076923    0.5000000000   -0.3684210526    0.0005060729
 1201   -0.1923076923    0.5000000000   -0.3157894737    0.0005060729
 1202   -0.1923076923    0.5000000000   -0.2631578947    0.0005060729
 1203   -0.1923076923    0.5000000000   -0.2105263158    0.0005060729
 1204   -0.1923076923    0.5000000000   -0.1578947368    0.0005060729
 1205   -0.1923076923    0.5000000000   -0.1052631579    0.0005060729
 1206   -0.1923076923    0.5000000000   -0.0526315789    0.0005060729
 1207   -0.1923076923    0.5000000000    0.0000000000    0.0005060729
 1208   -0.1923076923    0.5000000000    0.0526315789    0.0005060729
 1209   -0.1923076923    0.5000000000    0.1052631579    0.0005060729
 1210   -0.1923076923    0.5000000000    0.1578947368    0.0005060729
 1211   -0.1923076923    0.5000000000    0.2105263158    0.0005060729
 1212   -0.1923076923    0.5000000000    0.2631578947    0.0005060729
 1213   -0.1923076923    0.5000000000    0.3157894737    0.0005060729
 1214   -0.1923076923    0.5000000000    0.3684210526    0.0005060729
 1215   -0.1923076923    0.5000000000    0.4210526316    0.0005060729
 1216   -0.1923076923    0.5000000000    0.4736842105    0.0005060729
 1217   -0.1538461538   -0.3750000000   -0.4736842105    0.0005060729
 1218   -0.1538461538   -0.3750000000   -0.4210526316    0.0005060729
 1219   -0.1538461538   -0.3750000000   -0.3684210526    0.0005060729
 1220   -0.1538461538   -0.3750000000   -0.3157894737    0.0005060729
 1221   -0.1538461538   -0.3750000000   -0.2631578947    0.0005060729
 1222   -0.1538461538   -0.3750000000   -0.2105263158    0.0005060729
 1223   -0.1538461538   -0.3750000000   -0.1578947368    0.0005060729
 1224   -0.1538461538   -0.3750000000   -0.1052631579    0.0005060729
 1225   -0.1538461538   -0.3750000000   -0.0526315789    0.0005060729
 1226   -0.1538461538   -0.3750000000    0.0000000000    0.0005060729
 1227   -0.1538461538   -0.3750000000    0.0526315789    0.0005060729
 1228   -0.1538461538   -0.3750000000    0.1052631579    0.0005060729
 1229   -0.1538461538   -0.3750000000    0.1578947368    0.0005060729
 1230   -0.1538461538   -0.3750000000    0.2105263158    0.0005060729
 1231   -0.1538461538   -0.3750000000    0.2631578947    0.0005060729
 1232   -0.1538461538   -0.3750000000    0.3157894737    0.0005060729
 1233   -0.1538461538   -0.3750000000    0.3684210526    0.0005060729
 1234   -0.1538461538   -0.3750000000    0.4210526316    0.0005060729
 1235   -0.1538461538   -0.3750000000    0.4736842105    0.0005060729
 1236   -0.1538461538   -0.2500000000   -0.4736842105    0.0005060729
 1237   -0.1538461538   -0.2500000000   -0.4210526316    0.0005060729
 1238   -0.1538461538   -0.2500000000   -0.3684210526    0.0005060729
 1239   -0.1538461538   -0.2500000000   -0.3157894737    0.0005060729
 1240   -0.1538461538   -0.2500000000   -0.2631578947    0.0005060729
 1241   -0.1538461538   -0.2500000000   -0.2105263158    0.0005060729
 1242   -0.1538461538   -0.2500000000   -0.1578947368    0.0005060729
 1243   -0.1538461538   -0.2500000000   -0.1052631579    0.0005060729
 1244   -0.1538461538   -0.2500000000   -0.0526315789    0.0005060729
 1245   -0.1538461538   -0.2500000000    0.0000000000    0.0005060729
 1246   -0.1538461538   -0.2500000000    0.0526315789    0.0005060729
 1247   -0.1538461538   -0.2500000000    0.1052631579    0.0005060729
 1248   -0.1538461538   -0.2500000000    0.1578947368    0.0005060729
 1249   -0.1538461538   -0.2500000000    0.2105263158    0.0005060729
 1250   -0.1538461538   -0.2500000000    0.2631578947    0.0005060729
 1251   -0.1538461538   -0.2500000000    0.3157894737    0.0005060729
 1252   -0.1538461538   -0.2500000000    0.3684210526    0.0005060729
 1253   -0.1538461538   -0.2500000000    0.4210526316    0.0005060729
 1254   -0.1538461538   -0.2500000000    0.4736842105    0.0005060729
 1255   -0.1538461538   -0.1250000000   -0.4736842105    0.0005060729
 1256   -0.1538461538   -0.1250000000   -0.4210526316    0.0005060729
 1257   -0.1538461538   -0.1250000000   -0.3684210526    0.0005060729
 1258   -0.1538461538   -0.1250000000   -0.3157894737    0.0005060729
 1259   -0.1538461538   -0.1250000000   -0.2631578947    0.0005060729
 1260   -0.1538461538   -0.1250000000   -0.2105263158    0.0005060729
 1261   -0.1538461538   -0.1250000000   -0.1578947368    0.0005060729
 1262   -0.1538461538   -0.1250000000   -0.1052631579    0.0005060729
 1263   -0.1538461538   -0.1250000000   -0.0526315789    0.0005060729
 1264   -0.1538461538   -0.1250000000    0.0000000000    0.0005060729
 1265   -0.1538461538   -0.1250000000    0.0526315789    0.0005060729
 1266   -0.1538461538   -0.1250000000    0.1052631579    0.0005060729
 1267   -0.1538461538   -0.1250000000    0.1578947368    0.0005060729
 1268   -0.1538461538   -0.1250000000    0.2105263158    0.0005060729
 1269   -0.1538461538   -0.1250000000    0.2631578947    0.0005060729
 1270   -0.1538461538   -0.1250000000    0.3157894737    0.0005060729
 1271   -0.1538461538   -0.1250000000    0.3684210526    0.0005060729
 1272   -0.1538461538   -0.1250000000    0.4210526316    0.0005060729
 1273   -0.1538461538   -0.1250000000    0.4736842105    0.0005060729
 1274   -0.1538461538    0.0000000000   -0.4736842105    0.0005060729
 1275   -0.1538461538    0.0000000000   -0.4210526316    0.0005060729
 1276   -0.1538461538    0.0000000000   -0.3684210526    0.0005060729
 1277   -0.1538461538    0.0000000000   -0.3157894737    0.0005060729
 1278   -0.1538461538    0.0000000000   -0.2631578947    0.0005060729
 1279   -0.1538461538    0.0000000000   -0.2105263158    0.0005060729
 1280   -0.1538461538    0.0000000000   -0.1578947368    0.0005060729
 1281   -0.1538461538    0.0000000000   -0.1052631579    0.0005060729
 1282   -0.1538461538    0.0000000000   -0.0526315789    0.0005060729
 1283   -0.1538461538    0.0000000000    0.0000000000    0.0005060729
 1284   -0.1538461538    0.0000000000    0.0526315789    0.0005060729
 1285   -0.1538461538    0.0000000000    0.1052631579    0.0005060729
 1286   -0.1538461538    0.0000000000    0.1578947368    0.0005060729
 1287   -0.1538461538    0.0000000000    0.2105263158    0.0005060729
 1288   -0.1538461538    0.0000000000    0.2631578947    0.0005060729
 1289   -0.1538461538    0.0000000000    0.3157894737    0.0005060729
 1290   -0.1538461538    0.0000000000    0.3684210526    0.0005060729
 1291   -0.1538461538    0.0000000000    0.4210526316    0.0005060729
 1292   -0.1538461538    0.0000000000    0.4736842105    0.0005060729
 1293   -0.1538461538    0.1250000000   -0.4736842105    0.0005060729
 1294   -0.1538461538    0.1250000000   -0.4210526316    0.0005060729
 1295   -0.1538461538    0.1250000000   -0.3684210526    0.0005060729
 1296   -0.1538461538    0.1250000000   -0.3157894737    0.0005060729
 1297   -0.1538461538    0.1250000000   -0.2631578947    0.0005060729
 1298   -0.1538461538    0.1250000000   -0.2105263158    0.0005060729
 1299   -0.1538461538    0.1250000000   -0.1578947368    0.0005060729
 1300   -0.1538461538    0.1250000000   -0.1052631579    0.0005060729
 1301   -0.1538461538    0.1250000000   -0.0526315789    0.0005060729
 1302   -0.1538461538    0.1250000000    0.0000000000    0.0005060729
 1303   -0.1538461538    0.1250000000    0.0526315789    0.0005060729
 1304   -0.1538461538    0.1250000000    0.1052631579    0.0005060729
 1305   -0.1538461538    0.1250000000    0.1578947368    0.0005060729
 1306   -0.1538461538    0.1250000000    0.2105263158    0.0005060729
 1307   -0.1538461538    0.1250000000    0.2631578947    0.0005060729
 1308   -0.1538461538    0.1250000000    0.3157894737    0.0005060729
 1309   -0.1538461538    0.1250000000    0.3684210526    0.0005060729
 1310   -0.1538461538    0.1250000000    0.4210526316    0.0005060729
 1311   -0.1538461538    0.1250000000    0.4736842105    0.0005060729
 1312   -0.1538461538    0.2500000000   -0.4736842105    0.0005060729
 1313   -0.1538461538    0.2500000000   -0.4210526316    0.0005060729
 1314   -0.1538461538    0.2500000000   -0.3684210526    0.0005060729
 1315   -0.1538461538    0.2500000000   -0.3157894737    0.0005060729
 1316   -0.1538461538    0.2500000000   -0.2631578947    0.0005060729
 1317   -0.1538461538    0.2500000000   -0.2105263158    0.0005060729
 1318   -0.1538461538    0.2500000000   -0.1578947368    0.0005060729
 1319   -0.1538461538    0.2500000000   -0.1052631579    0.0005060729
 1320   -0.1538461538    0.2500000000   -0.0526315789    0.0005060729
 1321   -0.1538461538    0.2500000000    0.0000000000    0.0005060729
 1322   -0.1538461538    0.2500000000    0.0526315789    0.0005060729
 1323   -0.1538461538    0.2500000000    0.1052631579    0.0005060729
 1324   -0.1538461538    0.2500000000    0.1578947368    0.0005060729
 1325   -0.1538461538    0.2500000000    0.2105263158    0.0005060729
 1326   -0.1538461538    0.2500000000    0.2631578947    0.0005060729
 1327   -0.1538461538    0.2500000000    0.3157894737    0.0005060729
 1328   -0.1538461538    0.2500000000    0.3684210526    0.0005060729
 1329   -0.1538461538    0.2500000000    0.4210526316    0.0005060729
 1330   -0.1538461538    0.2500000000    0.4736842105    0.0005060729
 1331   -0.1538461538    0.3750000000   -0.4736842105    0.0005060729
 1332   -0.1538461538    0.3750000000   -0.4210526316    0.0005060729
 1333   -0.1538461538    0.3750000000   -0.3684210526    0.0005060729
 1334   -0.1538461538    0.3750000000   -0.3157894737    0.0005060729
 1335   -0.1538461538    0.3750000000   -0.2631578947    0.0005060729
 1336   -0.1538461538    0.3750000000   -0.2105263158    0.0005060729
 1337   -0.1538461538    0.3750000000   -0.1578947368    0.0005060729
 1338   -0.1538461538    0.3750000000   -0.1052631579    0.0005060729
 1339   -0.1538461538    0.3750000000   -0.0526315789    0.0005060729
 1340   -0.1538461538    0.3750000000    0.0000000000    0.0005060729
 1341   -0.1538461538    0.3750000000    0.0526315789    0.0005060729
 1342   -0.1538461538    0.3750000000    0.1052631579    0.0005060729
 1343   -0.1538461538    0.3750000000    0.1578947368    0.0005060729
 1344   -0.1538461538    0.3750000000    0.2105263158    0.0005060729
 1345   -0.1538461538    0.3750000000    0.2631578947    0.0005060729
 1346   -0.1538461538    0.3750000000    0.3157894737    0.0005060729
 1347   -0.1538461538    0.3750000000    0.3684210526    0.0005060729
 1348   -0.1538461538    0.3750000000    0.4210526316    0.0005060729
 1349   -0.1538461538    0.3750000000    0.4736842105    0.0005060729
 1350   -0.1538461538    0.5000000000   -0.4736842105    0.0005060729
 1351   -0.1538461538    0.5000000000   -0.4210526316    0.0005060729
 1352   -0.1538461538    0.5000000000   -0.3684210526    0.0005060729
 1353   -0.1538461538    0.5000000000   -0.3157894737    0.0005060729
 1354   -0.1538461538    0.5000000000   -0.2631578947    0.0005060729
 1355   -0.1538461538    0.5000000000   -0.2105263158    0.0005060729
 1356   -0.1538461538    0.5000000000   -0.1578947368    0.0005060729
 1357   -0.1538461538    0.5000000000   -0.1052631579    0.0005060729
 1358   -0.1538461538    0.5000000000   -0.0526315789    0.0005060729
 1359   -0.1538461538    0.5000000000    0.0000000000    0.0005060729
 1360   -0.1538461538    0.5000000000    0.0526315789    0.0005060729
 1361   -0.1538461538    0.5000000000    0.1052631579    0.0005060729
 1362   -0.1538461538    0.5000000000    0.1578947368    0.0005060729
 1363   -0.1538461538    0.5000000000    0.2105263158    0.0005060729
 1364   -0.1538461538    0.5000000000    0.2631578947    0.0005060729
 1365   -0.1538461538    0.5000000000    0.3157894737    0.0005060729
 1366   -0.1538461538    0.5000000000    0.3684210526    0.0005060729
 1367   -0.1538461538    0.5000000000    0.4210526316    0.0005060729
 1368   -0.1538461538    0.5000000000    0.4736842105    0.0005060729
 1369   -0.1153846154   -0.3750000000   -0.4736842105    0.0005060729
 1370   -0.1153846154   -0.3750000000   -0.4210526316    0.0005060729
 1371   -0.1153846154   -0.3750000000   -0.3684210526    0.0005060729
 1372   -0.1153846154   -0.3750000000   -0.3157894737    0.0005060729
 1373   -0.1153846154   -0.3750000000   -0.2631578947    0.0005060729
 1374   -0.1153846154   -0.3750000000   -0.2105263158    0.0005060729
 1375   -0.1153846154   -0.3750000000   -0.1578947368    0.0005060729
 1376   -0.1153846154   -0.3750000000   -0.1052631579    0.0005060729
 1377   -0.1153846154   -0.3750000000   -0.0526315789    0.0005060729
 1378   -0.1153846154   -0.3750000000    0.0000000000    0.0005060729
 1379   -0.1153846154   -0.3750000000    0.0526315789    0.0005060729
 1380   -0.1153846154   -0.3750000000    0.1052631579    0.0005060729
 1381   -0.1153846154   -0.3750000000    0.1578947368    0.0005060729
 1382   -0.1153846154   -0.3750000000    0.2105263158    0.0005060729
 1383   -0.1153846154   -0.3750000000    0.2631578947    0.0005060729
 1384   -0.1153846154   -0.3750000000    0.3157894737    0.0005060729
 1385   -0.1153846154   -0.3750000000    0.3684210526    0.0005060729
 1386   -0.1153846154   -0.3750000000    0.4210526316    0.0005060729
 1387   -0.1153846154   -0.3750000000    0.4736842105    0.0005060729
 1388   -0.1153846154   -0.2500000000   -0.4736842105    0.0005060729
 1389   -0.1153846154   -0.2500000000   -0.4210526316    0.0005060729
 1390   -0.1153846154   -0.2500000000   -0.3684210526    0.0005060729
 1391   -0.1153846154   -0.2500000000   -0.3157894737    0.0005060729
 1392   -0.1153846154   -0.2500000000   -0.2631578947    0.0005060729
 1393   -0.1153846154   -0.2500000000   -0.2105263158    0.0005060729
 1394   -0.1153846154   -0.2500000000   -0.1578947368    0.0005060729
 1395   -0.1153846154   -0.2500000000   -0.1052631579    0.0005060729
 1396   -0.1153846154   -0.2500000000   -0.0526315789    0.0005060729
 1397   -0.1153846154   -0.2500000000    0.0000000000    0.0005060729
 1398   -0.1153846154   -0.2500000000    0.0526315789    0.0005060729
 1399   -0.1153846154   -0.2500000000    0.1052631579    0.0005060729
 1400   -0.1153846154   -0.2500000000    0.1578947368    0.0005060729
 1401   -0.1153846154   -0.2500000000    0.2105263158    0.0005060729
 1402   -0.1153846154   -0.2500000000    0.2631578947    0.0005060729
 1403   -0.1153846154   -0.2500000000    0.3157894737    0.0005060729
 1404   -0.1153846154   -0.2500000000    0.3684210526    0.0005060729
 1405   -0.1153846154   -0.2500000000    0.4210526316    0.0005060729
 1406   -0.1153846154   -0.2500000000    0.4736842105    0.0005060729
 1407   -0.1153846154   -0.1250000000   -0.4736842105    0.0005060729
 1408   -0.1153846154   -0.1250000000   -0.4210526316    0.0005060729
 1409   -0.1153846154   -0.1250000000   -0.3684210526    0.0005060729
 1410   -0.1153846154   -0.1250000000   -0.3157894737    0.0005060729
 1411   -0.1153846154   -0.1250000000   -0.2631578947    0.0005060729
 1412   -0.1153846154   -0.1250000000   -0.2105263158    0.0005060729
 1413   -0.1153846154   -0.1250000000   -0.1578947368    0.0005060729
 1414   -0.1153846154   -0.1250000000   -0.1052631579    0.0005060729
 1415   -0.1153846154   -0.1250000000   -0.0526315789    0.0005060729
 1416   -0.1153846154   -0.1250000000    0.0000000000    0.0005060729
 1417   -0.1153846154   -0.1250000000    0.0526315789    0.0005060729
 1418   -0.1153846154   -0.1250000000    0.1052631579    0.0005060729
 1419   -0.1153846154   -0.1250000000    0.1578947368    0.0005060729
 1420   -0.1153846154   -0.1250000000    0.2105263158    0.0005060729
 1421   -0.1153846154   -0.1250000000    0.2631578947    0.0005060729
 1422   -0.1153846154   -0.1250000000    0.3157894737    0.0005060729
 1423   -0.1153846154   -0.1250000000    0.3684210526    0.0005060729
 1424   -0.1153846154   -0.1250000000    0.4210526316    0.0005060729
 1425   -0.1153846154   -0.1250000000    0.4736842105    0.0005060729
 1426   -0.1153846154    0.0000000000   -0.4736842105    0.0005060729
 1427   -0.1153846154    0.0000000000   -0.4210526316    0.0005060729
 1428   -0.1153846154    0.0000000000   -0.3684210526    0.0005060729
 1429   -0.1153846154    0.0000000000   -0.3157894737    0.0005060729
 1430   -0.1153846154    0.0000000000   -0.2631578947    0.0005060729
 1431   -0.1153846154    0.0000000000   -0.2105263158    0.0005060729
 1432   -0.1153846154    0.0000000000   -0.1578947368    0.0005060729
 1433   -0.1153846154    0.0000000000   -0.1052631579    0.0005060729
 1434   -0.1153846154    0.0000000000   -0.0526315789    0.0005060729
 1435   -0.1153846154    0.0000000000    0.0000000000    0.0005060729
 1436   -0.1153846154    0.0000000000    0.0526315789    0.0005060729
 1437   -0.1153846154    0.0000000000    0.1052631579    0.0005060729
 1438   -0.1153846154    0.0000000000    0.1578947368    0.0005060729
 1439   -0.1153846154    0.0000000000    0.2105263158    0.0005060729
 1440   -0.1153846154    0.0000000000    0.2631578947    0.0005060729
 1441   -0.1153846154    0.0000000000    0.3157894737    0.0005060729
 1442   -0.1153846154    0.0000000000    0.3684210526    0.0005060729
 1443   -0.1153846154    0.0000000000    0.4210526316    0.0005060729
 1444   -0.1153846154    0.0000000000    0.4736842105    0.0005060729
 1445   -0.1153846154    0.1250000000   -0.4736842105    0.0005060729
 1446   -0.1153846154    0.1250000000   -0.4210526316    0.0005060729
 1447   -0.1153846154    0.1250000000   -0.3684210526    0.0005060729
 1448   -0.1153846154    0.1250000000   -0.3157894737    0.0005060729
 1449   -0.1153846154    0.1250000000   -0.2631578947    0.0005060729
 1450   -0.1153846154    0.1250000000   -0.2105263158    0.0005060729
 1451   -0.1153846154    0.1250000000   -0.1578947368    0.0005060729
 1452   -0.1153846154    0.1250000000   -0.1052631579    0.0005060729
 1453   -0.1153846154    0.1250000000   -0.0526315789    0.0005060729
 1454   -0.1153846154    0.1250000000    0.0000000000    0.0005060729
 1455   -0.1153846154    0.1250000000    0.0526315789    0.0005060729
 1456   -0.1153846154    0.1250000000    0.1052631579    0.0005060729
 1457   -0.1153846154    0.1250000000    0.1578947368    0.0005060729
 1458   -0.1153846154    0.1250000000    0.2105263158    0.0005060729
 1459   -0.1153846154    0.1250000000    0.2631578947    0.0005060729
 1460   -0.1153846154    0.1250000000    0.3157894737    0.0005060729
 1461   -0.1153846154    0.1250000000    0.3684210526    0.0005060729
 1462   -0.1153846154    0.1250000000    0.4210526316    0.0005060729
 1463   -0.1153846154    0.1250000000    0.4736842105    0.0005060729
 1464   -0.1153846154    0.2500000000   -0.4736842105    0.0005060729
 1465   -0.1153846154    0.2500000000   -0.4210526316    0.0005060729
 1466   -0.1153846154    0.2500000000   -0.3684210526    0.0005060729
 1467   -0.1153846154    0.2500000000   -0.3157894737    0.0005060729
 1468   -0.1153846154    0.2500000000   -0.2631578947    0.0005060729
 1469   -0.1153846154    0.2500000000   -0.2105263158    0.0005060729
 1470   -0.1153846154    0.2500000000   -0.1578947368    0.0005060729
 1471   -0.1153846154    0.2500000000   -0.1052631579    0.0005060729
 1472   -0.1153846154    0.2500000000   -0.0526315789    0.0005060729
 1473   -0.1153846154    0.2500000000    0.0000000000    0.0005060729
 1474   -0.1153846154    0.2500000000    0.0526315789    0.0005060729
 1475   -0.1153846154    0.2500000000    0.1052631579    0.0005060729
 1476   -0.1153846154    0.2500000000    0.1578947368    0.0005060729
 1477   -0.1153846154    0.2500000000    0.2105263158    0.0005060729
 1478   -0.1153846154    0.2500000000    0.2631578947    0.0005060729
 1479   -0.1153846154    0.2500000000    0.3157894737    0.0005060729
 1480   -0.1153846154    0.2500000000    0.3684210526    0.0005060729
 1481   -0.1153846154    0.2500000000    0.4210526316    0.0005060729
 1482   -0.1153846154    0.2500000000    0.4736842105    0.0005060729
 1483   -0.1153846154    0.3750000000   -0.4736842105    0.0005060729
 1484   -0.1153846154    0.3750000000   -0.4210526316    0.0005060729
 1485   -0.1153846154    0.3750000000   -0.3684210526    0.0005060729
 1486   -0.1153846154    0.3750000000   -0.3157894737    0.0005060729
 1487   -0.1153846154    0.3750000000   -0.2631578947    0.0005060729
 1488   -0.1153846154    0.3750000000   -0.2105263158    0.0005060729
 1489   -0.1153846154    0.3750000000   -0.1578947368    0.0005060729
 1490   -0.1153846154    0.3750000000   -0.1052631579    0.0005060729
 1491   -0.1153846154    0.3750000000   -0.0526315789    0.0005060729
 1492   -0.1153846154    0.3750000000    0.0000000000    0.0005060729
 1493   -0.1153846154    0.3750000000    0.0526315789    0.0005060729
 1494   -0.1153846154    0.3750000000    0.1052631579    0.0005060729
 1495   -0.1153846154    0.3750000000    0.1578947368    0.0005060729
 1496   -0.1153846154    0.3750000000    0.2105263158    0.0005060729
 1497   -0.1153846154    0.3750000000    0.2631578947    0.0005060729
 1498   -0.1153846154    0.3750000000    0.3157894737    0.0005060729
 1499   -0.1153846154    0.3750000000    0.3684210526    0.0005060729
 1500   -0.1153846154    0.3750000000    0.4210526316    0.0005060729
 1501   -0.1153846154    0.3750000000    0.4736842105    0.0005060729
 1502   -0.1153846154    0.5000000000   -0.4736842105    0.0005060729
 1503   -0.1153846154    0.5000000000   -0.4210526316    0.0005060729
 1504   -0.1153846154    0.5000000000   -0.3684210526    0.0005060729
 1505   -0.1153846154    0.5000000000   -0.3157894737    0.0005060729
 1506   -0.1153846154    0.5000000000   -0.2631578947    0.0005060729
 1507   -0.1153846154    0.5000000000   -0.2105263158    0.0005060729
 1508   -0.1153846154    0.5000000000   -0.1578947368    0.0005060729
 1509   -0.1153846154    0.5000000000   -0.1052631579    0.0005060729
 1510   -0.1153846154    0.5000000000   -0.0526315789    0.0005060729
 1511   -0.1153846154    0.5000000000    0.0000000000    0.0005060729
 1512   -0.1153846154    0.5000000000    0.0526315789    0.0005060729
 1513   -0.1153846154    0.5000000000    0.1052631579    0.0005060729
 1514   -0.1153846154    0.5000000000    0.1578947368    0.0005060729
 1515   -0.1153846154    0.5000000000    0.2105263158    0.0005060729
 1516   -0.1153846154    0.5000000000    0.2631578947    0.0005060729
 1517   -0.1153846154    0.5000000000    0.3157894737    0.0005060729
 1518   -0.1153846154    0.5000000000    0.3684210526    0.0005060729
 1519   -0.1153846154    0.5000000000    0.4210526316    0.0005060729
 1520   -0.1153846154    0.5000000000    0.4736842105    0.0005060729
 1521   -0.0769230769   -0.3750000000   -0.4736842105    0.0005060729
 1522   -0.0769230769   -0.3750000000   -0.4210526316    0.0005060729
 1523   -0.0769230769   -0.3750000000   -0.3684210526    0.0005060729
 1524   -0.0769230769   -0.3750000000   -0.3157894737    0.0005060729
 1525   -0.0769230769   -0.3750000000   -0.2631578947    0.0005060729
 1526   -0.0769230769   -0.3750000000   -0.2105263158    0.0005060729
 1527   -0.0769230769   -0.3750000000   -0.1578947368    0.0005060729
 1528   -0.0769230769   -0.3750000000   -0.1052631579    0.0005060729
 1529   -0.0769230769   -0.3750000000   -0.0526315789    0.0005060729
 1530   -0.0769230769   -0.3750000000    0.0000000000    0.0005060729
 1531   -0.0769230769   -0.3750000000    0.0526315789    0.0005060729
 1532   -0.0769230769   -0.3750000000    0.1052631579    0.0005060729
 1533   -0.0769230769   -0.3750000000    0.1578947368    0.0005060729
 1534   -0.0769230769   -0.3750000000    0.2105263158    0.0005060729
 1535   -0.0769230769   -0.3750000000    0.2631578947    0.0005060729
 1536   -0.0769230769   -0.3750000000    0.3157894737    0.0005060729
 1537   -0.0769230769   -0.3750000000    0.3684210526    0.0005060729
 1538   -0.0769230769   -0.3750000000    0.4210526316    0.0005060729
 1539   -0.0769230769   -0.3750000000    0.4736842105    0.0005060729
 1540   -0.0769230769   -0.2500000000   -0.4736842105    0.0005060729
 1541   -0.0769230769   -0.2500000000   -0.4210526316    0.0005060729
 1542   -0.0769230769   -0.2500000000   -0.3684210526    0.0005060729
 1543   -0.0769230769   -0.2500000000   -0.3157894737    0.0005060729
 1544   -0.0769230769   -0.2500000000   -0.2631578947    0.0005060729
 1545   -0.0769230769   -0.2500000000   -0.2105263158    0.0005060729
 1546   -0.0769230769   -0.2500000000   -0.1578947368    0.0005060729
 1547   -0.0769230769   -0.2500000000   -0.1052631579    0.0005060729
 1548   -0.0769230769   -0.2500000000   -0.0526315789    0.0005060729
 1549   -0.0769230769   -0.2500000000    0.0000000000    0.0005060729
 1550   -0.0769230769   -0.2500000000    0.0526315789    0.0005060729
 1551   -0.0769230769   -0.2500000000    0.1052631579    0.0005060729
 1552   -0.0769230769   -0.2500000000    0.1578947368    0.0005060729
 1553   -0.0769230769   -0.2500000000    0.2105263158    0.0005060729
 1554   -0.0769230769   -0.2500000000    0.2631578947    0.0005060729
 1555   -0.0769230769   -0.2500000000    0.3157894737    0.0005060729
 1556   -0.0769230769   -0.2500000000    0.3684210526    0.0005060729
 1557   -0.0769230769   -0.2500000000    0.4210526316    0.0005060729
 1558   -0.0769230769   -0.2500000000    0.4736842105    0.0005060729
 1559   -0.0769230769   -0.1250000000   -0.4736842105    0.0005060729
 1560   -0.0769230769   -0.1250000000   -0.4210526316    0.0005060729
 1561   -0.0769230769   -0.1250000000   -0.3684210526    0.0005060729
 1562   -0.0769230769   -0.1250000000   -0.3157894737    0.0005060729
 1563   -0.0769230769   -0.1250000000   -0.2631578947    0.0005060729
 1564   -0.0769230769   -0.1250000000   -0.2105263158    0.0005060729
 1565   -0.0769230769   -0.1250000000   -0.1578947368    0.0005060729
 1566   -0.0769230769   -0.1250000000   -0.1052631579    0.0005060729
 1567   -0.0769230769   -0.1250000000   -0.0526315789    0.0005060729
 1568   -0.0769230769   -0.1250000000    0.0000000000    0.0005060729
 1569   -0.0769230769   -0.1250000000    0.0526315789    0.0005060729
 1570   -0.0769230769   -0.1250000000    0.1052631579    0.0005060729
 1571   -0.0769230769   -0.1250000000    0.1578947368    0.0005060729
 1572   -0.0769230769   -0.1250000000    0.2105263158    0.0005060729
 1573   -0.0769230769   -0.1250000000    0.2631578947    0.0005060729
 1574   -0.0769230769   -0.1250000000    0.3157894737    0.0005060729
 1575   -0.0769230769   -0.1250000000    0.3684210526    0.0005060729
 1576   -0.0769230769   -0.1250000000    0.4210526316    0.0005060729
 1577   -0.0769230769   -0.1250000000    0.4736842105    0.0005060729
 1578   -0.0769230769    0.0000000000   -0.4736842105    0.0005060729
 1579   -0.0769230769    0.0000000000   -0.4210526316    0.0005060729
 1580   -0.0769230769    0.0000000000   -0.3684210526    0.0005060729
 1581   -0.0769230769    0.0000000000   -0.3157894737    0.0005060729
 1582   -0.0769230769    0.0000000000   -0.2631578947    0.0005060729
 1583   -0.0769230769    0.0000000000   -0.2105263158    0.0005060729
 1584   -0.0769230769    0.0000000000   -0.1578947368    0.0005060729
 1585   -0.0769230769    0.0000000000   -0.1052631579    0.0005060729
 1586   -0.0769230769    0.0000000000   -0.0526315789    0.0005060729
 1587   -0.0769230769    0.0000000000    0.0000000000    0.0005060729
 1588   -0.0769230769    0.0000000000    0.0526315789    0.0005060729
 1589   -0.0769230769    0.0000000000    0.1052631579    0.0005060729
 1590   -0.0769230769    0.0000000000    0.1578947368    0.0005060729
 1591   -0.0769230769    0.0000000000    0.2105263158    0.0005060729
 1592   -0.0769230769    0.0000000000    0.2631578947    0.0005060729
 1593   -0.0769230769    0.0000000000    0.3157894737    0.0005060729
 1594   -0.0769230769    0.0000000000    0.3684210526    0.0005060729
 1595   -0.0769230769    0.0000000000    0.4210526316    0.0005060729
 1596   -0.0769230769    0.0000000000    0.4736842105    0.0005060729
 1597   -0.0769230769    0.1250000000   -0.4736842105    0.0005060729
 1598   -0.0769230769    0.1250000000   -0.4210526316    0.0005060729
 1599   -0.0769230769    0.1250000000   -0.3684210526    0.0005060729
 1600   -0.0769230769    0.1250000000   -0.3157894737    0.0005060729
 1601   -0.0769230769    0.1250000000   -0.2631578947    0.0005060729
 1602   -0.0769230769    0.1250000000   -0.2105263158    0.0005060729
 1603   -0.0769230769    0.1250000000   -0.1578947368    0.0005060729
 1604   -0.0769230769    0.1250000000   -0.1052631579    0.0005060729
 1605   -0.0769230769    0.1250000000   -0.0526315789    0.0005060729
 1606   -0.0769230769    0.1250000000    0.0000000000    0.0005060729
 1607   -0.0769230769    0.1250000000    0.0526315789    0.0005060729
 1608   -0.0769230769    0.1250000000    0.1052631579    0.0005060729
 1609   -0.0769230769    0.1250000000    0.1578947368    0.0005060729
 1610   -0.0769230769    0.1250000000    0.2105263158    0.0005060729
 1611   -0.0769230769    0.1250000000    0.2631578947    0.0005060729
 1612   -0.0769230769    0.1250000000    0.3157894737    0.0005060729
 1613   -0.0769230769    0.1250000000    0.3684210526    0.0005060729
 1614   -0.0769230769    0.1250000000    0.4210526316    0.0005060729
 1615   -0.0769230769    0.1250000000    0.4736842105    0.0005060729
 1616   -0.0769230769    0.2500000000   -0.4736842105    0.0005060729
 1617   -0.0769230769    0.2500000000   -0.4210526316    0.0005060729
 1618   -0.0769230769    0.2500000000   -0.3684210526    0.0005060729
 1619   -0.0769230769    0.2500000000   -0.3157894737    0.0005060729
 1620   -0.0769230769    0.2500000000   -0.2631578947    0.0005060729
 1621   -0.0769230769    0.2500000000   -0.2105263158    0.0005060729
 1622   -0.0769230769    0.2500000000   -0.1578947368    0.0005060729
 1623   -0.0769230769    0.2500000000   -0.1052631579    0.0005060729
 1624   -0.0769230769    0.2500000000   -0.0526315789    0.0005060729
 1625   -0.0769230769    0.2500000000    0.0000000000    0.0005060729
 1626   -0.0769230769    0.2500000000    0.0526315789    0.0005060729
 1627   -0.0769230769    0.2500000000    0.1052631579    0.0005060729
 1628   -0.0769230769    0.2500000000    0.1578947368    0.0005060729
 1629   -0.0769230769    0.2500000000    0.2105263158    0.0005060729
 1630   -0.0769230769    0.2500000000    0.2631578947    0.0005060729
 1631   -0.0769230769    0.2500000000    0.3157894737    0.0005060729
 1632   -0.0769230769    0.2500000000    0.3684210526    0.0005060729
 1633   -0.0769230769    0.2500000000    0.4210526316    0.0005060729
 1634   -0.0769230769    0.2500000000    0.4736842105    0.0005060729
 1635   -0.0769230769    0.3750000000   -0.4736842105    0.0005060729
 1636   -0.0769230769    0.3750000000   -0.4210526316    0.0005060729
 1637   -0.0769230769    0.3750000000   -0.3684210526    0.0005060729
 1638   -0.0769230769    0.3750000000   -0.3157894737    0.0005060729
 1639   -0.0769230769    0.3750000000   -0.2631578947    0.0005060729
 1640   -0.0769230769    0.3750000000   -0.2105263158    0.0005060729
 1641   -0.0769230769    0.3750000000   -0.1578947368    0.0005060729
 1642   -0.0769230769    0.3750000000   -0.1052631579    0.0005060729
 1643   -0.0769230769    0.3750000000   -0.0526315789    0.0005060729
 1644   -0.0769230769    0.3750000000    0.0000000000    0.0005060729
 1645   -0.0769230769    0.3750000000    0.0526315789    0.0005060729
 1646   -0.0769230769    0.3750000000    0.1052631579    0.0005060729
 1647   -0.0769230769    0.3750000000    0.1578947368    0.0005060729
 1648   -0.0769230769    0.3750000000    0.2105263158    0.0005060729
 1649   -0.0769230769    0.3750000000    0.2631578947    0.0005060729
 1650   -0.0769230769    0.3750000000    0.3157894737    0.0005060729
 1651   -0.0769230769    0.3750000000    0.3684210526    0.0005060729
 1652   -0.0769230769    0.3750000000    0.4210526316    0.0005060729
 1653   -0.0769230769    0.3750000000    0.4736842105    0.0005060729
 1654   -0.0769230769    0.5000000000   -0.4736842105    0.0005060729
 1655   -0.0769230769    0.5000000000   -0.4210526316    0.0005060729
 1656   -0.0769230769    0.5000000000   -0.3684210526    0.0005060729
 1657   -0.0769230769    0.5000000000   -0.3157894737    0.0005060729
 1658   -0.0769230769    0.5000000000   -0.2631578947    0.0005060729
 1659   -0.0769230769    0.5000000000   -0.2105263158    0.0005060729
 1660   -0.0769230769    0.5000000000   -0.1578947368    0.0005060729
 1661   -0.0769230769    0.5000000000   -0.1052631579    0.0005060729
 1662   -0.0769230769    0.5000000000   -0.0526315789    0.0005060729
 1663   -0.0769230769    0.5000000000    0.0000000000    0.0005060729
 1664   -0.0769230769    0.5000000000    0.0526315789    0.0005060729
 1665   -0.0769230769    0.5000000000    0.1052631579    0.0005060729
 1666   -0.0769230769    0.5000000000    0.1578947368    0.0005060729
 1667   -0.0769230769    0.5000000000    0.2105263158    0.0005060729
 1668   -0.0769230769    0.5000000000    0.2631578947    0.0005060729
 1669   -0.0769230769    0.5000000000    0.3157894737    0.0005060729
 1670   -0.0769230769    0.5000000000    0.3684210526    0.0005060729
 1671   -0.0769230769    0.5000000000    0.4210526316    0.0005060729
 1672   -0.0769230769    0.5000000000    0.4736842105    0.0005060729
 1673   -0.0384615385   -0.3750000000   -0.4736842105    0.0005060729
 1674   -0.0384615385   -0.3750000000   -0.4210526316    0.0005060729
 1675   -0.0384615385   -0.3750000000   -0.3684210526    0.0005060729
 1676   -0.0384615385   -0.3750000000   -0.3157894737    0.0005060729
 1677   -0.0384615385   -0.3750000000   -0.2631578947    0.0005060729
 1678   -0.0384615385   -0.3750000000   -0.2105263158    0.0005060729
 1679   -0.0384615385   -0.3750000000   -0.1578947368    0.0005060729
 1680   -0.0384615385   -0.3750000000   -0.1052631579    0.0005060729
 1681   -0.0384615385   -0.3750000000   -0.0526315789    0.0005060729
 1682   -0.0384615385   -0.3750000000    0.0000000000    0.0005060729
 1683   -0.0384615385   -0.3750000000    0.0526315789    0.0005060729
 1684   -0.0384615385   -0.3750000000    0.1052631579    0.0005060729
 1685   -0.0384615385   -0.3750000000    0.1578947368    0.0005060729
 1686   -0.0384615385   -0.3750000000    0.2105263158    0.0005060729
 1687   -0.0384615385   -0.3750000000    0.2631578947    0.0005060729
 1688   -0.0384615385   -0.3750000000    0.3157894737    0.0005060729
 1689   -0.0384615385   -0.3750000000    0.3684210526    0.0005060729
 1690   -0.0384615385   -0.3750000000    0.4210526316    0.0005060729
 1691   -0.0384615385   -0.3750000000    0.4736842105    0.0005060729
 1692   -0.0384615385   -0.2500000000   -0.4736842105    0.0005060729
 1693   -0.0384615385   -0.2500000000   -0.4210526316    0.0005060729
 1694   -0.0384615385   -0.2500000000   -0.3684210526    0.0005060729
 1695   -0.0384615385   -0.2500000000   -0.3157894737    0.0005060729
 1696   -0.0384615385   -0.2500000000   -0.2631578947    0.0005060729
 1697   -0.0384615385   -0.2500000000   -0.2105263158    0.0005060729
 1698   -0.0384615385   -0.2500000000   -0.1578947368    0.0005060729
 1699   -0.0384615385   -0.2500000000   -0.1052631579    0.0005060729
 1700   -0.0384615385   -0.2500000000   -0.0526315789    0.0005060729
 1701   -0.0384615385   -0.2500000000    0.0000000000    0.0005060729
 1702   -0.0384615385   -0.2500000000    0.0526315789    0.0005060729
 1703   -0.0384615385   -0.2500000000    0.1052631579    0.0005060729
 1704   -0.0384615385   -0.2500000000    0.1578947368    0.0005060729
 1705   -0.0384615385   -0.2500000000    0.2105263158    0.0005060729
 1706   -0.0384615385   -0.2500000000    0.2631578947    0.0005060729
 1707   -0.0384615385   -0.2500000000    0.3157894737    0.0005060729
 1708   -0.0384615385   -0.2500000000    0.3684210526    0.0005060729
 1709   -0.0384615385   -0.2500000000    0.4210526316    0.0005060729
 1710   -0.0384615385   -0.2500000000    0.4736842105    0.0005060729
 1711   -0.0384615385   -0.1250000000   -0.4736842105    0.0005060729
 1712   -0.0384615385   -0.1250000000   -0.4210526316    0.0005060729
 1713   -0.0384615385   -0.1250000000   -0.3684210526    0.0005060729
 1714   -0.0384615385   -0.1250000000   -0.3157894737    0.0005060729
 1715   -0.0384615385   -0.1250000000   -0.2631578947    0.0005060729
 1716   -0.0384615385   -0.1250000000   -0.2105263158    0.0005060729
 1717   -0.0384615385   -0.1250000000   -0.1578947368    0.0005060729
 1718   -0.0384615385   -0.1250000000   -0.1052631579    0.0005060729
 1719   -0.0384615385   -0.1250000000   -0.0526315789    0.0005060729
 1720   -0.0384615385   -0.1250000000    0.0000000000    0.0005060729
 1721   -0.0384615385   -0.1250000000    0.0526315789    0.0005060729
 1722   -0.0384615385   -0.1250000000    0.1052631579    0.0005060729
 1723   -0.0384615385   -0.1250000000    0.1578947368    0.0005060729
 1724   -0.0384615385   -0.1250000000    0.2105263158    0.0005060729
 1725   -0.0384615385   -0.1250000000    0.2631578947    0.0005060729
 1726   -0.0384615385   -0.1250000000    0.3157894737    0.0005060729
 1727   -0.0384615385   -0.1250000000    0.3684210526    0.0005060729
 1728   -0.0384615385   -0.1250000000    0.4210526316    0.0005060729
 1729   -0.0384615385   -0.1250000000    0.4736842105    0.0005060729
 1730   -0.0384615385    0.0000000000   -0.4736842105    0.0005060729
 1731   -0.0384615385    0.0000000000   -0.4210526316    0.0005060729
 1732   -0.0384615385    0.0000000000   -0.3684210526    0.0005060729
 1733   -0.0384615385    0.0000000000   -0.3157894737    0.0005060729
 1734   -0.0384615385    0.0000000000   -0.2631578947    0.0005060729
 1735   -0.0384615385    0.0000000000   -0.2105263158    0.0005060729
 1736   -0.0384615385    0.0000000000   -0.1578947368    0.0005060729
 1737   -0.0384615385    0.0000000000   -0.1052631579    0.0005060729
 1738   -0.0384615385    0.0000000000   -0.0526315789    0.0005060729
 1739   -0.0384615385    0.0000000000    0.0000000000    0.0005060729
 1740   -0.0384615385    0.0000000000    0.0526315789    0.0005060729
 1741   -0.0384615385    0.0000000000    0.1052631579    0.0005060729
 1742   -0.0384615385    0.0000000000    0.1578947368    0.0005060729
 1743   -0.0384615385    0.0000000000    0.2105263158    0.0005060729
 1744   -0.0384615385    0.0000000000    0.2631578947    0.0005060729
 1745   -0.0384615385    0.0000000000    0.3157894737    0.0005060729
 1746   -0.0384615385    0.0000000000    0.3684210526    0.0005060729
 1747   -0.0384615385    0.0000000000    0.4210526316    0.0005060729
 1748   -0.0384615385    0.0000000000    0.4736842105    0.0005060729
 1749   -0.0384615385    0.1250000000   -0.4736842105    0.0005060729
 1750   -0.0384615385    0.1250000000   -0.4210526316    0.0005060729
 1751   -0.0384615385    0.1250000000   -0.3684210526    0.0005060729
 1752   -0.0384615385    0.1250000000   -0.3157894737    0.0005060729
 1753   -0.0384615385    0.1250000000   -0.2631578947    0.0005060729
 1754   -0.0384615385    0.1250000000   -0.2105263158    0.0005060729
 1755   -0.0384615385    0.1250000000   -0.1578947368    0.0005060729
 1756   -0.0384615385    0.1250000000   -0.1052631579    0.0005060729
 1757   -0.0384615385    0.1250000000   -0.0526315789    0.0005060729
 1758   -0.0384615385    0.1250000000    0.0000000000    0.0005060729
 1759   -0.0384615385    0.1250000000    0.0526315789    0.0005060729
 1760   -0.0384615385    0.1250000000    0.1052631579    0.0005060729
 1761   -0.0384615385    0.1250000000    0.1578947368    0.0005060729
 1762   -0.0384615385    0.1250000000    0.2105263158    0.0005060729
 1763   -0.0384615385    0.1250000000    0.2631578947    0.0005060729
 1764   -0.0384615385    0.1250000000    0.3157894737    0.0005060729
 1765   -0.0384615385    0.1250000000    0.3684210526    0.0005060729
 1766   -0.0384615385    0.1250000000    0.4210526316    0.0005060729
 1767   -0.0384615385    0.1250000000    0.4736842105    0.0005060729
 1768   -0.0384615385    0.2500000000   -0.4736842105    0.0005060729
 1769   -0.0384615385    0.2500000000   -0.4210526316    0.0005060729
 1770   -0.0384615385    0.2500000000   -0.3684210526    0.0005060729
 1771   -0.0384615385    0.2500000000   -0.3157894737    0.0005060729
 1772   -0.0384615385    0.2500000000   -0.2631578947    0.0005060729
 1773   -0.0384615385    0.2500000000   -0.2105263158    0.0005060729
 1774   -0.0384615385    0.2500000000   -0.1578947368    0.0005060729
 1775   -0.0384615385    0.2500000000   -0.1052631579    0.0005060729
 1776   -0.0384615385    0.2500000000   -0.0526315789    0.0005060729
 1777   -0.0384615385    0.2500000000    0.0000000000    0.0005060729
 1778   -0.0384615385    0.2500000000    0.0526315789    0.0005060729
 1779   -0.0384615385    0.2500000000    0.1052631579    0.0005060729
 1780   -0.0384615385    0.2500000000    0.1578947368    0.0005060729
 1781   -0.0384615385    0.2500000000    0.2105263158    0.0005060729
 1782   -0.0384615385    0.2500000000    0.2631578947    0.0005060729
 1783   -0.0384615385    0.2500000000    0.3157894737    0.0005060729
 1784   -0.0384615385    0.2500000000    0.3684210526    0.0005060729
 1785   -0.0384615385    0.2500000000    0.4210526316    0.0005060729
 1786   -0.0384615385    0.2500000000    0.4736842105    0.0005060729
 1787   -0.0384615385    0.3750000000   -0.4736842105    0.0005060729
 1788   -0.0384615385    0.3750000000   -0.4210526316    0.0005060729
 1789   -0.0384615385    0.3750000000   -0.3684210526    0.0005060729
 1790   -0.0384615385    0.3750000000   -0.3157894737    0.0005060729
 1791   -0.0384615385    0.3750000000   -0.2631578947    0.0005060729
 1792   -0.0384615385    0.3750000000   -0.2105263158    0.0005060729
 1793   -0.0384615385    0.3750000000   -0.1578947368    0.0005060729
 1794   -0.0384615385    0.3750000000   -0.1052631579    0.0005060729
 1795   -0.0384615385    0.3750000000   -0.0526315789    0.0005060729
 1796   -0.0384615385    0.3750000000    0.0000000000    0.0005060729
 1797   -0.0384615385    0.3750000000    0.0526315789    0.0005060729
 1798   -0.0384615385    0.3750000000    0.1052631579    0.0005060729
 1799   -0.0384615385    0.3750000000    0.1578947368    0.0005060729
 1800   -0.0384615385    0.3750000000    0.2105263158    0.0005060729
 1801   -0.0384615385    0.3750000000    0.2631578947    0.0005060729
 1802   -0.0384615385    0.3750000000    0.3157894737    0.0005060729
 1803   -0.0384615385    0.3750000000    0.3684210526    0.0005060729
 1804   -0.0384615385    0.3750000000    0.4210526316    0.0005060729
 1805   -0.0384615385    0.3750000000    0.4736842105    0.0005060729
 1806   -0.0384615385    0.5000000000   -0.4736842105    0.0005060729
 1807   -0.0384615385    0.5000000000   -0.4210526316    0.0005060729
 1808   -0.0384615385    0.5000000000   -0.3684210526    0.0005060729
 1809   -0.0384615385    0.5000000000   -0.3157894737    0.0005060729
 1810   -0.0384615385    0.5000000000   -0.2631578947    0.0005060729
 1811   -0.0384615385    0.5000000000   -0.2105263158    0.0005060729
 1812   -0.0384615385    0.5000000000   -0.1578947368    0.0005060729
 1813   -0.0384615385    0.5000000000   -0.1052631579    0.0005060729
 1814   -0.0384615385    0.5000000000   -0.0526315789    0.0005060729
 1815   -0.0384615385    0.5000000000    0.0000000000    0.0005060729
 1816   -0.0384615385    0.5000000000    0.0526315789    0.0005060729
 1817   -0.0384615385    0.5000000000    0.1052631579    0.0005060729
 1818   -0.0384615385    0.5000000000    0.1578947368    0.0005060729
 1819   -0.0384615385    0.5000000000    0.2105263158    0.0005060729
 1820   -0.0384615385    0.5000000000    0.2631578947    0.0005060729
 1821   -0.0384615385    0.5000000000    0.3157894737    0.0005060729
 1822   -0.0384615385    0.5000000000    0.3684210526    0.0005060729
 1823   -0.0384615385    0.5000000000    0.4210526316    0.0005060729
 1824   -0.0384615385    0.5000000000    0.4736842105    0.0005060729
 1825    0.0000000000   -0.3750000000   -0.4736842105    0.0005060729
 1826    0.0000000000   -0.3750000000   -0.4210526316    0.0005060729
 1827    0.0000000000   -0.3750000000   -0.3684210526    0.0005060729
 1828    0.0000000000   -0.3750000000   -0.3157894737    0.0005060729
 1829    0.0000000000   -0.3750000000   -0.2631578947    0.0005060729
 1830    0.0000000000   -0.3750000000   -0.2105263158    0.0005060729
 1831    0.0000000000   -0.3750000000   -0.1578947368    0.0005060729
 1832    0.0000000000   -0.3750000000   -0.1052631579    0.0005060729
 1833    0.0000000000   -0.3750000000   -0.0526315789    0.0005060729
 1834    0.0000000000   -0.3750000000    0.0000000000    0.0005060729
 1835    0.0000000000   -0.3750000000    0.0526315789    0.0005060729
 1836    0.0000000000   -0.3750000000    0.1052631579    0.0005060729
 1837    0.0000000000   -0.3750000000    0.1578947368    0.0005060729
 1838    0.0000000000   -0.3750000000    0.2105263158    0.0005060729
 1839    0.0000000000   -0.3750000000    0.2631578947    0.0005060729
 1840    0.0000000000   -0.3750000000    0.3157894737    0.0005060729
 1841    0.0000000000   -0.3750000000    0.3684210526    0.0005060729
 1842    0.0000000000   -0.3750000000    0.4210526316    0.0005060729
 1843    0.0000000000   -0.3750000000    0.4736842105    0.0005060729
 1844    0.0000000000   -0.2500000000   -0.4736842105    0.0005060729
 1845    0.0000000000   -0.2500000000   -0.4210526316    0.0005060729
 1846    0.0000000000   -0.2500000000   -0.3684210526    0.0005060729
 1847    0.0000000000   -0.2500000000   -0.3157894737    0.0005060729
 1848    0.0000000000   -0.2500000000   -0.2631578947    0.0005060729
 1849    0.0000000000   -0.2500000000   -0.2105263158    0.0005060729
 1850    0.0000000000   -0.2500000000   -0.1578947368    0.0005060729
 1851    0.0000000000   -0.2500000000   -0.1052631579    0.0005060729
 1852    0.0000000000   -0.2500000000   -0.0526315789    0.0005060729
 1853    0.0000000000   -0.2500000000    0.0000000000    0.0005060729
 1854    0.0000000000   -0.2500000000    0.0526315789    0.0005060729
 1855    0.0000000000   -0.2500000000    0.1052631579    0.0005060729
 1856    0.0000000000   -0.2500000000    0.1578947368    0.0005060729
 1857    0.0000000000   -0.2500000000    0.2105263158    0.0005060729
 1858    0.0000000000   -0.2500000000    0.2631578947    0.0005060729
 1859    0.0000000000   -0.2500000000    0.3157894737    0.0005060729
 1860    0.0000000000   -0.2500000000    0.3684210526    0.0005060729
 1861    0.0000000000   -0.2500000000    0.4210526316    0.0005060729
 1862    0.0000000000   -0.2500000000    0.4736842105    0.0005060729
 1863    0.0000000000   -0.1250000000   -0.4736842105    0.0005060729
 1864    0.0000000000   -0.1250000000   -0.4210526316    0.0005060729
 1865    0.0000000000   -0.1250000000   -0.3684210526    0.0005060729
 1866    0.0000000000   -0.1250000000   -0.3157894737    0.0005060729
 1867    0.0000000000   -0.1250000000   -0.2631578947    0.0005060729
 1868    0.0000000000   -0.1250000000   -0.2105263158    0.0005060729
 1869    0.0000000000   -0.1250000000   -0.1578947368    0.0005060729
 1870    0.0000000000   -0.1250000000   -0.1052631579    0.0005060729
 1871    0.0000000000   -0.1250000000   -0.0526315789    0.0005060729
 1872    0.0000000000   -0.1250000000    0.0000000000    0.0005060729
 1873    0.0000000000   -0.1250000000    0.0526315789    0.0005060729
 1874    0.0000000000   -0.1250000000    0.1052631579    0.0005060729
 1875    0.0000000000   -0.1250000000    0.1578947368    0.0005060729
 1876    0.0000000000   -0.1250000000    0.2105263158    0.0005060729
 1877    0.0000000000   -0.1250000000    0.2631578947    0.0005060729
 1878    0.0000000000   -0.1250000000    0.3157894737    0.0005060729
 1879    0.0000000000   -0.1250000000    0.3684210526    0.0005060729
 1880    0.0000000000   -0.1250000000    0.4210526316    0.0005060729
 1881    0.0000000000   -0.1250000000    0.4736842105    0.0005060729
 1882    0.0000000000    0.0000000000   -0.4736842105    0.0005060729
 1883    0.0000000000    0.0000000000   -0.4210526316    0.0005060729
 1884    0.0000000000    0.0000000000   -0.3684210526    0.0005060729
 1885    0.0000000000    0.0000000000   -0.3157894737    0.0005060729
 1886    0.0000000000    0.0000000000   -0.2631578947    0.0005060729
 1887    0.0000000000    0.0000000000   -0.2105263158    0.0005060729
 1888    0.0000000000    0.0000000000   -0.1578947368    0.0005060729
 1889    0.0000000000    0.0000000000   -0.1052631579    0.0005060729
 1890    0.0000000000    0.0000000000   -0.0526315789    0.0005060729
 1891    0.0000000000    0.0000000000    0.0000000000    0.0002530364
 1892    0.0000000000    0.5000000000   -0.4736842105    0.0005060729
 1893    0.0000000000    0.5000000000   -0.4210526316    0.0005060729
 1894    0.0000000000    0.5000000000   -0.3684210526    0.0005060729
 1895    0.0000000000    0.5000000000   -0.3157894737    0.0005060729
 1896    0.0000000000    0.5000000000   -0.2631578947    0.0005060729
 1897    0.0000000000    0.5000000000   -0.2105263158    0.0005060729
 1898    0.0000000000    0.5000000000   -0.1578947368    0.0005060729
 1899    0.0000000000    0.5000000000   -0.1052631579    0.0005060729
 1900    0.0000000000    0.5000000000   -0.0526315789    0.0005060729
 1901    0.0000000000    0.5000000000    0.0000000000    0.0002530364
 1902    0.5000000000   -0.3750000000   -0.4736842105    0.0005060729
 1903    0.5000000000   -0.3750000000   -0.4210526316    0.0005060729
 1904    0.5000000000   -0.3750000000   -0.3684210526    0.0005060729
 1905    0.5000000000   -0.3750000000   -0.3157894737    0.0005060729
 1906    0.5000000000   -0.3750000000   -0.2631578947    0.0005060729
 1907    0.5000000000   -0.3750000000   -0.2105263158    0.0005060729
 1908    0.5000000000   -0.3750000000   -0.1578947368    0.0005060729
 1909    0.5000000000   -0.3750000000   -0.1052631579    0.0005060729
 1910    0.5000000000   -0.3750000000   -0.0526315789    0.0005060729
 1911    0.5000000000   -0.3750000000    0.0000000000    0.0005060729
 1912    0.5000000000   -0.3750000000    0.0526315789    0.0005060729
 1913    0.5000000000   -0.3750000000    0.1052631579    0.0005060729
 1914    0.5000000000   -0.3750000000    0.1578947368    0.0005060729
 1915    0.5000000000   -0.3750000000    0.2105263158    0.0005060729
 1916    0.5000000000   -0.3750000000    0.2631578947    0.0005060729
 1917    0.5000000000   -0.3750000000    0.3157894737    0.0005060729
 1918    0.5000000000   -0.3750000000    0.3684210526    0.0005060729
 1919    0.5000000000   -0.3750000000    0.4210526316    0.0005060729
 1920    0.5000000000   -0.3750000000    0.4736842105    0.0005060729
 1921    0.5000000000   -0.2500000000   -0.4736842105    0.0005060729
 1922    0.5000000000   -0.2500000000   -0.4210526316    0.0005060729
 1923    0.5000000000   -0.2500000000   -0.3684210526    0.0005060729
 1924    0.5000000000   -0.2500000000   -0.3157894737    0.0005060729
 1925    0.5000000000   -0.2500000000   -0.2631578947    0.0005060729
 1926    0.5000000000   -0.2500000000   -0.2105263158    0.0005060729
 1927    0.5000000000   -0.2500000000   -0.1578947368    0.0005060729
 1928    0.5000000000   -0.2500000000   -0.1052631579    0.0005060729
 1929    0.5000000000   -0.2500000000   -0.0526315789    0.0005060729
 1930    0.5000000000   -0.2500000000    0.0000000000    0.0005060729
 1931    0.5000000000   -0.2500000000    0.0526315789    0.0005060729
 1932    0.5000000000   -0.2500000000    0.1052631579    0.0005060729
 1933    0.5000000000   -0.2500000000    0.1578947368    0.0005060729
 1934    0.5000000000   -0.2500000000    0.2105263158    0.0005060729
 1935    0.5000000000   -0.2500000000    0.2631578947    0.0005060729
 1936    0.5000000000   -0.2500000000    0.3157894737    0.0005060729
 1937    0.5000000000   -0.2500000000    0.3684210526    0.0005060729
 1938    0.5000000000   -0.2500000000    0.4210526316    0.0005060729
 1939    0.5000000000   -0.2500000000    0.4736842105    0.0005060729
 1940    0.5000000000   -0.1250000000   -0.4736842105    0.0005060729
 1941    0.5000000000   -0.1250000000   -0.4210526316    0.0005060729
 1942    0.5000000000   -0.1250000000   -0.3684210526    0.0005060729
 1943    0.5000000000   -0.1250000000   -0.3157894737    0.0005060729
 1944    0.5000000000   -0.1250000000   -0.2631578947    0.0005060729
 1945    0.5000000000   -0.1250000000   -0.2105263158    0.0005060729
 1946    0.5000000000   -0.1250000000   -0.1578947368    0.0005060729
 1947    0.5000000000   -0.1250000000   -0.1052631579    0.0005060729
 1948    0.5000000000   -0.1250000000   -0.0526315789    0.0005060729
 1949    0.5000000000   -0.1250000000    0.0000000000    0.0005060729
 1950    0.5000000000   -0.1250000000    0.0526315789    0.0005060729
 1951    0.5000000000   -0.1250000000    0.1052631579    0.0005060729
 1952    0.5000000000   -0.1250000000    0.1578947368    0.0005060729
 1953    0.5000000000   -0.1250000000    0.2105263158    0.0005060729
 1954    0.5000000000   -0.1250000000    0.2631578947    0.0005060729
 1955    0.5000000000   -0.1250000000    0.3157894737    0.0005060729
 1956    0.5000000000   -0.1250000000    0.3684210526    0.0005060729
 1957    0.5000000000   -0.1250000000    0.4210526316    0.0005060729
 1958    0.5000000000   -0.1250000000    0.4736842105    0.0005060729
 1959    0.5000000000    0.0000000000   -0.4736842105    0.0005060729
 1960    0.5000000000    0.0000000000   -0.4210526316    0.0005060729
 1961    0.5000000000    0.0000000000   -0.3684210526    0.0005060729
 1962    0.5000000000    0.0000000000   -0.3157894737    0.0005060729
 1963    0.5000000000    0.0000000000   -0.2631578947    0.0005060729
 1964    0.5000000000    0.0000000000   -0.2105263158    0.0005060729
 1965    0.5000000000    0.0000000000   -0.1578947368    0.0005060729
 1966    0.5000000000    0.0000000000   -0.1052631579    0.0005060729
 1967    0.5000000000    0.0000000000   -0.0526315789    0.0005060729
 1968    0.5000000000    0.0000000000    0.0000000000    0.0002530364
 1969    0.5000000000    0.5000000000   -0.4736842105    0.0005060729
 1970    0.5000000000    0.5000000000   -0.4210526316    0.0005060729
 1971    0.5000000000    0.5000000000   -0.3684210526    0.0005060729
 1972    0.5000000000    0.5000000000   -0.3157894737    0.0005060729
 1973    0.5000000000    0.5000000000   -0.2631578947    0.0005060729
 1974    0.5000000000    0.5000000000   -0.2105263158    0.0005060729
 1975    0.5000000000    0.5000000000   -0.1578947368    0.0005060729
 1976    0.5000000000    0.5000000000   -0.1052631579    0.0005060729
 1977    0.5000000000    0.5000000000   -0.0526315789    0.0005060729
 1978    0.5000000000    0.5000000000    0.0000000000    0.0002530364
================================================================================


============================ local K-points summary ============================
Number |               Cartesian coordinates              |       Weight
  1      0.5135486617      0.0000000000     -0.3515608029      0.0005060729
  2      0.5135486617      0.0000000000     -0.3124984915      0.0005060729
  3      0.5135486617      0.0000000000     -0.2734361800      0.0005060729
  4      0.5135486617      0.0000000000     -0.2343738686      0.0005060729
  5      0.5135486617      0.0000000000     -0.1953115572      0.0005060729
  6      0.5135486617      0.0000000000     -0.1562492457      0.0005060729
  7      0.5135486617      0.0000000000     -0.1171869343      0.0005060729
  8      0.5135486617      0.0000000000     -0.0781246229      0.0005060729
  9      0.5135486617      0.0000000000     -0.0390623114      0.0005060729
 10      0.5135486617      0.0000000000      0.0000000000      0.0002530364
 11      0.5135486617      0.1499613606     -0.3515608029      0.0005060729
 12      0.5135486617      0.1499613606     -0.3124984915      0.0005060729
 13      0.5135486617      0.1499613606     -0.2734361800      0.0005060729
 14      0.5135486617      0.1499613606     -0.2343738686      0.0005060729
 15      0.5135486617      0.1499613606     -0.1953115572      0.0005060729
 16      0.5135486617      0.1499613606     -0.1562492457      0.0005060729
 17      0.5135486617      0.1499613606     -0.1171869343      0.0005060729
 18      0.5135486617      0.1499613606     -0.0781246229      0.0005060729
 19      0.5135486617      0.1499613606     -0.0390623114      0.0005060729
 20      0.5135486617      0.1499613606      0.0000000000      0.0002530364
================================================================================

Complex-valued NGWFs will be used.
Non Gamma point calculation with KP method will be performed.
Cartesian coordinates of k-point are          0.50000         0.50000         0.50000

Determining parallel strategy ...... done
Calculating Ewald energy ...              -49.009250 Hartree
Basis initialisation ...
... done
Sparse matrix initialisation ...
 done
Fully random NGWF initialisation ...
WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
 done

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
Density renormalisation ...
Target Charge:    40.000000000000 ; Input Charge:    38.753281193721
Density kernel initialisation

Writing density kernel to file "P95.dkn" ... done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.703119986108E+03     3.7874E-03     3.0299E-03
    2         1.703117280477E+03     1.6944E-03     1.3555E-03    -2.7056E-03
    3         1.703116658601E+03     1.0178E-03     8.1427E-04    -6.2188E-04
    4         1.703116412075E+03     7.0753E-04     5.6602E-04    -2.4653E-04
    5         1.703116284668E+03     5.3376E-04     4.2700E-04    -1.2741E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.70311628466784E+03  Eh
     Estimated bandgap           =   8.0652E-02  Eh
     RMS occupancy error         =   1.4922E-08
     [H,K] commutator            =   4.2700E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  001 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.5544E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       1.04647005242287E+03 Eh
   Predicted gain in energy  =      -6.56646232244963E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         9.103097518749E+02     1.4581E-01     1.1665E-01
    2         9.115106932577E+02     3.1064E-01     2.4851E-01     1.2009E+00
    3         9.159942078508E+02     6.1254E-01     4.9003E-01     4.4835E+00
    4         9.250501946268E+02     9.5993E-01     7.6804E-01     9.0560E+00
    5         9.154355703510E+02     5.9057E-01     4.7246E-01    -9.6146E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   9.15435570351004E+02  Eh
     Estimated bandgap           =   1.1495E+01  Eh
     RMS occupancy error         =   2.6127E-06
     [H,K] commutator            =   4.7246E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  002 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.5199E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       3.54029187693710E+02 Eh
   Predicted gain in energy  =      -5.61406382657293E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         3.239351543857E+02     4.3229E-01     3.4584E-01
    2         3.413315538338E+02     1.2854E+00     1.0283E+00     1.7396E+01
    3         3.250777339877E+02     5.3678E-01     4.2942E-01    -1.6254E+01
    4         3.282175201882E+02     7.5058E-01     6.0047E-01     3.1398E+00
    5         3.244388205356E+02     4.8123E-01     3.8498E-01    -3.7787E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   3.24438820535605E+02  Eh
     Estimated bandgap           =   1.8695E+01  Eh
     RMS occupancy error         =   3.4424E-07
     [H,K] commutator            =   3.8498E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  003 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3077E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       1.55428057963487E+02 Eh
   Predicted gain in energy  =      -1.69010762572119E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.332927105503E+02     2.4132E-01     1.9306E-01
    2         1.375502280849E+02     5.9669E-01     4.7735E-01     4.2575E+00
    3         1.524245002395E+02     1.1589E+00     9.2711E-01     1.4874E+01
    4         1.417177707286E+02     7.9980E-01     6.3985E-01    -1.0707E+01
    5         1.328608188050E+02     1.6590E-01     1.3272E-01    -8.8570E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.32860818805043E+02  Eh
     Estimated bandgap           =   1.5317E+01  Eh
     RMS occupancy error         =   3.7301E-06
     [H,K] commutator            =   1.3272E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  004 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2582E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       5.12983053348873E+01 Eh
   Predicted gain in energy  =      -8.15625134701555E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         3.816836563397E+01     9.9344E-02     7.9475E-02
    2         3.820083854184E+01     1.0674E-01     8.5389E-02     3.2473E-02
    3         3.825835040642E+01     1.1826E-01     9.4606E-02     5.7512E-02
    4         3.834719441790E+01     1.3393E-01     1.0714E-01     8.8844E-02
    5         3.847415198532E+01     1.5349E-01     1.2279E-01     1.2696E-01
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   3.84741519853192E+01  Eh
     Estimated bandgap           =   8.4866E+00  Eh
     RMS occupancy error         =   8.0499E-13
     [H,K] commutator            =   1.2279E-01
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  005 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.3711E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -2.58337716725779E+01 Eh
   Predicted gain in energy  =      -6.43079236578972E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -2.944909507695E+01     7.0969E-02     5.6779E-02
    2        -2.974241400664E+01     1.2091E-02     9.6728E-03    -2.9332E-01
    3        -2.975191844431E+01     2.0084E-03     1.6067E-03    -9.5044E-03
    4        -2.975216431040E+01     3.2877E-04     2.6302E-04    -2.4587E-04
    5        -2.975217090298E+01     5.3209E-05     4.2567E-05    -6.5926E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -2.97521709029818E+01  Eh
     Estimated bandgap           =   3.1724E+00  Eh
     RMS occupancy error         =   1.6521E-12
     [H,K] commutator            =   4.2567E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  006 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.4885E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -5.13244992081514E+01 Eh
   Predicted gain in energy  =      -2.15723283051696E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -5.196293182508E+01     4.9600E-02     3.9682E-02
    2        -5.225449373611E+01     8.6443E-03     6.9154E-03    -2.9156E-01
    3        -5.226382419036E+01     1.8903E-03     1.5122E-03    -9.3305E-03
    4        -5.226426412292E+01     4.4376E-04     3.5501E-04    -4.3993E-04
    5        -5.226428815666E+01     1.0829E-04     8.6635E-05    -2.4034E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -5.22642881566646E+01  Eh
     Estimated bandgap           =   1.3137E+00  Eh
     RMS occupancy error         =   1.5581E-10
     [H,K] commutator            =   8.6635E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  007 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3772E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.17021574200040E+01 Eh
   Predicted gain in energy  =      -9.43786926333944E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.279383687525E+01     3.9745E-02     3.1796E-02
    2        -6.307082150357E+01     9.2441E-03     7.3953E-03    -2.7698E-01
    3        -6.308711141282E+01     2.7335E-03     2.1868E-03    -1.6290E-02
    4        -6.308853185101E+01     8.8284E-04     7.0627E-04    -1.4204E-03
    5        -6.308867774844E+01     2.9555E-04     2.3644E-04    -1.4590E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.30886777484433E+01  Eh
     Estimated bandgap           =   6.7919E-01  Eh
     RMS occupancy error         =   1.0634E-08
     [H,K] commutator            =   2.3644E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  008 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.5992E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.81360682264717E+01 Eh
   Predicted gain in energy  =      -5.04739047802840E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.857345919953E+01     3.1312E-02     2.5050E-02
    2        -6.879768094756E+01     8.7600E-03     7.0080E-03    -2.2422E-01
    3        -6.881721174866E+01     3.1338E-03     2.5071E-03    -1.9531E-02
    4        -6.881972875288E+01     1.2206E-03     9.7644E-04    -2.5170E-03
    5        -6.882010385596E+01     4.9487E-04     3.9590E-04    -3.7510E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.88201038559647E+01  Eh
     Estimated bandgap           =   3.8515E-01  Eh
     RMS occupancy error         =   1.4865E-07
     [H,K] commutator            =   3.9590E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  009 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.1841E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.17568286455506E+01 Eh
   Predicted gain in energy  =      -2.93672478958592E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.173290662251E+01     2.3735E-02     1.8988E-02
    2        -7.188891492952E+01     7.4470E-03     5.9576E-03    -1.5601E-01
    3        -7.190571434943E+01     2.9266E-03     2.3413E-03    -1.6799E-02
    4        -7.190833439391E+01     1.2391E-03     9.9126E-04    -2.6200E-03
    5        -7.190880221295E+01     5.5045E-04     4.4036E-04    -4.6782E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.19088022129514E+01  Eh
     Estimated bandgap           =   2.7209E-01  Eh
     RMS occupancy error         =   3.2904E-12
     [H,K] commutator            =   4.4036E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  010 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0107E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.40943918942787E+01 Eh
   Predicted gain in energy  =      -2.18558968132730E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.409741790815E+01     2.2639E-02     1.8112E-02
    2        -7.427221813879E+01     7.6910E-03     6.1528E-03    -1.7480E-01
    3        -7.429493778305E+01     3.3329E-03     2.6663E-03    -2.2720E-02
    4        -7.429934747710E+01     1.5862E-03     1.2690E-03    -4.4097E-03
    5        -7.430034092575E+01     8.0137E-04     6.4109E-04    -9.9345E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.43003409257547E+01  Eh
     Estimated bandgap           =   1.9638E-01  Eh
     RMS occupancy error         =   2.4513E-10
     [H,K] commutator            =   6.4109E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  011 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  6.9758E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.53732926036440E+01 Eh
   Predicted gain in energy  =      -1.07295167788929E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.533638951842E+01     1.2307E-02     9.8459E-03
    2        -7.540113863629E+01     4.7426E-03     3.7941E-03    -6.4749E-02
    3        -7.541136801100E+01     2.3420E-03     1.8736E-03    -1.0229E-02
    4        -7.541388158669E+01     1.2488E-03     9.9907E-04    -2.5136E-03
    5        -7.541460595950E+01     7.0308E-04     5.6246E-04    -7.2437E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.54146059594994E+01  Eh
     Estimated bandgap           =   1.8691E-01  Eh
     RMS occupancy error         =   5.4003E-10
     [H,K] commutator            =   5.6246E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  012 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.1991E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.60518105364781E+01 Eh
   Predicted gain in energy  =      -6.37204576978661E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.598667158395E+01     1.0212E-02     8.1699E-03
    2        -7.604013570550E+01     4.2448E-03     3.3958E-03    -5.3464E-02
    3        -7.604956463264E+01     2.2974E-03     1.8379E-03    -9.4289E-03
    4        -7.605230967342E+01     1.3307E-03     1.0645E-03    -2.7450E-03
    5        -7.605326567489E+01     8.0021E-04     6.4017E-04    -9.5600E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.60532656748867E+01  Eh
     Estimated bandgap           =   1.7960E-01  Eh
     RMS occupancy error         =   2.6895E-08
     [H,K] commutator            =   6.4017E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  013 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.5753E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.63614133916234E+01 Eh
   Predicted gain in energy  =      -3.08147716736670E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.636098037043E+01     3.5547E-03     2.8438E-03
    2        -7.636790123527E+01     1.7943E-03     1.4354E-03    -6.9209E-03
    3        -7.636970154209E+01     1.1924E-03     9.5389E-04    -1.8003E-03
    4        -7.637044431683E+01     7.2799E-04     5.8239E-04    -7.4277E-04
    5        -7.637072649122E+01     4.5056E-04     3.6045E-04    -2.8217E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.63707264912178E+01  Eh
     Estimated bandgap           =   1.7966E-01  Eh
     RMS occupancy error         =   3.3209E-09
     [H,K] commutator            =   3.6045E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  014 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.3628E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.66321967605600E+01 Eh
   Predicted gain in energy  =      -2.61470269342212E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.662850706570E+01     6.3294E-03     5.0635E-03
    2        -7.665410968899E+01     2.9107E-03     2.3286E-03    -2.5603E-02
    3        -7.665947980460E+01     1.7202E-03     1.3762E-03    -5.3701E-03
    4        -7.666124970234E+01     1.0859E-03     8.6873E-04    -1.7699E-03
    5        -7.666197535011E+01     6.9022E-04     5.5218E-04    -7.2565E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.66619753501067E+01  Eh
     Estimated bandgap           =   1.7682E-01  Eh
     RMS occupancy error         =   2.2628E-08
     [H,K] commutator            =   5.5218E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  015 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.1805E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.68868228616005E+01 Eh
   Predicted gain in energy  =      -2.24847511493778E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.686090975015E+01     5.9111E-03     4.7289E-03
    2        -7.688593157753E+01     2.5631E-03     2.0505E-03    -2.5022E-02
    3        -7.689079693111E+01     1.6308E-03     1.3046E-03    -4.8654E-03
    4        -7.689236456014E+01     1.1151E-03     8.9209E-04    -1.5676E-03
    5        -7.689315339886E+01     6.9892E-04     5.5913E-04    -7.8884E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.68931533988597E+01  Eh
     Estimated bandgap           =   1.7601E-01  Eh
     RMS occupancy error         =   7.6900E-08
     [H,K] commutator            =   5.5913E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  016 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.6058E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70382733906745E+01 Eh
   Predicted gain in energy  =      -1.45119991814809E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.699587844355E+01     4.1706E-03     3.3365E-03
    2        -7.700909969815E+01     2.1133E-03     1.6906E-03    -1.3221E-02
    3        -7.701205120347E+01     1.4700E-03     1.1760E-03    -2.9515E-03
    4        -7.701342025324E+01     9.1473E-04     7.3179E-04    -1.3690E-03
    5        -7.701404427800E+01     6.3543E-04     5.0835E-04    -6.2402E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70140442780035E+01  Eh
     Estimated bandgap           =   1.7240E-01  Eh
     RMS occupancy error         =   5.5552E-08
     [H,K] commutator            =   5.0835E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  017 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2372E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70954238779086E+01 Eh
   Predicted gain in energy  =      -8.13795999050910E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.709539122633E+01     1.3387E-03     1.0710E-03
    2        -7.709671268803E+01     8.3683E-04     6.6946E-04    -1.3215E-03
    3        -7.709715499261E+01     6.9816E-04     5.5853E-04    -4.4230E-04
    4        -7.709748675147E+01     4.8695E-04     3.8956E-04    -3.3176E-04
    5        -7.709765161550E+01     3.4548E-04     2.7639E-04    -1.6486E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70976516155032E+01  Eh
     Estimated bandgap           =   1.7165E-01  Eh
     RMS occupancy error         =   2.0595E-10
     [H,K] commutator            =   2.7639E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  018 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.6489E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71527975324076E+01 Eh
   Predicted gain in energy  =      -5.51459169044080E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.715248157312E+01     1.7582E-03     1.4066E-03
    2        -7.715483725136E+01     8.9909E-04     7.1927E-04    -2.3557E-03
    3        -7.715540540898E+01     6.5373E-04     5.2298E-04    -5.6816E-04
    4        -7.715566545488E+01     4.5661E-04     3.6529E-04    -2.6005E-04
    5        -7.715578606351E+01     3.2922E-04     2.6337E-04    -1.2061E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71557860635096E+01  Eh
     Estimated bandgap           =   1.6926E-01  Eh
     RMS occupancy error         =   2.4355E-09
     [H,K] commutator            =   2.6337E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  019 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.3304E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71915212225189E+01 Eh
   Predicted gain in energy  =      -3.57351590092918E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.719047113404E+01     1.6158E-03     1.2927E-03
    2        -7.719277957883E+01     7.5960E-04     6.0768E-04    -2.3084E-03
    3        -7.719332303691E+01     5.4199E-04     4.3359E-04    -5.4346E-04
    4        -7.719350207444E+01     3.9068E-04     3.1255E-04    -1.7904E-04
    5        -7.719360643834E+01     2.8953E-04     2.3163E-04    -1.0436E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71936064383362E+01  Eh
     Estimated bandgap           =   1.6672E-01  Eh
     RMS occupancy error         =   1.2769E-07
     [H,K] commutator            =   2.3163E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  020 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0799E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72171009881292E+01 Eh
   Predicted gain in energy  =      -2.34945497929857E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.721528217886E+01     1.3720E-03     1.0976E-03
    2        -7.721699052132E+01     6.6973E-04     5.3578E-04    -1.7083E-03
    3        -7.721726074333E+01     5.9794E-04     4.7835E-04    -2.7022E-04
    4        -7.721744224000E+01     3.4369E-04     2.7496E-04    -1.8150E-04
    5        -7.721752691096E+01     2.6905E-04     2.1524E-04    -8.4671E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72175269109628E+01  Eh
     Estimated bandgap           =   1.6267E-01  Eh
     RMS occupancy error         =   2.8490E-08
     [H,K] commutator            =   2.1524E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  021 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  9.1957E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72298013875857E+01 Eh
   Predicted gain in energy  =      -1.22744766229204E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.722980163448E+01     3.7665E-04     3.0132E-04
    2        -7.722990732493E+01     2.5703E-04     2.0562E-04    -1.0569E-04
    3        -7.722994970550E+01     2.1968E-04     1.7574E-04    -4.2381E-05
    4        -7.723000132222E+01     1.9142E-04     1.5313E-04    -5.1617E-05
    5        -7.723002215805E+01     1.4041E-04     1.1233E-04    -2.0836E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72300221580534E+01  Eh
     Estimated bandgap           =   1.6119E-01  Eh
     RMS occupancy error         =   1.7685E-08
     [H,K] commutator            =   1.1233E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  022 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  6.5949E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72388481221406E+01 Eh
   Predicted gain in energy  =      -8.82596408722236E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.723883777082E+01     5.5161E-04     4.4129E-04
    2        -7.723907127710E+01     3.0772E-04     2.4618E-04    -2.3351E-04
    3        -7.723912264146E+01     2.2375E-04     1.7900E-04    -5.1364E-05
    4        -7.723915228623E+01     1.8394E-04     1.4715E-04    -2.9645E-05
    5        -7.723917153215E+01     1.2943E-04     1.0355E-04    -1.9246E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72391715321549E+01  Eh
     Estimated bandgap           =   1.5850E-01  Eh
     RMS occupancy error         =   6.2028E-10
     [H,K] commutator            =   1.0355E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  023 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.5812E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72453595425558E+01 Eh
   Predicted gain in energy  =      -6.18801040090489E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.724530387448E+01     5.6485E-04     4.5188E-04
    2        -7.724558956105E+01     3.5403E-04     2.8322E-04    -2.8569E-04
    3        -7.724563787365E+01     2.6046E-04     2.0837E-04    -4.8313E-05
    4        -7.724569117898E+01     1.6371E-04     1.3097E-04    -5.3305E-05
    5        -7.724571238057E+01     1.2938E-04     1.0350E-04    -2.1202E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72457123805659E+01  Eh
     Estimated bandgap           =   1.5492E-01  Eh
     RMS occupancy error         =   5.5136E-10
     [H,K] commutator            =   1.0350E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  024 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.3553E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72495777877250E+01 Eh
   Predicted gain in energy  =      -3.86540715909689E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.724948198243E+01     4.7674E-04     3.8139E-04
    2        -7.724969726385E+01     2.5255E-04     2.0204E-04    -2.1528E-04
    3        -7.724974024043E+01     2.0255E-04     1.6204E-04    -4.2977E-05
    4        -7.724977157659E+01     1.4830E-04     1.1864E-04    -3.1336E-05
    5        -7.724978312281E+01     1.2811E-04     1.0249E-04    -1.1546E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72497831228105E+01  Eh
     Estimated bandgap           =   1.5160E-01  Eh
     RMS occupancy error         =   3.4131E-10
     [H,K] commutator            =   1.0249E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  025 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.6976E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72518998666040E+01 Eh
   Predicted gain in energy  =      -2.11674379356452E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725189990336E+01     1.3658E-04     1.0926E-04
    2        -7.725191467078E+01     9.8546E-05     7.8837E-05    -1.4767E-05
    3        -7.725192043475E+01     9.7941E-05     7.8353E-05    -5.7640E-06
    4        -7.725192805145E+01     1.0204E-04     8.1631E-05    -7.6167E-06
    5        -7.725193423342E+01     5.3688E-05     4.2950E-05    -6.1820E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72519342334221E+01  Eh
     Estimated bandgap           =   1.5074E-01  Eh
     RMS occupancy error         =   2.8888E-09
     [H,K] commutator            =   4.2950E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  026 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.6431E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72534219082756E+01 Eh
   Predicted gain in energy  =      -1.48767485350731E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725342132057E+01     1.9501E-04     1.5601E-04
    2        -7.725344897564E+01     1.5750E-04     1.2600E-04    -2.7655E-05
    3        -7.725345774939E+01     8.9086E-05     7.1269E-05    -8.7737E-06
    4        -7.725346336058E+01     6.6631E-05     5.3304E-05    -5.6112E-06
    5        -7.725346697114E+01     4.9382E-05     3.9506E-05    -3.6106E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72534669711419E+01  Eh
     Estimated bandgap           =   1.4911E-01  Eh
     RMS occupancy error         =   9.1551E-12
     [H,K] commutator            =   3.9506E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  027 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2073E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72544306902301E+01 Eh
   Predicted gain in energy  =      -9.63719088261428E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725442788757E+01     1.9861E-04     1.5889E-04
    2        -7.725446704043E+01     1.4169E-04     1.1335E-04    -3.9153E-05
    3        -7.725447413810E+01     9.8990E-05     7.9192E-05    -7.0977E-06
    4        -7.725448260286E+01     7.8575E-05     6.2860E-05    -8.4648E-06
    5        -7.725448629391E+01     5.3494E-05     4.2795E-05    -3.6910E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72544862939055E+01  Eh
     Estimated bandgap           =   1.4741E-01  Eh
     RMS occupancy error         =   2.7196E-11
     [H,K] commutator            =   4.2795E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  028 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.7761E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72551215059143E+01 Eh
   Predicted gain in energy  =      -6.35212008745611E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725511578493E+01     1.7918E-04     1.4334E-04
    2        -7.725514923614E+01     1.0944E-04     8.7550E-05    -3.3451E-05
    3        -7.725515612032E+01     9.2770E-05     7.4216E-05    -6.8842E-06
    4        -7.725516192049E+01     8.6443E-05     6.9155E-05    -5.8002E-06
    5        -7.725516511773E+01     4.9306E-05     3.9445E-05    -3.1972E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72551651177291E+01  Eh
     Estimated bandgap           =   1.4580E-01  Eh
     RMS occupancy error         =   1.2301E-11
     [H,K] commutator            =   3.9445E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  029 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.6709E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72555370903666E+01 Eh
   Predicted gain in energy  =      -3.71972637466911E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725553711981E+01     5.3140E-05     4.2512E-05
    2        -7.725553930161E+01     4.0206E-05     3.2165E-05    -2.1818E-06
    3        -7.725554063665E+01     4.0092E-05     3.2074E-05    -1.3350E-06
    4        -7.725554263206E+01     4.6307E-05     3.7046E-05    -1.9954E-06
    5        -7.725554344136E+01     2.6956E-05     2.1565E-05    -8.0930E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72555434413594E+01  Eh
     Estimated bandgap           =   1.4545E-01  Eh
     RMS occupancy error         =   1.4681E-07
     [H,K] commutator            =   2.1565E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  030 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.1526E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72558133997746E+01 Eh
   Predicted gain in energy  =      -2.69958415103133E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725581338899E+01     7.1208E-05     5.6967E-05
    2        -7.725581764673E+01     6.3292E-05     5.0634E-05    -4.2577E-06
    3        -7.725581909156E+01     3.7438E-05     2.9950E-05    -1.4448E-06
    4        -7.725581989289E+01     2.6916E-05     2.1533E-05    -8.0133E-07
    5        -7.725582052357E+01     2.2079E-05     1.7663E-05    -6.3068E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72558205235708E+01  Eh
     Estimated bandgap           =   1.4472E-01  Eh
     RMS occupancy error         =   8.5598E-09
     [H,K] commutator            =   1.7663E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  031 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  9.8195E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72560183394332E+01 Eh
   Predicted gain in energy  =      -1.97815862406969E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725601812876E+01     8.6436E-05     6.9148E-05
    2        -7.725602498651E+01     9.0329E-05     7.2263E-05    -6.8577E-06
    3        -7.725602752884E+01     4.2245E-05     3.3796E-05    -2.5423E-06
    4        -7.725602954491E+01     4.0227E-05     3.2181E-05    -2.0161E-06
    5        -7.725603055318E+01     2.6429E-05     2.1143E-05    -1.0083E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72560305531813E+01  Eh
     Estimated bandgap           =   1.4383E-01  Eh
     RMS occupancy error         =   2.1732E-08
     [H,K] commutator            =   2.1143E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  032 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.8513E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72561634069944E+01 Eh
   Predicted gain in energy  =      -1.32853813141764E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725616287376E+01     7.8869E-05     6.3096E-05
    2        -7.725616951781E+01     6.8835E-05     5.5068E-05    -6.6440E-06
    3        -7.725617115855E+01     4.5625E-05     3.6500E-05    -1.6407E-06
    4        -7.725617282836E+01     4.6211E-05     3.6968E-05    -1.6698E-06
    5        -7.725617422679E+01     2.6145E-05     2.0916E-05    -1.3984E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72561742267896E+01  Eh
     Estimated bandgap           =   1.4297E-01  Eh
     RMS occupancy error         =   4.8407E-08
     [H,K] commutator            =   2.0916E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  033 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.2106E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72562541896348E+01 Eh
   Predicted gain in energy  =      -7.99628452767820E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725625419129E+01     2.6730E-05     2.1384E-05
    2        -7.725625478803E+01     2.2636E-05     1.8109E-05    -5.9674E-07
    3        -7.725625519860E+01     2.4576E-05     1.9660E-05    -4.1058E-07
    4        -7.725625570810E+01     3.3046E-05     2.6437E-05    -5.0950E-07
    5        -7.725625633706E+01     1.8905E-05     1.5124E-05    -6.2895E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72562563370557E+01  Eh
     Estimated bandgap           =   1.4277E-01  Eh
     RMS occupancy error         =   1.0888E-11
     [H,K] commutator            =   1.5124E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  034 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.1442E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72563150677311E+01 Eh
   Predicted gain in energy  =      -5.87306754340489E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725631506511E+01     3.4177E-05     2.7341E-05
    2        -7.725631615992E+01     3.1286E-05     2.5029E-05    -1.0948E-06
    3        -7.725631661109E+01     2.1671E-05     1.7336E-05    -4.5117E-07
    4        -7.725631680465E+01     1.4692E-05     1.1754E-05    -1.9356E-07
    5        -7.725631699988E+01     1.3965E-05     1.1172E-05    -1.9523E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72563169998753E+01  Eh
     Estimated bandgap           =   1.4236E-01  Eh
     RMS occupancy error         =   1.7040E-09
     [H,K] commutator            =   1.1172E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  035 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.3891E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72563569521511E+01 Eh
   Predicted gain in energy  =      -3.99522758129933E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725635692903E+01     3.6540E-05     2.9232E-05
    2        -7.725635865991E+01     2.9247E-05     2.3398E-05    -1.7309E-06
    3        -7.725635914079E+01     2.2880E-05     1.8304E-05    -4.8089E-07
    4        -7.725635960993E+01     2.7036E-05     2.1629E-05    -4.6913E-07
    5        -7.725635988873E+01     1.5439E-05     1.2351E-05    -2.7880E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72563598887308E+01  Eh
     Estimated bandgap           =   1.4191E-01  Eh
     RMS occupancy error         =   2.8488E-09
     [H,K] commutator            =   1.2351E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  036 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.6387E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72563877690637E+01 Eh
   Predicted gain in energy  =      -2.78803329933908E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725638770710E+01     3.4290E-05     2.7432E-05
    2        -7.725638920950E+01     2.5776E-05     2.0621E-05    -1.5024E-06
    3        -7.725638966858E+01     2.2910E-05     1.8328E-05    -4.5909E-07
    4        -7.725639030218E+01     2.0885E-05     1.6708E-05    -6.3360E-07
    5        -7.725639051798E+01     1.9122E-05     1.5298E-05    -2.1580E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72563905179755E+01  Eh
     Estimated bandgap           =   1.4147E-01  Eh
     RMS occupancy error         =   2.8022E-09
     [H,K] commutator            =   1.5298E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  037 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.7607E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72564079416839E+01 Eh
   Predicted gain in energy  =      -1.74237083285789E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725640794357E+01     1.2666E-05     1.0133E-05
    2        -7.725640804459E+01     1.4770E-05     1.1816E-05    -1.0102E-07
    3        -7.725640815919E+01     1.0931E-05     8.7445E-06    -1.1459E-07
    4        -7.725640831311E+01     1.5858E-05     1.2686E-05    -1.5392E-07
    5        -7.725640857185E+01     9.6732E-06     7.7385E-06    -2.5874E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72564085718512E+01  Eh
     Estimated bandgap           =   1.4139E-01  Eh
     RMS occupancy error         =   2.7865E-08
     [H,K] commutator            =   7.7385E-06
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  038 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.5111E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72564216214005E+01 Eh
   Predicted gain in energy  =      -1.30495493522176E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725642162223E+01     1.8248E-05     1.4598E-05
    2        -7.725642187567E+01     2.2874E-05     1.8299E-05    -2.5344E-07
    3        -7.725642209352E+01     1.1076E-05     8.8606E-06    -2.1786E-07
    4        -7.725642216800E+01     7.7641E-06     6.2113E-06    -7.4471E-08
    5        -7.725642223145E+01     7.6615E-06     6.1292E-06    -6.3457E-08
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72564222314523E+01  Eh
     Estimated bandgap           =   1.4121E-01  Eh
     RMS occupancy error         =   3.0124E-10
     [H,K] commutator            =   6.1292E-06
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  039 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.1668E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72564324946674E+01 Eh
   Predicted gain in energy  =      -1.02632150742465E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725643249196E+01     1.8084E-05     1.4467E-05
    2        -7.725643286736E+01     2.2663E-05     1.8130E-05    -3.7540E-07
    3        -7.725643304634E+01     1.3494E-05     1.0795E-05    -1.7899E-07
    4        -7.725643318637E+01     1.4121E-05     1.1297E-05    -1.4003E-07
    5        -7.725643337928E+01     9.8986E-06     7.9189E-06    -1.9291E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72564333792839E+01  Eh
     Estimated bandgap           =   1.4096E-01  Eh
     RMS occupancy error         =   5.0028E-09
     [H,K] commutator            =   7.9189E-06
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  040 #############################
################################################################################

>>> Checking for convergence of NGWFs: 
           ........................................................
           |         *** NGWF optimisation converged ***          |
           | RMS NGWF gradient =    0.00000180332676              |
           | Criteria satisfied:                                  |
           | -> RMS NGWF gradient lower than set threshold.       |
           ========================================================

================================================================================
           ---------------- ENERGY COMPONENTS (Eh) ----------------
           | Kinetic                    :       20.10180385389734 |
           | Pseudopotential (local)    :      -18.69925163591021 |
           | Pseudo (non-coul chg cor)  :        0.00000000000000
           | Pseudopotential (non-local):        1.23172764636715 |
           | Hartree                    :        7.93945397453067 |
           | Exchange-correlation       :      -38.82091700222415 |
           | Ewald                      :      -49.00925021594468 |
           | Total                      :      -77.25643337928386 |
           --------------------------------------------------------
           Integrated density           :       39.99999999999950
================================================================================


                        <<<<< CALCULATION SUMMARY >>>>>                         
|ITER|    RMS GRADIENT   |     TOTAL ENERGY    |   step   |     Epredicted              
   0     0.03554424872445   1703.11628466783509   0.662886   1046.47005242287219        
   1     0.04519870208766    915.43557035100366   0.335411    354.02918769371041        
   2     0.02307702891970    324.43882053560509   0.489838    155.42805796348657        
   3     0.01258150494214    132.86081880504273   0.794947     51.29830533488725        
   4     0.00737105851325     38.47415198531923   2.561904    -25.83377167257794        
   5     0.00348848166475    -29.75217090298178   3.302028    -51.32449920815135        
   6     0.00237717738136    -52.26428815666456   3.205039    -61.70215742000399        
   7     0.00159920450883    -63.08867774844326   3.470248    -68.13606822647166        
   8     0.00118406915190    -68.82010385596469   4.533850    -71.75682864555061        
   9     0.00101070828122    -71.90880221295143   4.444035    -74.09439189427873        
  10     0.00069758282643    -74.30034092575470   4.382223    -75.37329260364399        
  11     0.00051990679097    -75.41460595949941   4.777009    -76.05181053647807        
  12     0.00045752967368    -76.05326567488669   3.186240    -76.36141339162336        
  13     0.00033628173967    -76.37072649121778   4.876991    -76.63219676055999        
  14     0.00031805370234    -76.66197535010674   4.398234    -76.88682286160052        
  15     0.00026057923382    -76.89315339885974   4.598602    -77.03827339067455        
  16     0.00022372202380    -77.01404427800352   3.519298    -77.09542387790862        
  17     0.00016489222973    -77.09765161550322   4.312670    -77.15279753240763        
  18     0.00013303630682    -77.15578606350958   4.172526    -77.19152122251887        
  19     0.00010798895709    -77.19360643833622   4.161576    -77.21710098812920        
  20     0.00009195712839    -77.21752691096280   3.141884    -77.22980138758572        
  21     0.00006594858060    -77.23002215805340   4.350496    -77.23884812214062        
  22     0.00005581229092    -77.23917153215487   4.157460    -77.24535954255578        
  23     0.00004355250748    -77.24571238056588   4.196046    -77.24957778772497        
  24     0.00003697568183    -77.24978312281048   3.351151    -77.25189986660405        
  25     0.00002643090100    -77.25193423342209   4.573115    -77.25342190827560        
  26     0.00002207339335    -77.25346697114186   4.156041    -77.25443069023012        
  27     0.00001776145721    -77.25448629390552   4.134831    -77.25512150591426        
  28     0.00001670866390    -77.25516511772911   2.883936    -77.25553709036657        
  29     0.00001152569927    -77.25554344135945   4.374399    -77.25581339977455        
  30     0.00000981949625    -77.25582052357082   4.328853    -77.25601833943323        
  31     0.00000785126458    -77.25603055318128   4.409719    -77.25616340699442        
  32     0.00000721063055    -77.25617422678957   3.328893    -77.25625418963484        
  33     0.00000514421748    -77.25625633705566   4.771746    -77.25631506773109        
  34     0.00000438911396    -77.25631699987531   4.357873    -77.25635695215112        
  35     0.00000363869200    -77.25635988873076   4.269758    -77.25638776906375        
  36     0.00000376068906    -77.25639051797555   2.666636    -77.25640794168388        
  37     0.00000251111654    -77.25640857185115   4.469653    -77.25642162140051        
  38     0.00000216681310    -77.25642223145229   4.585500    -77.25643249466737        
  39     0.00000180332676    -77.25643337928388  <-- CG                                 

------------------------------ TIMING INFORMATION ------------------------------
AVERAGE TIME:   10806.230s on      1 proc(s)                                    
TOTAL TIME:     10806.230s on      1 proc(s)                                    
==================== AVERAGE TIMINGS FROM ALL PROCS (CUMULATIVE) =====================
|| TAG                                         #calls     cpu time   %total  Gflops ||
|| onetep.F90 final imbalance                 :     1        0.00s   0.000%  ------ ||
|| onetep.F90 main loop imbalance             :     1        0.00s   0.000%  ------ ||
|| hash_table_free                            :    80        0.00s   0.000%  ------ ||
|| sparse_init                                :     1        0.00s   0.000%  ------ ||
|| pseudo_make_structure_factor               :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_core_density              :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_local_on_grid             :     1        0.01s   0.000%  ------ ||
|| ewald_calculate_energy                     :     1        0.01s   0.000%  ------ ||
|| linalg_dgemv                               :    49        0.02s   0.000%  ------ ||
|| palser_mano_kernel_optimise_spam3_embed    :    20        0.07s   0.001%  ------ ||
|| sparse_set_to_garbage                      :  9560        0.07s   0.001%  ------ ||
|| density_fftbox_interp_mult_imbal           : 245.8k       0.10s   0.001%  ------ ||
|| density_init_guess_real                    :     1        0.18s   0.002%  ------ ||
|| pseudopotentials_nonlocal_mat              :    80        0.18s   0.002%  ------ ||
|| sparse_embed_array_hotelling_invert        :    82        0.40s   0.004%  ------ ||
|| restart_kernel_write                       :    41        0.50s   0.005%  ------ ||
|| ngwfs_initialise_from_radial               :    20        1.10s   0.010%  ------ ||
|| sparse_trace                               : 164.4k       1.49s   0.014%  ------ ||
|| ngwf_gradient_coeffs                       :    40        3.85s   0.036%  ------ ||
|| hartree_on_grid_single                     :   385        4.09s   0.038%  ------ ||
|| lnv_gradient_norm                          :   200        5.16s   0.048%  ------ ||
|| sparse_product                             : 204.7k       5.24s   0.049%  ------ ||
|| basis_extract_function_from_box            : 51200        9.42s   0.087%  ------ ||
|| fourier_apply_cell_backward                :  1927        9.75s   0.090%   2.101 ||
|| fourier_apply_cell_forward                 :  1925        9.84s   0.091%   2.081 ||
|| restart_ngwfs_tightbox_output              :    39       11.17s   0.103%  ------ ||
|| energy_and_force_init_cell                 :     1       11.98s   0.111%  ------ ||
|| hamiltonian_energy_components              :     1       15.71s   0.145%  ------ ||
|| cell_grid_extract_box_real                 : 154.2k      16.99s   0.157%  ------ ||
|| projectors_init_fftbox_recip               :  3200       19.48s   0.180%  ------ ||
|| xc_energy_potential                        :   385       31.97s   0.296%  ------ ||
|| kernel_fix                                 :   203       56.58s   0.524%  ------ ||
|| kernel_purify                              :   623       61.20s   0.566%  ------ ||
|| cell_grid_deposit_box_real                 : 245.8k     110.36s   1.021%  ------ ||
|| density_fftbox_deposit_to_cell             : 245.8k     111.96s   1.036%  ------ ||
|| basis_copy_function_to_box                 : 450.6k     123.31s   1.141%  ------ ||
|| integrals_kinetic_spam3                    :  1600      132.78s   1.229%  ------ ||
|| function_ops_brappd_ketppd_spam3           :  1600      138.63s   1.283%  ------ ||
|| projectors_gradient_batch                  :  1600      199.11s   1.843%  ------ ||
|| projectors_func_ovlp_box_spam3             :  1600      290.58s   2.689%  ------ ||
|| integrals_locpot_mat_els_batch             :  8040      578.26s   5.351%  ------ ||
|| ngwf_gradient_build_batch                  :  1600      672.18s   6.220%  ------ ||
|| basis_dot_function_with_box                : 7.419M     909.30s   8.415%  ------ ||
|| ngwf_gradient_batch                        :  1600     1405.55s  13.007%  ------ ||
|| density_batch_row_sums                     : 15360     1432.31s  13.255%  ------ ||
|| potential_apply_to_ngwf_batch              :  8040     1434.03s  13.270%  ------ ||
|| ngwf_gradient_lnv                          :    40     1461.64s  13.526%  ------ ||
|| basis_add_function_to_box                  : 11.14M    1953.67s  18.079%  ------ ||
|| integrals_locpot_dbl_grid                  :  4020     2012.99s  18.628%  ------ ||
|| fourier_apply_box                          : 2.086M    3104.44s  28.728%   6.494 ||
|| density_fftbox_interpolate_multiply        : 245.8k    3694.22s  34.186%  ------ ||
|| density_batch_interp_deposit               : 15360     3828.22s  35.426%  ------ ||
|| density_on_dbl_grid                        :  7680     5305.23s  49.094%  ------ ||
|| hamiltonian_lhxc_calculate                 :   383     6005.32s  55.573%  ------ ||
|| lnv_denskernel_optimise_cg                 :    40     7796.86s  72.152%  ------ ||
|| ngwf_cg_optimise                           :     1    10774.85s  99.710%  ------ ||
|| energy_and_forces                          :     1    10793.66s  99.884%  ------ ||
|| total_time                                 :     1    10806.23s 100.000%  ------ ||
======================================================================================
Overhead of generating timer report: 
- 0 ms averaging over threads,
- 0 ms ensuring consistency across MPI ranks,
- 0 ms printing in order.

Job completed: 16-01-2025 11:35 (-0000)

