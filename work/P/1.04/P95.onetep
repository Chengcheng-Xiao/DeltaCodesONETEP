 Initialized kpar          95  with            1 processes.
If your calculation crashes here, before "Checking processes and threads..."
is displayed, then your stack size is insufficient.
If so, use "ulimit -s unlimited" at runtime.
You can disable this check with "check_stack_size F".

Checking processes and threads...
      Default threads: 1
   Running with 1 MPI process.
   There are 96 MPI processes running on the same node as the root process.
   Each MPI process is using: 
               1 threads for simulation cell FFTs.
               1 threads for threaded FFT box operations.
               1 threads for loops over batched FFT box operations.
               1 threads in other parallel regions.
   MPI Interface: S2 (use mpi) (-DMPI, no -DUSE_MPI_F08, no -DUSE_INCLUDE_MPIF).
   MPI_ASYNC_PROTECTS_NONBLOCKING:  No. MPI_SUBARRAYS_SUPPORTED:  No.
   FFTW Interface: OMP-capable and DEPRECATED. (Use -DUSE_MODERN_FFTW to switch to modern).
   GPU Interface: None.
   GPU FFT Backend: None.
... done

Basic input checks...... done

Reading geometry and species blocks from file "P.dat" ...
  <species_atomic_set> block not found: NGWF initialisation set to SOLVE
... done


--------------------------------------------------------------------------------
---------------------------------- INPUT FILE ----------------------------------
--------------------------------------------------------------------------------

cutoff_energy : 1280 eV                                                         
do_properties : F                                                               
edft : F                                                                        
extend_ngwf : T T T                                                             
forces_output_detail : verbose                                                  
full_rand_ngwf : T                                                              
kpoint_grid_shift : 1 1 0                                                       
kpoint_grid_size : 26 8 19                                                      
kpoint_method : KP                                                              
maxit_ngwf_cg : 1000                                                            
output_detail : Normal                                                          
paw : F                                                                         
permit_unusual_ngwf_count : T                                                   
pseudo_path : .                                                                 
rand_seed_ngwf_dynamic : F                                                      
read_denskern : F                                                               
read_tightbox_ngwfs : F                                                         
spin : 0                                                                        
spin_polarized : F                                                              
task : SinglePoint                                                              
use_cmplx_ngwfs : T                                                             
write_forces : F                                                                
xc_functional : PBE                                                             
%BLOCK LATTICE_CART                                                             
ang                                                                             
3.34814736       0.00000000       0.00000000                                    
0.00000000      11.46586418       0.00000000                                    
0.00000000       0.00000000       4.63345151                                    
%ENDBLOCK LATTICE_CART                                                          
%BLOCK POSITIONS_ABS                                                            
ang                                                                             
P     0.000000     1.072861     0.403991                                        
P     0.000000    10.393003     4.229461                                        
P     0.000000     4.660071     2.720716                                        
P     0.000000     6.805793     1.912735                                        
P     1.674074     6.805793     0.403991                                        
P     1.674074     4.660071     4.229461                                        
P     1.674074    10.393003     2.720716                                        
P     1.674074     1.072861     1.912735                                        
%ENDBLOCK POSITIONS_ABS                                                         
%BLOCK SPECIES                                                                  
P P 15 -1 9.0                                                                   
%ENDBLOCK SPECIES                                                               
%BLOCK SPECIES_POT                                                              
P P_NCP19_PBE_OTF.usp                                                           
%ENDBLOCK SPECIES_POT                                                           
num_kpars : 96                                                                  

--------------------------------------------------------------------------------
-------------------------------- END INPUT FILE --------------------------------
--------------------------------------------------------------------------------


 
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Full system >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<< Pseudopotential information >>>>>>>>>>>>>>>>>>>>>>>>>>
File: P_NCP19_PBE_OTF.usp [ 2001 points up to Gmax=  52.9 (1/bohr)]
  Atomic number: 15;  ionic charge:  5.000000
    Shell 1: l = 0; rc = 1.54 bohr
    Shell 2: l = 2; rc = 1.60 bohr
  Core charge supplied for Nonlinear Core Corrections
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

-------------------------- Atom counting information ---------------------------
Symbol    Natoms    Nngwfs    Nprojs
  P          8        32        48
.......   ......    ......    ......
Totals:      8        32        48
--------------------------------------------------------------------------------

=============================== PSINC grid sizes ===============================
                      Simulation cell:   21 x  55 x  25
                              FFT-box:   21 x  55 x  25
                                  PPD:   21 x  55 x  25
Grid space d1=  0.301289598506a0 (KE cutoff=  83.68271Eh =2277.12234eV)
Grid space d2=  0.393951694482a0 (KE cutoff=  48.94610Eh =1331.89104eV)
Grid space d3=  0.350238176471a0 (KE cutoff=  61.92657Eh =1685.10775eV)
================================================================================

********************* Fourier parallelisation information **********************
       Coarse grid (whole simulation cell) dimensions:     21    55    25
          Real-space ('12') slabs/proc (min max mean):     25    25    25
         Recip-space ('23') slabs/proc (min max mean):     11    11    11
********************************************************************************

********************* Fourier parallelisation information **********************
       Double grid (whole simulation cell) dimensions:     42   110    50
          Real-space ('12') slabs/proc (min max mean):     50    50    50
         Recip-space ('23') slabs/proc (min max mean):     22    22    22
********************************************************************************

Atom SCF Calculation for P  : Z (AE atom) =  15 : Z (PS atom) =   5
Config String: 3s2.0 3p3.0
Orbitals (num,occ):  2     2.00 3.00
Orbitals   (num,l):  2        0    1
Atom SCF converged after  24 iterations to a total energy of     -9.45760254

=============================== K-points summary ===============================
Number |             Fractional coordinates          |    Weight
    1   -0.4615384615   -0.3750000000   -0.4736842105    0.0005060729
    2   -0.4615384615   -0.3750000000   -0.4210526316    0.0005060729
    3   -0.4615384615   -0.3750000000   -0.3684210526    0.0005060729
    4   -0.4615384615   -0.3750000000   -0.3157894737    0.0005060729
    5   -0.4615384615   -0.3750000000   -0.2631578947    0.0005060729
    6   -0.4615384615   -0.3750000000   -0.2105263158    0.0005060729
    7   -0.4615384615   -0.3750000000   -0.1578947368    0.0005060729
    8   -0.4615384615   -0.3750000000   -0.1052631579    0.0005060729
    9   -0.4615384615   -0.3750000000   -0.0526315789    0.0005060729
   10   -0.4615384615   -0.3750000000    0.0000000000    0.0005060729
   11   -0.4615384615   -0.3750000000    0.0526315789    0.0005060729
   12   -0.4615384615   -0.3750000000    0.1052631579    0.0005060729
   13   -0.4615384615   -0.3750000000    0.1578947368    0.0005060729
   14   -0.4615384615   -0.3750000000    0.2105263158    0.0005060729
   15   -0.4615384615   -0.3750000000    0.2631578947    0.0005060729
   16   -0.4615384615   -0.3750000000    0.3157894737    0.0005060729
   17   -0.4615384615   -0.3750000000    0.3684210526    0.0005060729
   18   -0.4615384615   -0.3750000000    0.4210526316    0.0005060729
   19   -0.4615384615   -0.3750000000    0.4736842105    0.0005060729
   20   -0.4615384615   -0.2500000000   -0.4736842105    0.0005060729
   21   -0.4615384615   -0.2500000000   -0.4210526316    0.0005060729
   22   -0.4615384615   -0.2500000000   -0.3684210526    0.0005060729
   23   -0.4615384615   -0.2500000000   -0.3157894737    0.0005060729
   24   -0.4615384615   -0.2500000000   -0.2631578947    0.0005060729
   25   -0.4615384615   -0.2500000000   -0.2105263158    0.0005060729
   26   -0.4615384615   -0.2500000000   -0.1578947368    0.0005060729
   27   -0.4615384615   -0.2500000000   -0.1052631579    0.0005060729
   28   -0.4615384615   -0.2500000000   -0.0526315789    0.0005060729
   29   -0.4615384615   -0.2500000000    0.0000000000    0.0005060729
   30   -0.4615384615   -0.2500000000    0.0526315789    0.0005060729
   31   -0.4615384615   -0.2500000000    0.1052631579    0.0005060729
   32   -0.4615384615   -0.2500000000    0.1578947368    0.0005060729
   33   -0.4615384615   -0.2500000000    0.2105263158    0.0005060729
   34   -0.4615384615   -0.2500000000    0.2631578947    0.0005060729
   35   -0.4615384615   -0.2500000000    0.3157894737    0.0005060729
   36   -0.4615384615   -0.2500000000    0.3684210526    0.0005060729
   37   -0.4615384615   -0.2500000000    0.4210526316    0.0005060729
   38   -0.4615384615   -0.2500000000    0.4736842105    0.0005060729
   39   -0.4615384615   -0.1250000000   -0.4736842105    0.0005060729
   40   -0.4615384615   -0.1250000000   -0.4210526316    0.0005060729
   41   -0.4615384615   -0.1250000000   -0.3684210526    0.0005060729
   42   -0.4615384615   -0.1250000000   -0.3157894737    0.0005060729
   43   -0.4615384615   -0.1250000000   -0.2631578947    0.0005060729
   44   -0.4615384615   -0.1250000000   -0.2105263158    0.0005060729
   45   -0.4615384615   -0.1250000000   -0.1578947368    0.0005060729
   46   -0.4615384615   -0.1250000000   -0.1052631579    0.0005060729
   47   -0.4615384615   -0.1250000000   -0.0526315789    0.0005060729
   48   -0.4615384615   -0.1250000000    0.0000000000    0.0005060729
   49   -0.4615384615   -0.1250000000    0.0526315789    0.0005060729
   50   -0.4615384615   -0.1250000000    0.1052631579    0.0005060729
   51   -0.4615384615   -0.1250000000    0.1578947368    0.0005060729
   52   -0.4615384615   -0.1250000000    0.2105263158    0.0005060729
   53   -0.4615384615   -0.1250000000    0.2631578947    0.0005060729
   54   -0.4615384615   -0.1250000000    0.3157894737    0.0005060729
   55   -0.4615384615   -0.1250000000    0.3684210526    0.0005060729
   56   -0.4615384615   -0.1250000000    0.4210526316    0.0005060729
   57   -0.4615384615   -0.1250000000    0.4736842105    0.0005060729
   58   -0.4615384615    0.0000000000   -0.4736842105    0.0005060729
   59   -0.4615384615    0.0000000000   -0.4210526316    0.0005060729
   60   -0.4615384615    0.0000000000   -0.3684210526    0.0005060729
   61   -0.4615384615    0.0000000000   -0.3157894737    0.0005060729
   62   -0.4615384615    0.0000000000   -0.2631578947    0.0005060729
   63   -0.4615384615    0.0000000000   -0.2105263158    0.0005060729
   64   -0.4615384615    0.0000000000   -0.1578947368    0.0005060729
   65   -0.4615384615    0.0000000000   -0.1052631579    0.0005060729
   66   -0.4615384615    0.0000000000   -0.0526315789    0.0005060729
   67   -0.4615384615    0.0000000000    0.0000000000    0.0005060729
   68   -0.4615384615    0.0000000000    0.0526315789    0.0005060729
   69   -0.4615384615    0.0000000000    0.1052631579    0.0005060729
   70   -0.4615384615    0.0000000000    0.1578947368    0.0005060729
   71   -0.4615384615    0.0000000000    0.2105263158    0.0005060729
   72   -0.4615384615    0.0000000000    0.2631578947    0.0005060729
   73   -0.4615384615    0.0000000000    0.3157894737    0.0005060729
   74   -0.4615384615    0.0000000000    0.3684210526    0.0005060729
   75   -0.4615384615    0.0000000000    0.4210526316    0.0005060729
   76   -0.4615384615    0.0000000000    0.4736842105    0.0005060729
   77   -0.4615384615    0.1250000000   -0.4736842105    0.0005060729
   78   -0.4615384615    0.1250000000   -0.4210526316    0.0005060729
   79   -0.4615384615    0.1250000000   -0.3684210526    0.0005060729
   80   -0.4615384615    0.1250000000   -0.3157894737    0.0005060729
   81   -0.4615384615    0.1250000000   -0.2631578947    0.0005060729
   82   -0.4615384615    0.1250000000   -0.2105263158    0.0005060729
   83   -0.4615384615    0.1250000000   -0.1578947368    0.0005060729
   84   -0.4615384615    0.1250000000   -0.1052631579    0.0005060729
   85   -0.4615384615    0.1250000000   -0.0526315789    0.0005060729
   86   -0.4615384615    0.1250000000    0.0000000000    0.0005060729
   87   -0.4615384615    0.1250000000    0.0526315789    0.0005060729
   88   -0.4615384615    0.1250000000    0.1052631579    0.0005060729
   89   -0.4615384615    0.1250000000    0.1578947368    0.0005060729
   90   -0.4615384615    0.1250000000    0.2105263158    0.0005060729
   91   -0.4615384615    0.1250000000    0.2631578947    0.0005060729
   92   -0.4615384615    0.1250000000    0.3157894737    0.0005060729
   93   -0.4615384615    0.1250000000    0.3684210526    0.0005060729
   94   -0.4615384615    0.1250000000    0.4210526316    0.0005060729
   95   -0.4615384615    0.1250000000    0.4736842105    0.0005060729
   96   -0.4615384615    0.2500000000   -0.4736842105    0.0005060729
   97   -0.4615384615    0.2500000000   -0.4210526316    0.0005060729
   98   -0.4615384615    0.2500000000   -0.3684210526    0.0005060729
   99   -0.4615384615    0.2500000000   -0.3157894737    0.0005060729
  100   -0.4615384615    0.2500000000   -0.2631578947    0.0005060729
  101   -0.4615384615    0.2500000000   -0.2105263158    0.0005060729
  102   -0.4615384615    0.2500000000   -0.1578947368    0.0005060729
  103   -0.4615384615    0.2500000000   -0.1052631579    0.0005060729
  104   -0.4615384615    0.2500000000   -0.0526315789    0.0005060729
  105   -0.4615384615    0.2500000000    0.0000000000    0.0005060729
  106   -0.4615384615    0.2500000000    0.0526315789    0.0005060729
  107   -0.4615384615    0.2500000000    0.1052631579    0.0005060729
  108   -0.4615384615    0.2500000000    0.1578947368    0.0005060729
  109   -0.4615384615    0.2500000000    0.2105263158    0.0005060729
  110   -0.4615384615    0.2500000000    0.2631578947    0.0005060729
  111   -0.4615384615    0.2500000000    0.3157894737    0.0005060729
  112   -0.4615384615    0.2500000000    0.3684210526    0.0005060729
  113   -0.4615384615    0.2500000000    0.4210526316    0.0005060729
  114   -0.4615384615    0.2500000000    0.4736842105    0.0005060729
  115   -0.4615384615    0.3750000000   -0.4736842105    0.0005060729
  116   -0.4615384615    0.3750000000   -0.4210526316    0.0005060729
  117   -0.4615384615    0.3750000000   -0.3684210526    0.0005060729
  118   -0.4615384615    0.3750000000   -0.3157894737    0.0005060729
  119   -0.4615384615    0.3750000000   -0.2631578947    0.0005060729
  120   -0.4615384615    0.3750000000   -0.2105263158    0.0005060729
  121   -0.4615384615    0.3750000000   -0.1578947368    0.0005060729
  122   -0.4615384615    0.3750000000   -0.1052631579    0.0005060729
  123   -0.4615384615    0.3750000000   -0.0526315789    0.0005060729
  124   -0.4615384615    0.3750000000    0.0000000000    0.0005060729
  125   -0.4615384615    0.3750000000    0.0526315789    0.0005060729
  126   -0.4615384615    0.3750000000    0.1052631579    0.0005060729
  127   -0.4615384615    0.3750000000    0.1578947368    0.0005060729
  128   -0.4615384615    0.3750000000    0.2105263158    0.0005060729
  129   -0.4615384615    0.3750000000    0.2631578947    0.0005060729
  130   -0.4615384615    0.3750000000    0.3157894737    0.0005060729
  131   -0.4615384615    0.3750000000    0.3684210526    0.0005060729
  132   -0.4615384615    0.3750000000    0.4210526316    0.0005060729
  133   -0.4615384615    0.3750000000    0.4736842105    0.0005060729
  134   -0.4615384615    0.5000000000   -0.4736842105    0.0005060729
  135   -0.4615384615    0.5000000000   -0.4210526316    0.0005060729
  136   -0.4615384615    0.5000000000   -0.3684210526    0.0005060729
  137   -0.4615384615    0.5000000000   -0.3157894737    0.0005060729
  138   -0.4615384615    0.5000000000   -0.2631578947    0.0005060729
  139   -0.4615384615    0.5000000000   -0.2105263158    0.0005060729
  140   -0.4615384615    0.5000000000   -0.1578947368    0.0005060729
  141   -0.4615384615    0.5000000000   -0.1052631579    0.0005060729
  142   -0.4615384615    0.5000000000   -0.0526315789    0.0005060729
  143   -0.4615384615    0.5000000000    0.0000000000    0.0005060729
  144   -0.4615384615    0.5000000000    0.0526315789    0.0005060729
  145   -0.4615384615    0.5000000000    0.1052631579    0.0005060729
  146   -0.4615384615    0.5000000000    0.1578947368    0.0005060729
  147   -0.4615384615    0.5000000000    0.2105263158    0.0005060729
  148   -0.4615384615    0.5000000000    0.2631578947    0.0005060729
  149   -0.4615384615    0.5000000000    0.3157894737    0.0005060729
  150   -0.4615384615    0.5000000000    0.3684210526    0.0005060729
  151   -0.4615384615    0.5000000000    0.4210526316    0.0005060729
  152   -0.4615384615    0.5000000000    0.4736842105    0.0005060729
  153   -0.4230769231   -0.3750000000   -0.4736842105    0.0005060729
  154   -0.4230769231   -0.3750000000   -0.4210526316    0.0005060729
  155   -0.4230769231   -0.3750000000   -0.3684210526    0.0005060729
  156   -0.4230769231   -0.3750000000   -0.3157894737    0.0005060729
  157   -0.4230769231   -0.3750000000   -0.2631578947    0.0005060729
  158   -0.4230769231   -0.3750000000   -0.2105263158    0.0005060729
  159   -0.4230769231   -0.3750000000   -0.1578947368    0.0005060729
  160   -0.4230769231   -0.3750000000   -0.1052631579    0.0005060729
  161   -0.4230769231   -0.3750000000   -0.0526315789    0.0005060729
  162   -0.4230769231   -0.3750000000    0.0000000000    0.0005060729
  163   -0.4230769231   -0.3750000000    0.0526315789    0.0005060729
  164   -0.4230769231   -0.3750000000    0.1052631579    0.0005060729
  165   -0.4230769231   -0.3750000000    0.1578947368    0.0005060729
  166   -0.4230769231   -0.3750000000    0.2105263158    0.0005060729
  167   -0.4230769231   -0.3750000000    0.2631578947    0.0005060729
  168   -0.4230769231   -0.3750000000    0.3157894737    0.0005060729
  169   -0.4230769231   -0.3750000000    0.3684210526    0.0005060729
  170   -0.4230769231   -0.3750000000    0.4210526316    0.0005060729
  171   -0.4230769231   -0.3750000000    0.4736842105    0.0005060729
  172   -0.4230769231   -0.2500000000   -0.4736842105    0.0005060729
  173   -0.4230769231   -0.2500000000   -0.4210526316    0.0005060729
  174   -0.4230769231   -0.2500000000   -0.3684210526    0.0005060729
  175   -0.4230769231   -0.2500000000   -0.3157894737    0.0005060729
  176   -0.4230769231   -0.2500000000   -0.2631578947    0.0005060729
  177   -0.4230769231   -0.2500000000   -0.2105263158    0.0005060729
  178   -0.4230769231   -0.2500000000   -0.1578947368    0.0005060729
  179   -0.4230769231   -0.2500000000   -0.1052631579    0.0005060729
  180   -0.4230769231   -0.2500000000   -0.0526315789    0.0005060729
  181   -0.4230769231   -0.2500000000    0.0000000000    0.0005060729
  182   -0.4230769231   -0.2500000000    0.0526315789    0.0005060729
  183   -0.4230769231   -0.2500000000    0.1052631579    0.0005060729
  184   -0.4230769231   -0.2500000000    0.1578947368    0.0005060729
  185   -0.4230769231   -0.2500000000    0.2105263158    0.0005060729
  186   -0.4230769231   -0.2500000000    0.2631578947    0.0005060729
  187   -0.4230769231   -0.2500000000    0.3157894737    0.0005060729
  188   -0.4230769231   -0.2500000000    0.3684210526    0.0005060729
  189   -0.4230769231   -0.2500000000    0.4210526316    0.0005060729
  190   -0.4230769231   -0.2500000000    0.4736842105    0.0005060729
  191   -0.4230769231   -0.1250000000   -0.4736842105    0.0005060729
  192   -0.4230769231   -0.1250000000   -0.4210526316    0.0005060729
  193   -0.4230769231   -0.1250000000   -0.3684210526    0.0005060729
  194   -0.4230769231   -0.1250000000   -0.3157894737    0.0005060729
  195   -0.4230769231   -0.1250000000   -0.2631578947    0.0005060729
  196   -0.4230769231   -0.1250000000   -0.2105263158    0.0005060729
  197   -0.4230769231   -0.1250000000   -0.1578947368    0.0005060729
  198   -0.4230769231   -0.1250000000   -0.1052631579    0.0005060729
  199   -0.4230769231   -0.1250000000   -0.0526315789    0.0005060729
  200   -0.4230769231   -0.1250000000    0.0000000000    0.0005060729
  201   -0.4230769231   -0.1250000000    0.0526315789    0.0005060729
  202   -0.4230769231   -0.1250000000    0.1052631579    0.0005060729
  203   -0.4230769231   -0.1250000000    0.1578947368    0.0005060729
  204   -0.4230769231   -0.1250000000    0.2105263158    0.0005060729
  205   -0.4230769231   -0.1250000000    0.2631578947    0.0005060729
  206   -0.4230769231   -0.1250000000    0.3157894737    0.0005060729
  207   -0.4230769231   -0.1250000000    0.3684210526    0.0005060729
  208   -0.4230769231   -0.1250000000    0.4210526316    0.0005060729
  209   -0.4230769231   -0.1250000000    0.4736842105    0.0005060729
  210   -0.4230769231    0.0000000000   -0.4736842105    0.0005060729
  211   -0.4230769231    0.0000000000   -0.4210526316    0.0005060729
  212   -0.4230769231    0.0000000000   -0.3684210526    0.0005060729
  213   -0.4230769231    0.0000000000   -0.3157894737    0.0005060729
  214   -0.4230769231    0.0000000000   -0.2631578947    0.0005060729
  215   -0.4230769231    0.0000000000   -0.2105263158    0.0005060729
  216   -0.4230769231    0.0000000000   -0.1578947368    0.0005060729
  217   -0.4230769231    0.0000000000   -0.1052631579    0.0005060729
  218   -0.4230769231    0.0000000000   -0.0526315789    0.0005060729
  219   -0.4230769231    0.0000000000    0.0000000000    0.0005060729
  220   -0.4230769231    0.0000000000    0.0526315789    0.0005060729
  221   -0.4230769231    0.0000000000    0.1052631579    0.0005060729
  222   -0.4230769231    0.0000000000    0.1578947368    0.0005060729
  223   -0.4230769231    0.0000000000    0.2105263158    0.0005060729
  224   -0.4230769231    0.0000000000    0.2631578947    0.0005060729
  225   -0.4230769231    0.0000000000    0.3157894737    0.0005060729
  226   -0.4230769231    0.0000000000    0.3684210526    0.0005060729
  227   -0.4230769231    0.0000000000    0.4210526316    0.0005060729
  228   -0.4230769231    0.0000000000    0.4736842105    0.0005060729
  229   -0.4230769231    0.1250000000   -0.4736842105    0.0005060729
  230   -0.4230769231    0.1250000000   -0.4210526316    0.0005060729
  231   -0.4230769231    0.1250000000   -0.3684210526    0.0005060729
  232   -0.4230769231    0.1250000000   -0.3157894737    0.0005060729
  233   -0.4230769231    0.1250000000   -0.2631578947    0.0005060729
  234   -0.4230769231    0.1250000000   -0.2105263158    0.0005060729
  235   -0.4230769231    0.1250000000   -0.1578947368    0.0005060729
  236   -0.4230769231    0.1250000000   -0.1052631579    0.0005060729
  237   -0.4230769231    0.1250000000   -0.0526315789    0.0005060729
  238   -0.4230769231    0.1250000000    0.0000000000    0.0005060729
  239   -0.4230769231    0.1250000000    0.0526315789    0.0005060729
  240   -0.4230769231    0.1250000000    0.1052631579    0.0005060729
  241   -0.4230769231    0.1250000000    0.1578947368    0.0005060729
  242   -0.4230769231    0.1250000000    0.2105263158    0.0005060729
  243   -0.4230769231    0.1250000000    0.2631578947    0.0005060729
  244   -0.4230769231    0.1250000000    0.3157894737    0.0005060729
  245   -0.4230769231    0.1250000000    0.3684210526    0.0005060729
  246   -0.4230769231    0.1250000000    0.4210526316    0.0005060729
  247   -0.4230769231    0.1250000000    0.4736842105    0.0005060729
  248   -0.4230769231    0.2500000000   -0.4736842105    0.0005060729
  249   -0.4230769231    0.2500000000   -0.4210526316    0.0005060729
  250   -0.4230769231    0.2500000000   -0.3684210526    0.0005060729
  251   -0.4230769231    0.2500000000   -0.3157894737    0.0005060729
  252   -0.4230769231    0.2500000000   -0.2631578947    0.0005060729
  253   -0.4230769231    0.2500000000   -0.2105263158    0.0005060729
  254   -0.4230769231    0.2500000000   -0.1578947368    0.0005060729
  255   -0.4230769231    0.2500000000   -0.1052631579    0.0005060729
  256   -0.4230769231    0.2500000000   -0.0526315789    0.0005060729
  257   -0.4230769231    0.2500000000    0.0000000000    0.0005060729
  258   -0.4230769231    0.2500000000    0.0526315789    0.0005060729
  259   -0.4230769231    0.2500000000    0.1052631579    0.0005060729
  260   -0.4230769231    0.2500000000    0.1578947368    0.0005060729
  261   -0.4230769231    0.2500000000    0.2105263158    0.0005060729
  262   -0.4230769231    0.2500000000    0.2631578947    0.0005060729
  263   -0.4230769231    0.2500000000    0.3157894737    0.0005060729
  264   -0.4230769231    0.2500000000    0.3684210526    0.0005060729
  265   -0.4230769231    0.2500000000    0.4210526316    0.0005060729
  266   -0.4230769231    0.2500000000    0.4736842105    0.0005060729
  267   -0.4230769231    0.3750000000   -0.4736842105    0.0005060729
  268   -0.4230769231    0.3750000000   -0.4210526316    0.0005060729
  269   -0.4230769231    0.3750000000   -0.3684210526    0.0005060729
  270   -0.4230769231    0.3750000000   -0.3157894737    0.0005060729
  271   -0.4230769231    0.3750000000   -0.2631578947    0.0005060729
  272   -0.4230769231    0.3750000000   -0.2105263158    0.0005060729
  273   -0.4230769231    0.3750000000   -0.1578947368    0.0005060729
  274   -0.4230769231    0.3750000000   -0.1052631579    0.0005060729
  275   -0.4230769231    0.3750000000   -0.0526315789    0.0005060729
  276   -0.4230769231    0.3750000000    0.0000000000    0.0005060729
  277   -0.4230769231    0.3750000000    0.0526315789    0.0005060729
  278   -0.4230769231    0.3750000000    0.1052631579    0.0005060729
  279   -0.4230769231    0.3750000000    0.1578947368    0.0005060729
  280   -0.4230769231    0.3750000000    0.2105263158    0.0005060729
  281   -0.4230769231    0.3750000000    0.2631578947    0.0005060729
  282   -0.4230769231    0.3750000000    0.3157894737    0.0005060729
  283   -0.4230769231    0.3750000000    0.3684210526    0.0005060729
  284   -0.4230769231    0.3750000000    0.4210526316    0.0005060729
  285   -0.4230769231    0.3750000000    0.4736842105    0.0005060729
  286   -0.4230769231    0.5000000000   -0.4736842105    0.0005060729
  287   -0.4230769231    0.5000000000   -0.4210526316    0.0005060729
  288   -0.4230769231    0.5000000000   -0.3684210526    0.0005060729
  289   -0.4230769231    0.5000000000   -0.3157894737    0.0005060729
  290   -0.4230769231    0.5000000000   -0.2631578947    0.0005060729
  291   -0.4230769231    0.5000000000   -0.2105263158    0.0005060729
  292   -0.4230769231    0.5000000000   -0.1578947368    0.0005060729
  293   -0.4230769231    0.5000000000   -0.1052631579    0.0005060729
  294   -0.4230769231    0.5000000000   -0.0526315789    0.0005060729
  295   -0.4230769231    0.5000000000    0.0000000000    0.0005060729
  296   -0.4230769231    0.5000000000    0.0526315789    0.0005060729
  297   -0.4230769231    0.5000000000    0.1052631579    0.0005060729
  298   -0.4230769231    0.5000000000    0.1578947368    0.0005060729
  299   -0.4230769231    0.5000000000    0.2105263158    0.0005060729
  300   -0.4230769231    0.5000000000    0.2631578947    0.0005060729
  301   -0.4230769231    0.5000000000    0.3157894737    0.0005060729
  302   -0.4230769231    0.5000000000    0.3684210526    0.0005060729
  303   -0.4230769231    0.5000000000    0.4210526316    0.0005060729
  304   -0.4230769231    0.5000000000    0.4736842105    0.0005060729
  305   -0.3846153846   -0.3750000000   -0.4736842105    0.0005060729
  306   -0.3846153846   -0.3750000000   -0.4210526316    0.0005060729
  307   -0.3846153846   -0.3750000000   -0.3684210526    0.0005060729
  308   -0.3846153846   -0.3750000000   -0.3157894737    0.0005060729
  309   -0.3846153846   -0.3750000000   -0.2631578947    0.0005060729
  310   -0.3846153846   -0.3750000000   -0.2105263158    0.0005060729
  311   -0.3846153846   -0.3750000000   -0.1578947368    0.0005060729
  312   -0.3846153846   -0.3750000000   -0.1052631579    0.0005060729
  313   -0.3846153846   -0.3750000000   -0.0526315789    0.0005060729
  314   -0.3846153846   -0.3750000000    0.0000000000    0.0005060729
  315   -0.3846153846   -0.3750000000    0.0526315789    0.0005060729
  316   -0.3846153846   -0.3750000000    0.1052631579    0.0005060729
  317   -0.3846153846   -0.3750000000    0.1578947368    0.0005060729
  318   -0.3846153846   -0.3750000000    0.2105263158    0.0005060729
  319   -0.3846153846   -0.3750000000    0.2631578947    0.0005060729
  320   -0.3846153846   -0.3750000000    0.3157894737    0.0005060729
  321   -0.3846153846   -0.3750000000    0.3684210526    0.0005060729
  322   -0.3846153846   -0.3750000000    0.4210526316    0.0005060729
  323   -0.3846153846   -0.3750000000    0.4736842105    0.0005060729
  324   -0.3846153846   -0.2500000000   -0.4736842105    0.0005060729
  325   -0.3846153846   -0.2500000000   -0.4210526316    0.0005060729
  326   -0.3846153846   -0.2500000000   -0.3684210526    0.0005060729
  327   -0.3846153846   -0.2500000000   -0.3157894737    0.0005060729
  328   -0.3846153846   -0.2500000000   -0.2631578947    0.0005060729
  329   -0.3846153846   -0.2500000000   -0.2105263158    0.0005060729
  330   -0.3846153846   -0.2500000000   -0.1578947368    0.0005060729
  331   -0.3846153846   -0.2500000000   -0.1052631579    0.0005060729
  332   -0.3846153846   -0.2500000000   -0.0526315789    0.0005060729
  333   -0.3846153846   -0.2500000000    0.0000000000    0.0005060729
  334   -0.3846153846   -0.2500000000    0.0526315789    0.0005060729
  335   -0.3846153846   -0.2500000000    0.1052631579    0.0005060729
  336   -0.3846153846   -0.2500000000    0.1578947368    0.0005060729
  337   -0.3846153846   -0.2500000000    0.2105263158    0.0005060729
  338   -0.3846153846   -0.2500000000    0.2631578947    0.0005060729
  339   -0.3846153846   -0.2500000000    0.3157894737    0.0005060729
  340   -0.3846153846   -0.2500000000    0.3684210526    0.0005060729
  341   -0.3846153846   -0.2500000000    0.4210526316    0.0005060729
  342   -0.3846153846   -0.2500000000    0.4736842105    0.0005060729
  343   -0.3846153846   -0.1250000000   -0.4736842105    0.0005060729
  344   -0.3846153846   -0.1250000000   -0.4210526316    0.0005060729
  345   -0.3846153846   -0.1250000000   -0.3684210526    0.0005060729
  346   -0.3846153846   -0.1250000000   -0.3157894737    0.0005060729
  347   -0.3846153846   -0.1250000000   -0.2631578947    0.0005060729
  348   -0.3846153846   -0.1250000000   -0.2105263158    0.0005060729
  349   -0.3846153846   -0.1250000000   -0.1578947368    0.0005060729
  350   -0.3846153846   -0.1250000000   -0.1052631579    0.0005060729
  351   -0.3846153846   -0.1250000000   -0.0526315789    0.0005060729
  352   -0.3846153846   -0.1250000000    0.0000000000    0.0005060729
  353   -0.3846153846   -0.1250000000    0.0526315789    0.0005060729
  354   -0.3846153846   -0.1250000000    0.1052631579    0.0005060729
  355   -0.3846153846   -0.1250000000    0.1578947368    0.0005060729
  356   -0.3846153846   -0.1250000000    0.2105263158    0.0005060729
  357   -0.3846153846   -0.1250000000    0.2631578947    0.0005060729
  358   -0.3846153846   -0.1250000000    0.3157894737    0.0005060729
  359   -0.3846153846   -0.1250000000    0.3684210526    0.0005060729
  360   -0.3846153846   -0.1250000000    0.4210526316    0.0005060729
  361   -0.3846153846   -0.1250000000    0.4736842105    0.0005060729
  362   -0.3846153846    0.0000000000   -0.4736842105    0.0005060729
  363   -0.3846153846    0.0000000000   -0.4210526316    0.0005060729
  364   -0.3846153846    0.0000000000   -0.3684210526    0.0005060729
  365   -0.3846153846    0.0000000000   -0.3157894737    0.0005060729
  366   -0.3846153846    0.0000000000   -0.2631578947    0.0005060729
  367   -0.3846153846    0.0000000000   -0.2105263158    0.0005060729
  368   -0.3846153846    0.0000000000   -0.1578947368    0.0005060729
  369   -0.3846153846    0.0000000000   -0.1052631579    0.0005060729
  370   -0.3846153846    0.0000000000   -0.0526315789    0.0005060729
  371   -0.3846153846    0.0000000000    0.0000000000    0.0005060729
  372   -0.3846153846    0.0000000000    0.0526315789    0.0005060729
  373   -0.3846153846    0.0000000000    0.1052631579    0.0005060729
  374   -0.3846153846    0.0000000000    0.1578947368    0.0005060729
  375   -0.3846153846    0.0000000000    0.2105263158    0.0005060729
  376   -0.3846153846    0.0000000000    0.2631578947    0.0005060729
  377   -0.3846153846    0.0000000000    0.3157894737    0.0005060729
  378   -0.3846153846    0.0000000000    0.3684210526    0.0005060729
  379   -0.3846153846    0.0000000000    0.4210526316    0.0005060729
  380   -0.3846153846    0.0000000000    0.4736842105    0.0005060729
  381   -0.3846153846    0.1250000000   -0.4736842105    0.0005060729
  382   -0.3846153846    0.1250000000   -0.4210526316    0.0005060729
  383   -0.3846153846    0.1250000000   -0.3684210526    0.0005060729
  384   -0.3846153846    0.1250000000   -0.3157894737    0.0005060729
  385   -0.3846153846    0.1250000000   -0.2631578947    0.0005060729
  386   -0.3846153846    0.1250000000   -0.2105263158    0.0005060729
  387   -0.3846153846    0.1250000000   -0.1578947368    0.0005060729
  388   -0.3846153846    0.1250000000   -0.1052631579    0.0005060729
  389   -0.3846153846    0.1250000000   -0.0526315789    0.0005060729
  390   -0.3846153846    0.1250000000    0.0000000000    0.0005060729
  391   -0.3846153846    0.1250000000    0.0526315789    0.0005060729
  392   -0.3846153846    0.1250000000    0.1052631579    0.0005060729
  393   -0.3846153846    0.1250000000    0.1578947368    0.0005060729
  394   -0.3846153846    0.1250000000    0.2105263158    0.0005060729
  395   -0.3846153846    0.1250000000    0.2631578947    0.0005060729
  396   -0.3846153846    0.1250000000    0.3157894737    0.0005060729
  397   -0.3846153846    0.1250000000    0.3684210526    0.0005060729
  398   -0.3846153846    0.1250000000    0.4210526316    0.0005060729
  399   -0.3846153846    0.1250000000    0.4736842105    0.0005060729
  400   -0.3846153846    0.2500000000   -0.4736842105    0.0005060729
  401   -0.3846153846    0.2500000000   -0.4210526316    0.0005060729
  402   -0.3846153846    0.2500000000   -0.3684210526    0.0005060729
  403   -0.3846153846    0.2500000000   -0.3157894737    0.0005060729
  404   -0.3846153846    0.2500000000   -0.2631578947    0.0005060729
  405   -0.3846153846    0.2500000000   -0.2105263158    0.0005060729
  406   -0.3846153846    0.2500000000   -0.1578947368    0.0005060729
  407   -0.3846153846    0.2500000000   -0.1052631579    0.0005060729
  408   -0.3846153846    0.2500000000   -0.0526315789    0.0005060729
  409   -0.3846153846    0.2500000000    0.0000000000    0.0005060729
  410   -0.3846153846    0.2500000000    0.0526315789    0.0005060729
  411   -0.3846153846    0.2500000000    0.1052631579    0.0005060729
  412   -0.3846153846    0.2500000000    0.1578947368    0.0005060729
  413   -0.3846153846    0.2500000000    0.2105263158    0.0005060729
  414   -0.3846153846    0.2500000000    0.2631578947    0.0005060729
  415   -0.3846153846    0.2500000000    0.3157894737    0.0005060729
  416   -0.3846153846    0.2500000000    0.3684210526    0.0005060729
  417   -0.3846153846    0.2500000000    0.4210526316    0.0005060729
  418   -0.3846153846    0.2500000000    0.4736842105    0.0005060729
  419   -0.3846153846    0.3750000000   -0.4736842105    0.0005060729
  420   -0.3846153846    0.3750000000   -0.4210526316    0.0005060729
  421   -0.3846153846    0.3750000000   -0.3684210526    0.0005060729
  422   -0.3846153846    0.3750000000   -0.3157894737    0.0005060729
  423   -0.3846153846    0.3750000000   -0.2631578947    0.0005060729
  424   -0.3846153846    0.3750000000   -0.2105263158    0.0005060729
  425   -0.3846153846    0.3750000000   -0.1578947368    0.0005060729
  426   -0.3846153846    0.3750000000   -0.1052631579    0.0005060729
  427   -0.3846153846    0.3750000000   -0.0526315789    0.0005060729
  428   -0.3846153846    0.3750000000    0.0000000000    0.0005060729
  429   -0.3846153846    0.3750000000    0.0526315789    0.0005060729
  430   -0.3846153846    0.3750000000    0.1052631579    0.0005060729
  431   -0.3846153846    0.3750000000    0.1578947368    0.0005060729
  432   -0.3846153846    0.3750000000    0.2105263158    0.0005060729
  433   -0.3846153846    0.3750000000    0.2631578947    0.0005060729
  434   -0.3846153846    0.3750000000    0.3157894737    0.0005060729
  435   -0.3846153846    0.3750000000    0.3684210526    0.0005060729
  436   -0.3846153846    0.3750000000    0.4210526316    0.0005060729
  437   -0.3846153846    0.3750000000    0.4736842105    0.0005060729
  438   -0.3846153846    0.5000000000   -0.4736842105    0.0005060729
  439   -0.3846153846    0.5000000000   -0.4210526316    0.0005060729
  440   -0.3846153846    0.5000000000   -0.3684210526    0.0005060729
  441   -0.3846153846    0.5000000000   -0.3157894737    0.0005060729
  442   -0.3846153846    0.5000000000   -0.2631578947    0.0005060729
  443   -0.3846153846    0.5000000000   -0.2105263158    0.0005060729
  444   -0.3846153846    0.5000000000   -0.1578947368    0.0005060729
  445   -0.3846153846    0.5000000000   -0.1052631579    0.0005060729
  446   -0.3846153846    0.5000000000   -0.0526315789    0.0005060729
  447   -0.3846153846    0.5000000000    0.0000000000    0.0005060729
  448   -0.3846153846    0.5000000000    0.0526315789    0.0005060729
  449   -0.3846153846    0.5000000000    0.1052631579    0.0005060729
  450   -0.3846153846    0.5000000000    0.1578947368    0.0005060729
  451   -0.3846153846    0.5000000000    0.2105263158    0.0005060729
  452   -0.3846153846    0.5000000000    0.2631578947    0.0005060729
  453   -0.3846153846    0.5000000000    0.3157894737    0.0005060729
  454   -0.3846153846    0.5000000000    0.3684210526    0.0005060729
  455   -0.3846153846    0.5000000000    0.4210526316    0.0005060729
  456   -0.3846153846    0.5000000000    0.4736842105    0.0005060729
  457   -0.3461538462   -0.3750000000   -0.4736842105    0.0005060729
  458   -0.3461538462   -0.3750000000   -0.4210526316    0.0005060729
  459   -0.3461538462   -0.3750000000   -0.3684210526    0.0005060729
  460   -0.3461538462   -0.3750000000   -0.3157894737    0.0005060729
  461   -0.3461538462   -0.3750000000   -0.2631578947    0.0005060729
  462   -0.3461538462   -0.3750000000   -0.2105263158    0.0005060729
  463   -0.3461538462   -0.3750000000   -0.1578947368    0.0005060729
  464   -0.3461538462   -0.3750000000   -0.1052631579    0.0005060729
  465   -0.3461538462   -0.3750000000   -0.0526315789    0.0005060729
  466   -0.3461538462   -0.3750000000    0.0000000000    0.0005060729
  467   -0.3461538462   -0.3750000000    0.0526315789    0.0005060729
  468   -0.3461538462   -0.3750000000    0.1052631579    0.0005060729
  469   -0.3461538462   -0.3750000000    0.1578947368    0.0005060729
  470   -0.3461538462   -0.3750000000    0.2105263158    0.0005060729
  471   -0.3461538462   -0.3750000000    0.2631578947    0.0005060729
  472   -0.3461538462   -0.3750000000    0.3157894737    0.0005060729
  473   -0.3461538462   -0.3750000000    0.3684210526    0.0005060729
  474   -0.3461538462   -0.3750000000    0.4210526316    0.0005060729
  475   -0.3461538462   -0.3750000000    0.4736842105    0.0005060729
  476   -0.3461538462   -0.2500000000   -0.4736842105    0.0005060729
  477   -0.3461538462   -0.2500000000   -0.4210526316    0.0005060729
  478   -0.3461538462   -0.2500000000   -0.3684210526    0.0005060729
  479   -0.3461538462   -0.2500000000   -0.3157894737    0.0005060729
  480   -0.3461538462   -0.2500000000   -0.2631578947    0.0005060729
  481   -0.3461538462   -0.2500000000   -0.2105263158    0.0005060729
  482   -0.3461538462   -0.2500000000   -0.1578947368    0.0005060729
  483   -0.3461538462   -0.2500000000   -0.1052631579    0.0005060729
  484   -0.3461538462   -0.2500000000   -0.0526315789    0.0005060729
  485   -0.3461538462   -0.2500000000    0.0000000000    0.0005060729
  486   -0.3461538462   -0.2500000000    0.0526315789    0.0005060729
  487   -0.3461538462   -0.2500000000    0.1052631579    0.0005060729
  488   -0.3461538462   -0.2500000000    0.1578947368    0.0005060729
  489   -0.3461538462   -0.2500000000    0.2105263158    0.0005060729
  490   -0.3461538462   -0.2500000000    0.2631578947    0.0005060729
  491   -0.3461538462   -0.2500000000    0.3157894737    0.0005060729
  492   -0.3461538462   -0.2500000000    0.3684210526    0.0005060729
  493   -0.3461538462   -0.2500000000    0.4210526316    0.0005060729
  494   -0.3461538462   -0.2500000000    0.4736842105    0.0005060729
  495   -0.3461538462   -0.1250000000   -0.4736842105    0.0005060729
  496   -0.3461538462   -0.1250000000   -0.4210526316    0.0005060729
  497   -0.3461538462   -0.1250000000   -0.3684210526    0.0005060729
  498   -0.3461538462   -0.1250000000   -0.3157894737    0.0005060729
  499   -0.3461538462   -0.1250000000   -0.2631578947    0.0005060729
  500   -0.3461538462   -0.1250000000   -0.2105263158    0.0005060729
  501   -0.3461538462   -0.1250000000   -0.1578947368    0.0005060729
  502   -0.3461538462   -0.1250000000   -0.1052631579    0.0005060729
  503   -0.3461538462   -0.1250000000   -0.0526315789    0.0005060729
  504   -0.3461538462   -0.1250000000    0.0000000000    0.0005060729
  505   -0.3461538462   -0.1250000000    0.0526315789    0.0005060729
  506   -0.3461538462   -0.1250000000    0.1052631579    0.0005060729
  507   -0.3461538462   -0.1250000000    0.1578947368    0.0005060729
  508   -0.3461538462   -0.1250000000    0.2105263158    0.0005060729
  509   -0.3461538462   -0.1250000000    0.2631578947    0.0005060729
  510   -0.3461538462   -0.1250000000    0.3157894737    0.0005060729
  511   -0.3461538462   -0.1250000000    0.3684210526    0.0005060729
  512   -0.3461538462   -0.1250000000    0.4210526316    0.0005060729
  513   -0.3461538462   -0.1250000000    0.4736842105    0.0005060729
  514   -0.3461538462    0.0000000000   -0.4736842105    0.0005060729
  515   -0.3461538462    0.0000000000   -0.4210526316    0.0005060729
  516   -0.3461538462    0.0000000000   -0.3684210526    0.0005060729
  517   -0.3461538462    0.0000000000   -0.3157894737    0.0005060729
  518   -0.3461538462    0.0000000000   -0.2631578947    0.0005060729
  519   -0.3461538462    0.0000000000   -0.2105263158    0.0005060729
  520   -0.3461538462    0.0000000000   -0.1578947368    0.0005060729
  521   -0.3461538462    0.0000000000   -0.1052631579    0.0005060729
  522   -0.3461538462    0.0000000000   -0.0526315789    0.0005060729
  523   -0.3461538462    0.0000000000    0.0000000000    0.0005060729
  524   -0.3461538462    0.0000000000    0.0526315789    0.0005060729
  525   -0.3461538462    0.0000000000    0.1052631579    0.0005060729
  526   -0.3461538462    0.0000000000    0.1578947368    0.0005060729
  527   -0.3461538462    0.0000000000    0.2105263158    0.0005060729
  528   -0.3461538462    0.0000000000    0.2631578947    0.0005060729
  529   -0.3461538462    0.0000000000    0.3157894737    0.0005060729
  530   -0.3461538462    0.0000000000    0.3684210526    0.0005060729
  531   -0.3461538462    0.0000000000    0.4210526316    0.0005060729
  532   -0.3461538462    0.0000000000    0.4736842105    0.0005060729
  533   -0.3461538462    0.1250000000   -0.4736842105    0.0005060729
  534   -0.3461538462    0.1250000000   -0.4210526316    0.0005060729
  535   -0.3461538462    0.1250000000   -0.3684210526    0.0005060729
  536   -0.3461538462    0.1250000000   -0.3157894737    0.0005060729
  537   -0.3461538462    0.1250000000   -0.2631578947    0.0005060729
  538   -0.3461538462    0.1250000000   -0.2105263158    0.0005060729
  539   -0.3461538462    0.1250000000   -0.1578947368    0.0005060729
  540   -0.3461538462    0.1250000000   -0.1052631579    0.0005060729
  541   -0.3461538462    0.1250000000   -0.0526315789    0.0005060729
  542   -0.3461538462    0.1250000000    0.0000000000    0.0005060729
  543   -0.3461538462    0.1250000000    0.0526315789    0.0005060729
  544   -0.3461538462    0.1250000000    0.1052631579    0.0005060729
  545   -0.3461538462    0.1250000000    0.1578947368    0.0005060729
  546   -0.3461538462    0.1250000000    0.2105263158    0.0005060729
  547   -0.3461538462    0.1250000000    0.2631578947    0.0005060729
  548   -0.3461538462    0.1250000000    0.3157894737    0.0005060729
  549   -0.3461538462    0.1250000000    0.3684210526    0.0005060729
  550   -0.3461538462    0.1250000000    0.4210526316    0.0005060729
  551   -0.3461538462    0.1250000000    0.4736842105    0.0005060729
  552   -0.3461538462    0.2500000000   -0.4736842105    0.0005060729
  553   -0.3461538462    0.2500000000   -0.4210526316    0.0005060729
  554   -0.3461538462    0.2500000000   -0.3684210526    0.0005060729
  555   -0.3461538462    0.2500000000   -0.3157894737    0.0005060729
  556   -0.3461538462    0.2500000000   -0.2631578947    0.0005060729
  557   -0.3461538462    0.2500000000   -0.2105263158    0.0005060729
  558   -0.3461538462    0.2500000000   -0.1578947368    0.0005060729
  559   -0.3461538462    0.2500000000   -0.1052631579    0.0005060729
  560   -0.3461538462    0.2500000000   -0.0526315789    0.0005060729
  561   -0.3461538462    0.2500000000    0.0000000000    0.0005060729
  562   -0.3461538462    0.2500000000    0.0526315789    0.0005060729
  563   -0.3461538462    0.2500000000    0.1052631579    0.0005060729
  564   -0.3461538462    0.2500000000    0.1578947368    0.0005060729
  565   -0.3461538462    0.2500000000    0.2105263158    0.0005060729
  566   -0.3461538462    0.2500000000    0.2631578947    0.0005060729
  567   -0.3461538462    0.2500000000    0.3157894737    0.0005060729
  568   -0.3461538462    0.2500000000    0.3684210526    0.0005060729
  569   -0.3461538462    0.2500000000    0.4210526316    0.0005060729
  570   -0.3461538462    0.2500000000    0.4736842105    0.0005060729
  571   -0.3461538462    0.3750000000   -0.4736842105    0.0005060729
  572   -0.3461538462    0.3750000000   -0.4210526316    0.0005060729
  573   -0.3461538462    0.3750000000   -0.3684210526    0.0005060729
  574   -0.3461538462    0.3750000000   -0.3157894737    0.0005060729
  575   -0.3461538462    0.3750000000   -0.2631578947    0.0005060729
  576   -0.3461538462    0.3750000000   -0.2105263158    0.0005060729
  577   -0.3461538462    0.3750000000   -0.1578947368    0.0005060729
  578   -0.3461538462    0.3750000000   -0.1052631579    0.0005060729
  579   -0.3461538462    0.3750000000   -0.0526315789    0.0005060729
  580   -0.3461538462    0.3750000000    0.0000000000    0.0005060729
  581   -0.3461538462    0.3750000000    0.0526315789    0.0005060729
  582   -0.3461538462    0.3750000000    0.1052631579    0.0005060729
  583   -0.3461538462    0.3750000000    0.1578947368    0.0005060729
  584   -0.3461538462    0.3750000000    0.2105263158    0.0005060729
  585   -0.3461538462    0.3750000000    0.2631578947    0.0005060729
  586   -0.3461538462    0.3750000000    0.3157894737    0.0005060729
  587   -0.3461538462    0.3750000000    0.3684210526    0.0005060729
  588   -0.3461538462    0.3750000000    0.4210526316    0.0005060729
  589   -0.3461538462    0.3750000000    0.4736842105    0.0005060729
  590   -0.3461538462    0.5000000000   -0.4736842105    0.0005060729
  591   -0.3461538462    0.5000000000   -0.4210526316    0.0005060729
  592   -0.3461538462    0.5000000000   -0.3684210526    0.0005060729
  593   -0.3461538462    0.5000000000   -0.3157894737    0.0005060729
  594   -0.3461538462    0.5000000000   -0.2631578947    0.0005060729
  595   -0.3461538462    0.5000000000   -0.2105263158    0.0005060729
  596   -0.3461538462    0.5000000000   -0.1578947368    0.0005060729
  597   -0.3461538462    0.5000000000   -0.1052631579    0.0005060729
  598   -0.3461538462    0.5000000000   -0.0526315789    0.0005060729
  599   -0.3461538462    0.5000000000    0.0000000000    0.0005060729
  600   -0.3461538462    0.5000000000    0.0526315789    0.0005060729
  601   -0.3461538462    0.5000000000    0.1052631579    0.0005060729
  602   -0.3461538462    0.5000000000    0.1578947368    0.0005060729
  603   -0.3461538462    0.5000000000    0.2105263158    0.0005060729
  604   -0.3461538462    0.5000000000    0.2631578947    0.0005060729
  605   -0.3461538462    0.5000000000    0.3157894737    0.0005060729
  606   -0.3461538462    0.5000000000    0.3684210526    0.0005060729
  607   -0.3461538462    0.5000000000    0.4210526316    0.0005060729
  608   -0.3461538462    0.5000000000    0.4736842105    0.0005060729
  609   -0.3076923077   -0.3750000000   -0.4736842105    0.0005060729
  610   -0.3076923077   -0.3750000000   -0.4210526316    0.0005060729
  611   -0.3076923077   -0.3750000000   -0.3684210526    0.0005060729
  612   -0.3076923077   -0.3750000000   -0.3157894737    0.0005060729
  613   -0.3076923077   -0.3750000000   -0.2631578947    0.0005060729
  614   -0.3076923077   -0.3750000000   -0.2105263158    0.0005060729
  615   -0.3076923077   -0.3750000000   -0.1578947368    0.0005060729
  616   -0.3076923077   -0.3750000000   -0.1052631579    0.0005060729
  617   -0.3076923077   -0.3750000000   -0.0526315789    0.0005060729
  618   -0.3076923077   -0.3750000000    0.0000000000    0.0005060729
  619   -0.3076923077   -0.3750000000    0.0526315789    0.0005060729
  620   -0.3076923077   -0.3750000000    0.1052631579    0.0005060729
  621   -0.3076923077   -0.3750000000    0.1578947368    0.0005060729
  622   -0.3076923077   -0.3750000000    0.2105263158    0.0005060729
  623   -0.3076923077   -0.3750000000    0.2631578947    0.0005060729
  624   -0.3076923077   -0.3750000000    0.3157894737    0.0005060729
  625   -0.3076923077   -0.3750000000    0.3684210526    0.0005060729
  626   -0.3076923077   -0.3750000000    0.4210526316    0.0005060729
  627   -0.3076923077   -0.3750000000    0.4736842105    0.0005060729
  628   -0.3076923077   -0.2500000000   -0.4736842105    0.0005060729
  629   -0.3076923077   -0.2500000000   -0.4210526316    0.0005060729
  630   -0.3076923077   -0.2500000000   -0.3684210526    0.0005060729
  631   -0.3076923077   -0.2500000000   -0.3157894737    0.0005060729
  632   -0.3076923077   -0.2500000000   -0.2631578947    0.0005060729
  633   -0.3076923077   -0.2500000000   -0.2105263158    0.0005060729
  634   -0.3076923077   -0.2500000000   -0.1578947368    0.0005060729
  635   -0.3076923077   -0.2500000000   -0.1052631579    0.0005060729
  636   -0.3076923077   -0.2500000000   -0.0526315789    0.0005060729
  637   -0.3076923077   -0.2500000000    0.0000000000    0.0005060729
  638   -0.3076923077   -0.2500000000    0.0526315789    0.0005060729
  639   -0.3076923077   -0.2500000000    0.1052631579    0.0005060729
  640   -0.3076923077   -0.2500000000    0.1578947368    0.0005060729
  641   -0.3076923077   -0.2500000000    0.2105263158    0.0005060729
  642   -0.3076923077   -0.2500000000    0.2631578947    0.0005060729
  643   -0.3076923077   -0.2500000000    0.3157894737    0.0005060729
  644   -0.3076923077   -0.2500000000    0.3684210526    0.0005060729
  645   -0.3076923077   -0.2500000000    0.4210526316    0.0005060729
  646   -0.3076923077   -0.2500000000    0.4736842105    0.0005060729
  647   -0.3076923077   -0.1250000000   -0.4736842105    0.0005060729
  648   -0.3076923077   -0.1250000000   -0.4210526316    0.0005060729
  649   -0.3076923077   -0.1250000000   -0.3684210526    0.0005060729
  650   -0.3076923077   -0.1250000000   -0.3157894737    0.0005060729
  651   -0.3076923077   -0.1250000000   -0.2631578947    0.0005060729
  652   -0.3076923077   -0.1250000000   -0.2105263158    0.0005060729
  653   -0.3076923077   -0.1250000000   -0.1578947368    0.0005060729
  654   -0.3076923077   -0.1250000000   -0.1052631579    0.0005060729
  655   -0.3076923077   -0.1250000000   -0.0526315789    0.0005060729
  656   -0.3076923077   -0.1250000000    0.0000000000    0.0005060729
  657   -0.3076923077   -0.1250000000    0.0526315789    0.0005060729
  658   -0.3076923077   -0.1250000000    0.1052631579    0.0005060729
  659   -0.3076923077   -0.1250000000    0.1578947368    0.0005060729
  660   -0.3076923077   -0.1250000000    0.2105263158    0.0005060729
  661   -0.3076923077   -0.1250000000    0.2631578947    0.0005060729
  662   -0.3076923077   -0.1250000000    0.3157894737    0.0005060729
  663   -0.3076923077   -0.1250000000    0.3684210526    0.0005060729
  664   -0.3076923077   -0.1250000000    0.4210526316    0.0005060729
  665   -0.3076923077   -0.1250000000    0.4736842105    0.0005060729
  666   -0.3076923077    0.0000000000   -0.4736842105    0.0005060729
  667   -0.3076923077    0.0000000000   -0.4210526316    0.0005060729
  668   -0.3076923077    0.0000000000   -0.3684210526    0.0005060729
  669   -0.3076923077    0.0000000000   -0.3157894737    0.0005060729
  670   -0.3076923077    0.0000000000   -0.2631578947    0.0005060729
  671   -0.3076923077    0.0000000000   -0.2105263158    0.0005060729
  672   -0.3076923077    0.0000000000   -0.1578947368    0.0005060729
  673   -0.3076923077    0.0000000000   -0.1052631579    0.0005060729
  674   -0.3076923077    0.0000000000   -0.0526315789    0.0005060729
  675   -0.3076923077    0.0000000000    0.0000000000    0.0005060729
  676   -0.3076923077    0.0000000000    0.0526315789    0.0005060729
  677   -0.3076923077    0.0000000000    0.1052631579    0.0005060729
  678   -0.3076923077    0.0000000000    0.1578947368    0.0005060729
  679   -0.3076923077    0.0000000000    0.2105263158    0.0005060729
  680   -0.3076923077    0.0000000000    0.2631578947    0.0005060729
  681   -0.3076923077    0.0000000000    0.3157894737    0.0005060729
  682   -0.3076923077    0.0000000000    0.3684210526    0.0005060729
  683   -0.3076923077    0.0000000000    0.4210526316    0.0005060729
  684   -0.3076923077    0.0000000000    0.4736842105    0.0005060729
  685   -0.3076923077    0.1250000000   -0.4736842105    0.0005060729
  686   -0.3076923077    0.1250000000   -0.4210526316    0.0005060729
  687   -0.3076923077    0.1250000000   -0.3684210526    0.0005060729
  688   -0.3076923077    0.1250000000   -0.3157894737    0.0005060729
  689   -0.3076923077    0.1250000000   -0.2631578947    0.0005060729
  690   -0.3076923077    0.1250000000   -0.2105263158    0.0005060729
  691   -0.3076923077    0.1250000000   -0.1578947368    0.0005060729
  692   -0.3076923077    0.1250000000   -0.1052631579    0.0005060729
  693   -0.3076923077    0.1250000000   -0.0526315789    0.0005060729
  694   -0.3076923077    0.1250000000    0.0000000000    0.0005060729
  695   -0.3076923077    0.1250000000    0.0526315789    0.0005060729
  696   -0.3076923077    0.1250000000    0.1052631579    0.0005060729
  697   -0.3076923077    0.1250000000    0.1578947368    0.0005060729
  698   -0.3076923077    0.1250000000    0.2105263158    0.0005060729
  699   -0.3076923077    0.1250000000    0.2631578947    0.0005060729
  700   -0.3076923077    0.1250000000    0.3157894737    0.0005060729
  701   -0.3076923077    0.1250000000    0.3684210526    0.0005060729
  702   -0.3076923077    0.1250000000    0.4210526316    0.0005060729
  703   -0.3076923077    0.1250000000    0.4736842105    0.0005060729
  704   -0.3076923077    0.2500000000   -0.4736842105    0.0005060729
  705   -0.3076923077    0.2500000000   -0.4210526316    0.0005060729
  706   -0.3076923077    0.2500000000   -0.3684210526    0.0005060729
  707   -0.3076923077    0.2500000000   -0.3157894737    0.0005060729
  708   -0.3076923077    0.2500000000   -0.2631578947    0.0005060729
  709   -0.3076923077    0.2500000000   -0.2105263158    0.0005060729
  710   -0.3076923077    0.2500000000   -0.1578947368    0.0005060729
  711   -0.3076923077    0.2500000000   -0.1052631579    0.0005060729
  712   -0.3076923077    0.2500000000   -0.0526315789    0.0005060729
  713   -0.3076923077    0.2500000000    0.0000000000    0.0005060729
  714   -0.3076923077    0.2500000000    0.0526315789    0.0005060729
  715   -0.3076923077    0.2500000000    0.1052631579    0.0005060729
  716   -0.3076923077    0.2500000000    0.1578947368    0.0005060729
  717   -0.3076923077    0.2500000000    0.2105263158    0.0005060729
  718   -0.3076923077    0.2500000000    0.2631578947    0.0005060729
  719   -0.3076923077    0.2500000000    0.3157894737    0.0005060729
  720   -0.3076923077    0.2500000000    0.3684210526    0.0005060729
  721   -0.3076923077    0.2500000000    0.4210526316    0.0005060729
  722   -0.3076923077    0.2500000000    0.4736842105    0.0005060729
  723   -0.3076923077    0.3750000000   -0.4736842105    0.0005060729
  724   -0.3076923077    0.3750000000   -0.4210526316    0.0005060729
  725   -0.3076923077    0.3750000000   -0.3684210526    0.0005060729
  726   -0.3076923077    0.3750000000   -0.3157894737    0.0005060729
  727   -0.3076923077    0.3750000000   -0.2631578947    0.0005060729
  728   -0.3076923077    0.3750000000   -0.2105263158    0.0005060729
  729   -0.3076923077    0.3750000000   -0.1578947368    0.0005060729
  730   -0.3076923077    0.3750000000   -0.1052631579    0.0005060729
  731   -0.3076923077    0.3750000000   -0.0526315789    0.0005060729
  732   -0.3076923077    0.3750000000    0.0000000000    0.0005060729
  733   -0.3076923077    0.3750000000    0.0526315789    0.0005060729
  734   -0.3076923077    0.3750000000    0.1052631579    0.0005060729
  735   -0.3076923077    0.3750000000    0.1578947368    0.0005060729
  736   -0.3076923077    0.3750000000    0.2105263158    0.0005060729
  737   -0.3076923077    0.3750000000    0.2631578947    0.0005060729
  738   -0.3076923077    0.3750000000    0.3157894737    0.0005060729
  739   -0.3076923077    0.3750000000    0.3684210526    0.0005060729
  740   -0.3076923077    0.3750000000    0.4210526316    0.0005060729
  741   -0.3076923077    0.3750000000    0.4736842105    0.0005060729
  742   -0.3076923077    0.5000000000   -0.4736842105    0.0005060729
  743   -0.3076923077    0.5000000000   -0.4210526316    0.0005060729
  744   -0.3076923077    0.5000000000   -0.3684210526    0.0005060729
  745   -0.3076923077    0.5000000000   -0.3157894737    0.0005060729
  746   -0.3076923077    0.5000000000   -0.2631578947    0.0005060729
  747   -0.3076923077    0.5000000000   -0.2105263158    0.0005060729
  748   -0.3076923077    0.5000000000   -0.1578947368    0.0005060729
  749   -0.3076923077    0.5000000000   -0.1052631579    0.0005060729
  750   -0.3076923077    0.5000000000   -0.0526315789    0.0005060729
  751   -0.3076923077    0.5000000000    0.0000000000    0.0005060729
  752   -0.3076923077    0.5000000000    0.0526315789    0.0005060729
  753   -0.3076923077    0.5000000000    0.1052631579    0.0005060729
  754   -0.3076923077    0.5000000000    0.1578947368    0.0005060729
  755   -0.3076923077    0.5000000000    0.2105263158    0.0005060729
  756   -0.3076923077    0.5000000000    0.2631578947    0.0005060729
  757   -0.3076923077    0.5000000000    0.3157894737    0.0005060729
  758   -0.3076923077    0.5000000000    0.3684210526    0.0005060729
  759   -0.3076923077    0.5000000000    0.4210526316    0.0005060729
  760   -0.3076923077    0.5000000000    0.4736842105    0.0005060729
  761   -0.2692307692   -0.3750000000   -0.4736842105    0.0005060729
  762   -0.2692307692   -0.3750000000   -0.4210526316    0.0005060729
  763   -0.2692307692   -0.3750000000   -0.3684210526    0.0005060729
  764   -0.2692307692   -0.3750000000   -0.3157894737    0.0005060729
  765   -0.2692307692   -0.3750000000   -0.2631578947    0.0005060729
  766   -0.2692307692   -0.3750000000   -0.2105263158    0.0005060729
  767   -0.2692307692   -0.3750000000   -0.1578947368    0.0005060729
  768   -0.2692307692   -0.3750000000   -0.1052631579    0.0005060729
  769   -0.2692307692   -0.3750000000   -0.0526315789    0.0005060729
  770   -0.2692307692   -0.3750000000    0.0000000000    0.0005060729
  771   -0.2692307692   -0.3750000000    0.0526315789    0.0005060729
  772   -0.2692307692   -0.3750000000    0.1052631579    0.0005060729
  773   -0.2692307692   -0.3750000000    0.1578947368    0.0005060729
  774   -0.2692307692   -0.3750000000    0.2105263158    0.0005060729
  775   -0.2692307692   -0.3750000000    0.2631578947    0.0005060729
  776   -0.2692307692   -0.3750000000    0.3157894737    0.0005060729
  777   -0.2692307692   -0.3750000000    0.3684210526    0.0005060729
  778   -0.2692307692   -0.3750000000    0.4210526316    0.0005060729
  779   -0.2692307692   -0.3750000000    0.4736842105    0.0005060729
  780   -0.2692307692   -0.2500000000   -0.4736842105    0.0005060729
  781   -0.2692307692   -0.2500000000   -0.4210526316    0.0005060729
  782   -0.2692307692   -0.2500000000   -0.3684210526    0.0005060729
  783   -0.2692307692   -0.2500000000   -0.3157894737    0.0005060729
  784   -0.2692307692   -0.2500000000   -0.2631578947    0.0005060729
  785   -0.2692307692   -0.2500000000   -0.2105263158    0.0005060729
  786   -0.2692307692   -0.2500000000   -0.1578947368    0.0005060729
  787   -0.2692307692   -0.2500000000   -0.1052631579    0.0005060729
  788   -0.2692307692   -0.2500000000   -0.0526315789    0.0005060729
  789   -0.2692307692   -0.2500000000    0.0000000000    0.0005060729
  790   -0.2692307692   -0.2500000000    0.0526315789    0.0005060729
  791   -0.2692307692   -0.2500000000    0.1052631579    0.0005060729
  792   -0.2692307692   -0.2500000000    0.1578947368    0.0005060729
  793   -0.2692307692   -0.2500000000    0.2105263158    0.0005060729
  794   -0.2692307692   -0.2500000000    0.2631578947    0.0005060729
  795   -0.2692307692   -0.2500000000    0.3157894737    0.0005060729
  796   -0.2692307692   -0.2500000000    0.3684210526    0.0005060729
  797   -0.2692307692   -0.2500000000    0.4210526316    0.0005060729
  798   -0.2692307692   -0.2500000000    0.4736842105    0.0005060729
  799   -0.2692307692   -0.1250000000   -0.4736842105    0.0005060729
  800   -0.2692307692   -0.1250000000   -0.4210526316    0.0005060729
  801   -0.2692307692   -0.1250000000   -0.3684210526    0.0005060729
  802   -0.2692307692   -0.1250000000   -0.3157894737    0.0005060729
  803   -0.2692307692   -0.1250000000   -0.2631578947    0.0005060729
  804   -0.2692307692   -0.1250000000   -0.2105263158    0.0005060729
  805   -0.2692307692   -0.1250000000   -0.1578947368    0.0005060729
  806   -0.2692307692   -0.1250000000   -0.1052631579    0.0005060729
  807   -0.2692307692   -0.1250000000   -0.0526315789    0.0005060729
  808   -0.2692307692   -0.1250000000    0.0000000000    0.0005060729
  809   -0.2692307692   -0.1250000000    0.0526315789    0.0005060729
  810   -0.2692307692   -0.1250000000    0.1052631579    0.0005060729
  811   -0.2692307692   -0.1250000000    0.1578947368    0.0005060729
  812   -0.2692307692   -0.1250000000    0.2105263158    0.0005060729
  813   -0.2692307692   -0.1250000000    0.2631578947    0.0005060729
  814   -0.2692307692   -0.1250000000    0.3157894737    0.0005060729
  815   -0.2692307692   -0.1250000000    0.3684210526    0.0005060729
  816   -0.2692307692   -0.1250000000    0.4210526316    0.0005060729
  817   -0.2692307692   -0.1250000000    0.4736842105    0.0005060729
  818   -0.2692307692    0.0000000000   -0.4736842105    0.0005060729
  819   -0.2692307692    0.0000000000   -0.4210526316    0.0005060729
  820   -0.2692307692    0.0000000000   -0.3684210526    0.0005060729
  821   -0.2692307692    0.0000000000   -0.3157894737    0.0005060729
  822   -0.2692307692    0.0000000000   -0.2631578947    0.0005060729
  823   -0.2692307692    0.0000000000   -0.2105263158    0.0005060729
  824   -0.2692307692    0.0000000000   -0.1578947368    0.0005060729
  825   -0.2692307692    0.0000000000   -0.1052631579    0.0005060729
  826   -0.2692307692    0.0000000000   -0.0526315789    0.0005060729
  827   -0.2692307692    0.0000000000    0.0000000000    0.0005060729
  828   -0.2692307692    0.0000000000    0.0526315789    0.0005060729
  829   -0.2692307692    0.0000000000    0.1052631579    0.0005060729
  830   -0.2692307692    0.0000000000    0.1578947368    0.0005060729
  831   -0.2692307692    0.0000000000    0.2105263158    0.0005060729
  832   -0.2692307692    0.0000000000    0.2631578947    0.0005060729
  833   -0.2692307692    0.0000000000    0.3157894737    0.0005060729
  834   -0.2692307692    0.0000000000    0.3684210526    0.0005060729
  835   -0.2692307692    0.0000000000    0.4210526316    0.0005060729
  836   -0.2692307692    0.0000000000    0.4736842105    0.0005060729
  837   -0.2692307692    0.1250000000   -0.4736842105    0.0005060729
  838   -0.2692307692    0.1250000000   -0.4210526316    0.0005060729
  839   -0.2692307692    0.1250000000   -0.3684210526    0.0005060729
  840   -0.2692307692    0.1250000000   -0.3157894737    0.0005060729
  841   -0.2692307692    0.1250000000   -0.2631578947    0.0005060729
  842   -0.2692307692    0.1250000000   -0.2105263158    0.0005060729
  843   -0.2692307692    0.1250000000   -0.1578947368    0.0005060729
  844   -0.2692307692    0.1250000000   -0.1052631579    0.0005060729
  845   -0.2692307692    0.1250000000   -0.0526315789    0.0005060729
  846   -0.2692307692    0.1250000000    0.0000000000    0.0005060729
  847   -0.2692307692    0.1250000000    0.0526315789    0.0005060729
  848   -0.2692307692    0.1250000000    0.1052631579    0.0005060729
  849   -0.2692307692    0.1250000000    0.1578947368    0.0005060729
  850   -0.2692307692    0.1250000000    0.2105263158    0.0005060729
  851   -0.2692307692    0.1250000000    0.2631578947    0.0005060729
  852   -0.2692307692    0.1250000000    0.3157894737    0.0005060729
  853   -0.2692307692    0.1250000000    0.3684210526    0.0005060729
  854   -0.2692307692    0.1250000000    0.4210526316    0.0005060729
  855   -0.2692307692    0.1250000000    0.4736842105    0.0005060729
  856   -0.2692307692    0.2500000000   -0.4736842105    0.0005060729
  857   -0.2692307692    0.2500000000   -0.4210526316    0.0005060729
  858   -0.2692307692    0.2500000000   -0.3684210526    0.0005060729
  859   -0.2692307692    0.2500000000   -0.3157894737    0.0005060729
  860   -0.2692307692    0.2500000000   -0.2631578947    0.0005060729
  861   -0.2692307692    0.2500000000   -0.2105263158    0.0005060729
  862   -0.2692307692    0.2500000000   -0.1578947368    0.0005060729
  863   -0.2692307692    0.2500000000   -0.1052631579    0.0005060729
  864   -0.2692307692    0.2500000000   -0.0526315789    0.0005060729
  865   -0.2692307692    0.2500000000    0.0000000000    0.0005060729
  866   -0.2692307692    0.2500000000    0.0526315789    0.0005060729
  867   -0.2692307692    0.2500000000    0.1052631579    0.0005060729
  868   -0.2692307692    0.2500000000    0.1578947368    0.0005060729
  869   -0.2692307692    0.2500000000    0.2105263158    0.0005060729
  870   -0.2692307692    0.2500000000    0.2631578947    0.0005060729
  871   -0.2692307692    0.2500000000    0.3157894737    0.0005060729
  872   -0.2692307692    0.2500000000    0.3684210526    0.0005060729
  873   -0.2692307692    0.2500000000    0.4210526316    0.0005060729
  874   -0.2692307692    0.2500000000    0.4736842105    0.0005060729
  875   -0.2692307692    0.3750000000   -0.4736842105    0.0005060729
  876   -0.2692307692    0.3750000000   -0.4210526316    0.0005060729
  877   -0.2692307692    0.3750000000   -0.3684210526    0.0005060729
  878   -0.2692307692    0.3750000000   -0.3157894737    0.0005060729
  879   -0.2692307692    0.3750000000   -0.2631578947    0.0005060729
  880   -0.2692307692    0.3750000000   -0.2105263158    0.0005060729
  881   -0.2692307692    0.3750000000   -0.1578947368    0.0005060729
  882   -0.2692307692    0.3750000000   -0.1052631579    0.0005060729
  883   -0.2692307692    0.3750000000   -0.0526315789    0.0005060729
  884   -0.2692307692    0.3750000000    0.0000000000    0.0005060729
  885   -0.2692307692    0.3750000000    0.0526315789    0.0005060729
  886   -0.2692307692    0.3750000000    0.1052631579    0.0005060729
  887   -0.2692307692    0.3750000000    0.1578947368    0.0005060729
  888   -0.2692307692    0.3750000000    0.2105263158    0.0005060729
  889   -0.2692307692    0.3750000000    0.2631578947    0.0005060729
  890   -0.2692307692    0.3750000000    0.3157894737    0.0005060729
  891   -0.2692307692    0.3750000000    0.3684210526    0.0005060729
  892   -0.2692307692    0.3750000000    0.4210526316    0.0005060729
  893   -0.2692307692    0.3750000000    0.4736842105    0.0005060729
  894   -0.2692307692    0.5000000000   -0.4736842105    0.0005060729
  895   -0.2692307692    0.5000000000   -0.4210526316    0.0005060729
  896   -0.2692307692    0.5000000000   -0.3684210526    0.0005060729
  897   -0.2692307692    0.5000000000   -0.3157894737    0.0005060729
  898   -0.2692307692    0.5000000000   -0.2631578947    0.0005060729
  899   -0.2692307692    0.5000000000   -0.2105263158    0.0005060729
  900   -0.2692307692    0.5000000000   -0.1578947368    0.0005060729
  901   -0.2692307692    0.5000000000   -0.1052631579    0.0005060729
  902   -0.2692307692    0.5000000000   -0.0526315789    0.0005060729
  903   -0.2692307692    0.5000000000    0.0000000000    0.0005060729
  904   -0.2692307692    0.5000000000    0.0526315789    0.0005060729
  905   -0.2692307692    0.5000000000    0.1052631579    0.0005060729
  906   -0.2692307692    0.5000000000    0.1578947368    0.0005060729
  907   -0.2692307692    0.5000000000    0.2105263158    0.0005060729
  908   -0.2692307692    0.5000000000    0.2631578947    0.0005060729
  909   -0.2692307692    0.5000000000    0.3157894737    0.0005060729
  910   -0.2692307692    0.5000000000    0.3684210526    0.0005060729
  911   -0.2692307692    0.5000000000    0.4210526316    0.0005060729
  912   -0.2692307692    0.5000000000    0.4736842105    0.0005060729
  913   -0.2307692308   -0.3750000000   -0.4736842105    0.0005060729
  914   -0.2307692308   -0.3750000000   -0.4210526316    0.0005060729
  915   -0.2307692308   -0.3750000000   -0.3684210526    0.0005060729
  916   -0.2307692308   -0.3750000000   -0.3157894737    0.0005060729
  917   -0.2307692308   -0.3750000000   -0.2631578947    0.0005060729
  918   -0.2307692308   -0.3750000000   -0.2105263158    0.0005060729
  919   -0.2307692308   -0.3750000000   -0.1578947368    0.0005060729
  920   -0.2307692308   -0.3750000000   -0.1052631579    0.0005060729
  921   -0.2307692308   -0.3750000000   -0.0526315789    0.0005060729
  922   -0.2307692308   -0.3750000000    0.0000000000    0.0005060729
  923   -0.2307692308   -0.3750000000    0.0526315789    0.0005060729
  924   -0.2307692308   -0.3750000000    0.1052631579    0.0005060729
  925   -0.2307692308   -0.3750000000    0.1578947368    0.0005060729
  926   -0.2307692308   -0.3750000000    0.2105263158    0.0005060729
  927   -0.2307692308   -0.3750000000    0.2631578947    0.0005060729
  928   -0.2307692308   -0.3750000000    0.3157894737    0.0005060729
  929   -0.2307692308   -0.3750000000    0.3684210526    0.0005060729
  930   -0.2307692308   -0.3750000000    0.4210526316    0.0005060729
  931   -0.2307692308   -0.3750000000    0.4736842105    0.0005060729
  932   -0.2307692308   -0.2500000000   -0.4736842105    0.0005060729
  933   -0.2307692308   -0.2500000000   -0.4210526316    0.0005060729
  934   -0.2307692308   -0.2500000000   -0.3684210526    0.0005060729
  935   -0.2307692308   -0.2500000000   -0.3157894737    0.0005060729
  936   -0.2307692308   -0.2500000000   -0.2631578947    0.0005060729
  937   -0.2307692308   -0.2500000000   -0.2105263158    0.0005060729
  938   -0.2307692308   -0.2500000000   -0.1578947368    0.0005060729
  939   -0.2307692308   -0.2500000000   -0.1052631579    0.0005060729
  940   -0.2307692308   -0.2500000000   -0.0526315789    0.0005060729
  941   -0.2307692308   -0.2500000000    0.0000000000    0.0005060729
  942   -0.2307692308   -0.2500000000    0.0526315789    0.0005060729
  943   -0.2307692308   -0.2500000000    0.1052631579    0.0005060729
  944   -0.2307692308   -0.2500000000    0.1578947368    0.0005060729
  945   -0.2307692308   -0.2500000000    0.2105263158    0.0005060729
  946   -0.2307692308   -0.2500000000    0.2631578947    0.0005060729
  947   -0.2307692308   -0.2500000000    0.3157894737    0.0005060729
  948   -0.2307692308   -0.2500000000    0.3684210526    0.0005060729
  949   -0.2307692308   -0.2500000000    0.4210526316    0.0005060729
  950   -0.2307692308   -0.2500000000    0.4736842105    0.0005060729
  951   -0.2307692308   -0.1250000000   -0.4736842105    0.0005060729
  952   -0.2307692308   -0.1250000000   -0.4210526316    0.0005060729
  953   -0.2307692308   -0.1250000000   -0.3684210526    0.0005060729
  954   -0.2307692308   -0.1250000000   -0.3157894737    0.0005060729
  955   -0.2307692308   -0.1250000000   -0.2631578947    0.0005060729
  956   -0.2307692308   -0.1250000000   -0.2105263158    0.0005060729
  957   -0.2307692308   -0.1250000000   -0.1578947368    0.0005060729
  958   -0.2307692308   -0.1250000000   -0.1052631579    0.0005060729
  959   -0.2307692308   -0.1250000000   -0.0526315789    0.0005060729
  960   -0.2307692308   -0.1250000000    0.0000000000    0.0005060729
  961   -0.2307692308   -0.1250000000    0.0526315789    0.0005060729
  962   -0.2307692308   -0.1250000000    0.1052631579    0.0005060729
  963   -0.2307692308   -0.1250000000    0.1578947368    0.0005060729
  964   -0.2307692308   -0.1250000000    0.2105263158    0.0005060729
  965   -0.2307692308   -0.1250000000    0.2631578947    0.0005060729
  966   -0.2307692308   -0.1250000000    0.3157894737    0.0005060729
  967   -0.2307692308   -0.1250000000    0.3684210526    0.0005060729
  968   -0.2307692308   -0.1250000000    0.4210526316    0.0005060729
  969   -0.2307692308   -0.1250000000    0.4736842105    0.0005060729
  970   -0.2307692308    0.0000000000   -0.4736842105    0.0005060729
  971   -0.2307692308    0.0000000000   -0.4210526316    0.0005060729
  972   -0.2307692308    0.0000000000   -0.3684210526    0.0005060729
  973   -0.2307692308    0.0000000000   -0.3157894737    0.0005060729
  974   -0.2307692308    0.0000000000   -0.2631578947    0.0005060729
  975   -0.2307692308    0.0000000000   -0.2105263158    0.0005060729
  976   -0.2307692308    0.0000000000   -0.1578947368    0.0005060729
  977   -0.2307692308    0.0000000000   -0.1052631579    0.0005060729
  978   -0.2307692308    0.0000000000   -0.0526315789    0.0005060729
  979   -0.2307692308    0.0000000000    0.0000000000    0.0005060729
  980   -0.2307692308    0.0000000000    0.0526315789    0.0005060729
  981   -0.2307692308    0.0000000000    0.1052631579    0.0005060729
  982   -0.2307692308    0.0000000000    0.1578947368    0.0005060729
  983   -0.2307692308    0.0000000000    0.2105263158    0.0005060729
  984   -0.2307692308    0.0000000000    0.2631578947    0.0005060729
  985   -0.2307692308    0.0000000000    0.3157894737    0.0005060729
  986   -0.2307692308    0.0000000000    0.3684210526    0.0005060729
  987   -0.2307692308    0.0000000000    0.4210526316    0.0005060729
  988   -0.2307692308    0.0000000000    0.4736842105    0.0005060729
  989   -0.2307692308    0.1250000000   -0.4736842105    0.0005060729
  990   -0.2307692308    0.1250000000   -0.4210526316    0.0005060729
  991   -0.2307692308    0.1250000000   -0.3684210526    0.0005060729
  992   -0.2307692308    0.1250000000   -0.3157894737    0.0005060729
  993   -0.2307692308    0.1250000000   -0.2631578947    0.0005060729
  994   -0.2307692308    0.1250000000   -0.2105263158    0.0005060729
  995   -0.2307692308    0.1250000000   -0.1578947368    0.0005060729
  996   -0.2307692308    0.1250000000   -0.1052631579    0.0005060729
  997   -0.2307692308    0.1250000000   -0.0526315789    0.0005060729
  998   -0.2307692308    0.1250000000    0.0000000000    0.0005060729
  999   -0.2307692308    0.1250000000    0.0526315789    0.0005060729
 1000   -0.2307692308    0.1250000000    0.1052631579    0.0005060729
 1001   -0.2307692308    0.1250000000    0.1578947368    0.0005060729
 1002   -0.2307692308    0.1250000000    0.2105263158    0.0005060729
 1003   -0.2307692308    0.1250000000    0.2631578947    0.0005060729
 1004   -0.2307692308    0.1250000000    0.3157894737    0.0005060729
 1005   -0.2307692308    0.1250000000    0.3684210526    0.0005060729
 1006   -0.2307692308    0.1250000000    0.4210526316    0.0005060729
 1007   -0.2307692308    0.1250000000    0.4736842105    0.0005060729
 1008   -0.2307692308    0.2500000000   -0.4736842105    0.0005060729
 1009   -0.2307692308    0.2500000000   -0.4210526316    0.0005060729
 1010   -0.2307692308    0.2500000000   -0.3684210526    0.0005060729
 1011   -0.2307692308    0.2500000000   -0.3157894737    0.0005060729
 1012   -0.2307692308    0.2500000000   -0.2631578947    0.0005060729
 1013   -0.2307692308    0.2500000000   -0.2105263158    0.0005060729
 1014   -0.2307692308    0.2500000000   -0.1578947368    0.0005060729
 1015   -0.2307692308    0.2500000000   -0.1052631579    0.0005060729
 1016   -0.2307692308    0.2500000000   -0.0526315789    0.0005060729
 1017   -0.2307692308    0.2500000000    0.0000000000    0.0005060729
 1018   -0.2307692308    0.2500000000    0.0526315789    0.0005060729
 1019   -0.2307692308    0.2500000000    0.1052631579    0.0005060729
 1020   -0.2307692308    0.2500000000    0.1578947368    0.0005060729
 1021   -0.2307692308    0.2500000000    0.2105263158    0.0005060729
 1022   -0.2307692308    0.2500000000    0.2631578947    0.0005060729
 1023   -0.2307692308    0.2500000000    0.3157894737    0.0005060729
 1024   -0.2307692308    0.2500000000    0.3684210526    0.0005060729
 1025   -0.2307692308    0.2500000000    0.4210526316    0.0005060729
 1026   -0.2307692308    0.2500000000    0.4736842105    0.0005060729
 1027   -0.2307692308    0.3750000000   -0.4736842105    0.0005060729
 1028   -0.2307692308    0.3750000000   -0.4210526316    0.0005060729
 1029   -0.2307692308    0.3750000000   -0.3684210526    0.0005060729
 1030   -0.2307692308    0.3750000000   -0.3157894737    0.0005060729
 1031   -0.2307692308    0.3750000000   -0.2631578947    0.0005060729
 1032   -0.2307692308    0.3750000000   -0.2105263158    0.0005060729
 1033   -0.2307692308    0.3750000000   -0.1578947368    0.0005060729
 1034   -0.2307692308    0.3750000000   -0.1052631579    0.0005060729
 1035   -0.2307692308    0.3750000000   -0.0526315789    0.0005060729
 1036   -0.2307692308    0.3750000000    0.0000000000    0.0005060729
 1037   -0.2307692308    0.3750000000    0.0526315789    0.0005060729
 1038   -0.2307692308    0.3750000000    0.1052631579    0.0005060729
 1039   -0.2307692308    0.3750000000    0.1578947368    0.0005060729
 1040   -0.2307692308    0.3750000000    0.2105263158    0.0005060729
 1041   -0.2307692308    0.3750000000    0.2631578947    0.0005060729
 1042   -0.2307692308    0.3750000000    0.3157894737    0.0005060729
 1043   -0.2307692308    0.3750000000    0.3684210526    0.0005060729
 1044   -0.2307692308    0.3750000000    0.4210526316    0.0005060729
 1045   -0.2307692308    0.3750000000    0.4736842105    0.0005060729
 1046   -0.2307692308    0.5000000000   -0.4736842105    0.0005060729
 1047   -0.2307692308    0.5000000000   -0.4210526316    0.0005060729
 1048   -0.2307692308    0.5000000000   -0.3684210526    0.0005060729
 1049   -0.2307692308    0.5000000000   -0.3157894737    0.0005060729
 1050   -0.2307692308    0.5000000000   -0.2631578947    0.0005060729
 1051   -0.2307692308    0.5000000000   -0.2105263158    0.0005060729
 1052   -0.2307692308    0.5000000000   -0.1578947368    0.0005060729
 1053   -0.2307692308    0.5000000000   -0.1052631579    0.0005060729
 1054   -0.2307692308    0.5000000000   -0.0526315789    0.0005060729
 1055   -0.2307692308    0.5000000000    0.0000000000    0.0005060729
 1056   -0.2307692308    0.5000000000    0.0526315789    0.0005060729
 1057   -0.2307692308    0.5000000000    0.1052631579    0.0005060729
 1058   -0.2307692308    0.5000000000    0.1578947368    0.0005060729
 1059   -0.2307692308    0.5000000000    0.2105263158    0.0005060729
 1060   -0.2307692308    0.5000000000    0.2631578947    0.0005060729
 1061   -0.2307692308    0.5000000000    0.3157894737    0.0005060729
 1062   -0.2307692308    0.5000000000    0.3684210526    0.0005060729
 1063   -0.2307692308    0.5000000000    0.4210526316    0.0005060729
 1064   -0.2307692308    0.5000000000    0.4736842105    0.0005060729
 1065   -0.1923076923   -0.3750000000   -0.4736842105    0.0005060729
 1066   -0.1923076923   -0.3750000000   -0.4210526316    0.0005060729
 1067   -0.1923076923   -0.3750000000   -0.3684210526    0.0005060729
 1068   -0.1923076923   -0.3750000000   -0.3157894737    0.0005060729
 1069   -0.1923076923   -0.3750000000   -0.2631578947    0.0005060729
 1070   -0.1923076923   -0.3750000000   -0.2105263158    0.0005060729
 1071   -0.1923076923   -0.3750000000   -0.1578947368    0.0005060729
 1072   -0.1923076923   -0.3750000000   -0.1052631579    0.0005060729
 1073   -0.1923076923   -0.3750000000   -0.0526315789    0.0005060729
 1074   -0.1923076923   -0.3750000000    0.0000000000    0.0005060729
 1075   -0.1923076923   -0.3750000000    0.0526315789    0.0005060729
 1076   -0.1923076923   -0.3750000000    0.1052631579    0.0005060729
 1077   -0.1923076923   -0.3750000000    0.1578947368    0.0005060729
 1078   -0.1923076923   -0.3750000000    0.2105263158    0.0005060729
 1079   -0.1923076923   -0.3750000000    0.2631578947    0.0005060729
 1080   -0.1923076923   -0.3750000000    0.3157894737    0.0005060729
 1081   -0.1923076923   -0.3750000000    0.3684210526    0.0005060729
 1082   -0.1923076923   -0.3750000000    0.4210526316    0.0005060729
 1083   -0.1923076923   -0.3750000000    0.4736842105    0.0005060729
 1084   -0.1923076923   -0.2500000000   -0.4736842105    0.0005060729
 1085   -0.1923076923   -0.2500000000   -0.4210526316    0.0005060729
 1086   -0.1923076923   -0.2500000000   -0.3684210526    0.0005060729
 1087   -0.1923076923   -0.2500000000   -0.3157894737    0.0005060729
 1088   -0.1923076923   -0.2500000000   -0.2631578947    0.0005060729
 1089   -0.1923076923   -0.2500000000   -0.2105263158    0.0005060729
 1090   -0.1923076923   -0.2500000000   -0.1578947368    0.0005060729
 1091   -0.1923076923   -0.2500000000   -0.1052631579    0.0005060729
 1092   -0.1923076923   -0.2500000000   -0.0526315789    0.0005060729
 1093   -0.1923076923   -0.2500000000    0.0000000000    0.0005060729
 1094   -0.1923076923   -0.2500000000    0.0526315789    0.0005060729
 1095   -0.1923076923   -0.2500000000    0.1052631579    0.0005060729
 1096   -0.1923076923   -0.2500000000    0.1578947368    0.0005060729
 1097   -0.1923076923   -0.2500000000    0.2105263158    0.0005060729
 1098   -0.1923076923   -0.2500000000    0.2631578947    0.0005060729
 1099   -0.1923076923   -0.2500000000    0.3157894737    0.0005060729
 1100   -0.1923076923   -0.2500000000    0.3684210526    0.0005060729
 1101   -0.1923076923   -0.2500000000    0.4210526316    0.0005060729
 1102   -0.1923076923   -0.2500000000    0.4736842105    0.0005060729
 1103   -0.1923076923   -0.1250000000   -0.4736842105    0.0005060729
 1104   -0.1923076923   -0.1250000000   -0.4210526316    0.0005060729
 1105   -0.1923076923   -0.1250000000   -0.3684210526    0.0005060729
 1106   -0.1923076923   -0.1250000000   -0.3157894737    0.0005060729
 1107   -0.1923076923   -0.1250000000   -0.2631578947    0.0005060729
 1108   -0.1923076923   -0.1250000000   -0.2105263158    0.0005060729
 1109   -0.1923076923   -0.1250000000   -0.1578947368    0.0005060729
 1110   -0.1923076923   -0.1250000000   -0.1052631579    0.0005060729
 1111   -0.1923076923   -0.1250000000   -0.0526315789    0.0005060729
 1112   -0.1923076923   -0.1250000000    0.0000000000    0.0005060729
 1113   -0.1923076923   -0.1250000000    0.0526315789    0.0005060729
 1114   -0.1923076923   -0.1250000000    0.1052631579    0.0005060729
 1115   -0.1923076923   -0.1250000000    0.1578947368    0.0005060729
 1116   -0.1923076923   -0.1250000000    0.2105263158    0.0005060729
 1117   -0.1923076923   -0.1250000000    0.2631578947    0.0005060729
 1118   -0.1923076923   -0.1250000000    0.3157894737    0.0005060729
 1119   -0.1923076923   -0.1250000000    0.3684210526    0.0005060729
 1120   -0.1923076923   -0.1250000000    0.4210526316    0.0005060729
 1121   -0.1923076923   -0.1250000000    0.4736842105    0.0005060729
 1122   -0.1923076923    0.0000000000   -0.4736842105    0.0005060729
 1123   -0.1923076923    0.0000000000   -0.4210526316    0.0005060729
 1124   -0.1923076923    0.0000000000   -0.3684210526    0.0005060729
 1125   -0.1923076923    0.0000000000   -0.3157894737    0.0005060729
 1126   -0.1923076923    0.0000000000   -0.2631578947    0.0005060729
 1127   -0.1923076923    0.0000000000   -0.2105263158    0.0005060729
 1128   -0.1923076923    0.0000000000   -0.1578947368    0.0005060729
 1129   -0.1923076923    0.0000000000   -0.1052631579    0.0005060729
 1130   -0.1923076923    0.0000000000   -0.0526315789    0.0005060729
 1131   -0.1923076923    0.0000000000    0.0000000000    0.0005060729
 1132   -0.1923076923    0.0000000000    0.0526315789    0.0005060729
 1133   -0.1923076923    0.0000000000    0.1052631579    0.0005060729
 1134   -0.1923076923    0.0000000000    0.1578947368    0.0005060729
 1135   -0.1923076923    0.0000000000    0.2105263158    0.0005060729
 1136   -0.1923076923    0.0000000000    0.2631578947    0.0005060729
 1137   -0.1923076923    0.0000000000    0.3157894737    0.0005060729
 1138   -0.1923076923    0.0000000000    0.3684210526    0.0005060729
 1139   -0.1923076923    0.0000000000    0.4210526316    0.0005060729
 1140   -0.1923076923    0.0000000000    0.4736842105    0.0005060729
 1141   -0.1923076923    0.1250000000   -0.4736842105    0.0005060729
 1142   -0.1923076923    0.1250000000   -0.4210526316    0.0005060729
 1143   -0.1923076923    0.1250000000   -0.3684210526    0.0005060729
 1144   -0.1923076923    0.1250000000   -0.3157894737    0.0005060729
 1145   -0.1923076923    0.1250000000   -0.2631578947    0.0005060729
 1146   -0.1923076923    0.1250000000   -0.2105263158    0.0005060729
 1147   -0.1923076923    0.1250000000   -0.1578947368    0.0005060729
 1148   -0.1923076923    0.1250000000   -0.1052631579    0.0005060729
 1149   -0.1923076923    0.1250000000   -0.0526315789    0.0005060729
 1150   -0.1923076923    0.1250000000    0.0000000000    0.0005060729
 1151   -0.1923076923    0.1250000000    0.0526315789    0.0005060729
 1152   -0.1923076923    0.1250000000    0.1052631579    0.0005060729
 1153   -0.1923076923    0.1250000000    0.1578947368    0.0005060729
 1154   -0.1923076923    0.1250000000    0.2105263158    0.0005060729
 1155   -0.1923076923    0.1250000000    0.2631578947    0.0005060729
 1156   -0.1923076923    0.1250000000    0.3157894737    0.0005060729
 1157   -0.1923076923    0.1250000000    0.3684210526    0.0005060729
 1158   -0.1923076923    0.1250000000    0.4210526316    0.0005060729
 1159   -0.1923076923    0.1250000000    0.4736842105    0.0005060729
 1160   -0.1923076923    0.2500000000   -0.4736842105    0.0005060729
 1161   -0.1923076923    0.2500000000   -0.4210526316    0.0005060729
 1162   -0.1923076923    0.2500000000   -0.3684210526    0.0005060729
 1163   -0.1923076923    0.2500000000   -0.3157894737    0.0005060729
 1164   -0.1923076923    0.2500000000   -0.2631578947    0.0005060729
 1165   -0.1923076923    0.2500000000   -0.2105263158    0.0005060729
 1166   -0.1923076923    0.2500000000   -0.1578947368    0.0005060729
 1167   -0.1923076923    0.2500000000   -0.1052631579    0.0005060729
 1168   -0.1923076923    0.2500000000   -0.0526315789    0.0005060729
 1169   -0.1923076923    0.2500000000    0.0000000000    0.0005060729
 1170   -0.1923076923    0.2500000000    0.0526315789    0.0005060729
 1171   -0.1923076923    0.2500000000    0.1052631579    0.0005060729
 1172   -0.1923076923    0.2500000000    0.1578947368    0.0005060729
 1173   -0.1923076923    0.2500000000    0.2105263158    0.0005060729
 1174   -0.1923076923    0.2500000000    0.2631578947    0.0005060729
 1175   -0.1923076923    0.2500000000    0.3157894737    0.0005060729
 1176   -0.1923076923    0.2500000000    0.3684210526    0.0005060729
 1177   -0.1923076923    0.2500000000    0.4210526316    0.0005060729
 1178   -0.1923076923    0.2500000000    0.4736842105    0.0005060729
 1179   -0.1923076923    0.3750000000   -0.4736842105    0.0005060729
 1180   -0.1923076923    0.3750000000   -0.4210526316    0.0005060729
 1181   -0.1923076923    0.3750000000   -0.3684210526    0.0005060729
 1182   -0.1923076923    0.3750000000   -0.3157894737    0.0005060729
 1183   -0.1923076923    0.3750000000   -0.2631578947    0.0005060729
 1184   -0.1923076923    0.3750000000   -0.2105263158    0.0005060729
 1185   -0.1923076923    0.3750000000   -0.1578947368    0.0005060729
 1186   -0.1923076923    0.3750000000   -0.1052631579    0.0005060729
 1187   -0.1923076923    0.3750000000   -0.0526315789    0.0005060729
 1188   -0.1923076923    0.3750000000    0.0000000000    0.0005060729
 1189   -0.1923076923    0.3750000000    0.0526315789    0.0005060729
 1190   -0.1923076923    0.3750000000    0.1052631579    0.0005060729
 1191   -0.1923076923    0.3750000000    0.1578947368    0.0005060729
 1192   -0.1923076923    0.3750000000    0.2105263158    0.0005060729
 1193   -0.1923076923    0.3750000000    0.2631578947    0.0005060729
 1194   -0.1923076923    0.3750000000    0.3157894737    0.0005060729
 1195   -0.1923076923    0.3750000000    0.3684210526    0.0005060729
 1196   -0.1923076923    0.3750000000    0.4210526316    0.0005060729
 1197   -0.1923076923    0.3750000000    0.4736842105    0.0005060729
 1198   -0.1923076923    0.5000000000   -0.4736842105    0.0005060729
 1199   -0.1923076923    0.5000000000   -0.4210526316    0.0005060729
 1200   -0.1923076923    0.5000000000   -0.3684210526    0.0005060729
 1201   -0.1923076923    0.5000000000   -0.3157894737    0.0005060729
 1202   -0.1923076923    0.5000000000   -0.2631578947    0.0005060729
 1203   -0.1923076923    0.5000000000   -0.2105263158    0.0005060729
 1204   -0.1923076923    0.5000000000   -0.1578947368    0.0005060729
 1205   -0.1923076923    0.5000000000   -0.1052631579    0.0005060729
 1206   -0.1923076923    0.5000000000   -0.0526315789    0.0005060729
 1207   -0.1923076923    0.5000000000    0.0000000000    0.0005060729
 1208   -0.1923076923    0.5000000000    0.0526315789    0.0005060729
 1209   -0.1923076923    0.5000000000    0.1052631579    0.0005060729
 1210   -0.1923076923    0.5000000000    0.1578947368    0.0005060729
 1211   -0.1923076923    0.5000000000    0.2105263158    0.0005060729
 1212   -0.1923076923    0.5000000000    0.2631578947    0.0005060729
 1213   -0.1923076923    0.5000000000    0.3157894737    0.0005060729
 1214   -0.1923076923    0.5000000000    0.3684210526    0.0005060729
 1215   -0.1923076923    0.5000000000    0.4210526316    0.0005060729
 1216   -0.1923076923    0.5000000000    0.4736842105    0.0005060729
 1217   -0.1538461538   -0.3750000000   -0.4736842105    0.0005060729
 1218   -0.1538461538   -0.3750000000   -0.4210526316    0.0005060729
 1219   -0.1538461538   -0.3750000000   -0.3684210526    0.0005060729
 1220   -0.1538461538   -0.3750000000   -0.3157894737    0.0005060729
 1221   -0.1538461538   -0.3750000000   -0.2631578947    0.0005060729
 1222   -0.1538461538   -0.3750000000   -0.2105263158    0.0005060729
 1223   -0.1538461538   -0.3750000000   -0.1578947368    0.0005060729
 1224   -0.1538461538   -0.3750000000   -0.1052631579    0.0005060729
 1225   -0.1538461538   -0.3750000000   -0.0526315789    0.0005060729
 1226   -0.1538461538   -0.3750000000    0.0000000000    0.0005060729
 1227   -0.1538461538   -0.3750000000    0.0526315789    0.0005060729
 1228   -0.1538461538   -0.3750000000    0.1052631579    0.0005060729
 1229   -0.1538461538   -0.3750000000    0.1578947368    0.0005060729
 1230   -0.1538461538   -0.3750000000    0.2105263158    0.0005060729
 1231   -0.1538461538   -0.3750000000    0.2631578947    0.0005060729
 1232   -0.1538461538   -0.3750000000    0.3157894737    0.0005060729
 1233   -0.1538461538   -0.3750000000    0.3684210526    0.0005060729
 1234   -0.1538461538   -0.3750000000    0.4210526316    0.0005060729
 1235   -0.1538461538   -0.3750000000    0.4736842105    0.0005060729
 1236   -0.1538461538   -0.2500000000   -0.4736842105    0.0005060729
 1237   -0.1538461538   -0.2500000000   -0.4210526316    0.0005060729
 1238   -0.1538461538   -0.2500000000   -0.3684210526    0.0005060729
 1239   -0.1538461538   -0.2500000000   -0.3157894737    0.0005060729
 1240   -0.1538461538   -0.2500000000   -0.2631578947    0.0005060729
 1241   -0.1538461538   -0.2500000000   -0.2105263158    0.0005060729
 1242   -0.1538461538   -0.2500000000   -0.1578947368    0.0005060729
 1243   -0.1538461538   -0.2500000000   -0.1052631579    0.0005060729
 1244   -0.1538461538   -0.2500000000   -0.0526315789    0.0005060729
 1245   -0.1538461538   -0.2500000000    0.0000000000    0.0005060729
 1246   -0.1538461538   -0.2500000000    0.0526315789    0.0005060729
 1247   -0.1538461538   -0.2500000000    0.1052631579    0.0005060729
 1248   -0.1538461538   -0.2500000000    0.1578947368    0.0005060729
 1249   -0.1538461538   -0.2500000000    0.2105263158    0.0005060729
 1250   -0.1538461538   -0.2500000000    0.2631578947    0.0005060729
 1251   -0.1538461538   -0.2500000000    0.3157894737    0.0005060729
 1252   -0.1538461538   -0.2500000000    0.3684210526    0.0005060729
 1253   -0.1538461538   -0.2500000000    0.4210526316    0.0005060729
 1254   -0.1538461538   -0.2500000000    0.4736842105    0.0005060729
 1255   -0.1538461538   -0.1250000000   -0.4736842105    0.0005060729
 1256   -0.1538461538   -0.1250000000   -0.4210526316    0.0005060729
 1257   -0.1538461538   -0.1250000000   -0.3684210526    0.0005060729
 1258   -0.1538461538   -0.1250000000   -0.3157894737    0.0005060729
 1259   -0.1538461538   -0.1250000000   -0.2631578947    0.0005060729
 1260   -0.1538461538   -0.1250000000   -0.2105263158    0.0005060729
 1261   -0.1538461538   -0.1250000000   -0.1578947368    0.0005060729
 1262   -0.1538461538   -0.1250000000   -0.1052631579    0.0005060729
 1263   -0.1538461538   -0.1250000000   -0.0526315789    0.0005060729
 1264   -0.1538461538   -0.1250000000    0.0000000000    0.0005060729
 1265   -0.1538461538   -0.1250000000    0.0526315789    0.0005060729
 1266   -0.1538461538   -0.1250000000    0.1052631579    0.0005060729
 1267   -0.1538461538   -0.1250000000    0.1578947368    0.0005060729
 1268   -0.1538461538   -0.1250000000    0.2105263158    0.0005060729
 1269   -0.1538461538   -0.1250000000    0.2631578947    0.0005060729
 1270   -0.1538461538   -0.1250000000    0.3157894737    0.0005060729
 1271   -0.1538461538   -0.1250000000    0.3684210526    0.0005060729
 1272   -0.1538461538   -0.1250000000    0.4210526316    0.0005060729
 1273   -0.1538461538   -0.1250000000    0.4736842105    0.0005060729
 1274   -0.1538461538    0.0000000000   -0.4736842105    0.0005060729
 1275   -0.1538461538    0.0000000000   -0.4210526316    0.0005060729
 1276   -0.1538461538    0.0000000000   -0.3684210526    0.0005060729
 1277   -0.1538461538    0.0000000000   -0.3157894737    0.0005060729
 1278   -0.1538461538    0.0000000000   -0.2631578947    0.0005060729
 1279   -0.1538461538    0.0000000000   -0.2105263158    0.0005060729
 1280   -0.1538461538    0.0000000000   -0.1578947368    0.0005060729
 1281   -0.1538461538    0.0000000000   -0.1052631579    0.0005060729
 1282   -0.1538461538    0.0000000000   -0.0526315789    0.0005060729
 1283   -0.1538461538    0.0000000000    0.0000000000    0.0005060729
 1284   -0.1538461538    0.0000000000    0.0526315789    0.0005060729
 1285   -0.1538461538    0.0000000000    0.1052631579    0.0005060729
 1286   -0.1538461538    0.0000000000    0.1578947368    0.0005060729
 1287   -0.1538461538    0.0000000000    0.2105263158    0.0005060729
 1288   -0.1538461538    0.0000000000    0.2631578947    0.0005060729
 1289   -0.1538461538    0.0000000000    0.3157894737    0.0005060729
 1290   -0.1538461538    0.0000000000    0.3684210526    0.0005060729
 1291   -0.1538461538    0.0000000000    0.4210526316    0.0005060729
 1292   -0.1538461538    0.0000000000    0.4736842105    0.0005060729
 1293   -0.1538461538    0.1250000000   -0.4736842105    0.0005060729
 1294   -0.1538461538    0.1250000000   -0.4210526316    0.0005060729
 1295   -0.1538461538    0.1250000000   -0.3684210526    0.0005060729
 1296   -0.1538461538    0.1250000000   -0.3157894737    0.0005060729
 1297   -0.1538461538    0.1250000000   -0.2631578947    0.0005060729
 1298   -0.1538461538    0.1250000000   -0.2105263158    0.0005060729
 1299   -0.1538461538    0.1250000000   -0.1578947368    0.0005060729
 1300   -0.1538461538    0.1250000000   -0.1052631579    0.0005060729
 1301   -0.1538461538    0.1250000000   -0.0526315789    0.0005060729
 1302   -0.1538461538    0.1250000000    0.0000000000    0.0005060729
 1303   -0.1538461538    0.1250000000    0.0526315789    0.0005060729
 1304   -0.1538461538    0.1250000000    0.1052631579    0.0005060729
 1305   -0.1538461538    0.1250000000    0.1578947368    0.0005060729
 1306   -0.1538461538    0.1250000000    0.2105263158    0.0005060729
 1307   -0.1538461538    0.1250000000    0.2631578947    0.0005060729
 1308   -0.1538461538    0.1250000000    0.3157894737    0.0005060729
 1309   -0.1538461538    0.1250000000    0.3684210526    0.0005060729
 1310   -0.1538461538    0.1250000000    0.4210526316    0.0005060729
 1311   -0.1538461538    0.1250000000    0.4736842105    0.0005060729
 1312   -0.1538461538    0.2500000000   -0.4736842105    0.0005060729
 1313   -0.1538461538    0.2500000000   -0.4210526316    0.0005060729
 1314   -0.1538461538    0.2500000000   -0.3684210526    0.0005060729
 1315   -0.1538461538    0.2500000000   -0.3157894737    0.0005060729
 1316   -0.1538461538    0.2500000000   -0.2631578947    0.0005060729
 1317   -0.1538461538    0.2500000000   -0.2105263158    0.0005060729
 1318   -0.1538461538    0.2500000000   -0.1578947368    0.0005060729
 1319   -0.1538461538    0.2500000000   -0.1052631579    0.0005060729
 1320   -0.1538461538    0.2500000000   -0.0526315789    0.0005060729
 1321   -0.1538461538    0.2500000000    0.0000000000    0.0005060729
 1322   -0.1538461538    0.2500000000    0.0526315789    0.0005060729
 1323   -0.1538461538    0.2500000000    0.1052631579    0.0005060729
 1324   -0.1538461538    0.2500000000    0.1578947368    0.0005060729
 1325   -0.1538461538    0.2500000000    0.2105263158    0.0005060729
 1326   -0.1538461538    0.2500000000    0.2631578947    0.0005060729
 1327   -0.1538461538    0.2500000000    0.3157894737    0.0005060729
 1328   -0.1538461538    0.2500000000    0.3684210526    0.0005060729
 1329   -0.1538461538    0.2500000000    0.4210526316    0.0005060729
 1330   -0.1538461538    0.2500000000    0.4736842105    0.0005060729
 1331   -0.1538461538    0.3750000000   -0.4736842105    0.0005060729
 1332   -0.1538461538    0.3750000000   -0.4210526316    0.0005060729
 1333   -0.1538461538    0.3750000000   -0.3684210526    0.0005060729
 1334   -0.1538461538    0.3750000000   -0.3157894737    0.0005060729
 1335   -0.1538461538    0.3750000000   -0.2631578947    0.0005060729
 1336   -0.1538461538    0.3750000000   -0.2105263158    0.0005060729
 1337   -0.1538461538    0.3750000000   -0.1578947368    0.0005060729
 1338   -0.1538461538    0.3750000000   -0.1052631579    0.0005060729
 1339   -0.1538461538    0.3750000000   -0.0526315789    0.0005060729
 1340   -0.1538461538    0.3750000000    0.0000000000    0.0005060729
 1341   -0.1538461538    0.3750000000    0.0526315789    0.0005060729
 1342   -0.1538461538    0.3750000000    0.1052631579    0.0005060729
 1343   -0.1538461538    0.3750000000    0.1578947368    0.0005060729
 1344   -0.1538461538    0.3750000000    0.2105263158    0.0005060729
 1345   -0.1538461538    0.3750000000    0.2631578947    0.0005060729
 1346   -0.1538461538    0.3750000000    0.3157894737    0.0005060729
 1347   -0.1538461538    0.3750000000    0.3684210526    0.0005060729
 1348   -0.1538461538    0.3750000000    0.4210526316    0.0005060729
 1349   -0.1538461538    0.3750000000    0.4736842105    0.0005060729
 1350   -0.1538461538    0.5000000000   -0.4736842105    0.0005060729
 1351   -0.1538461538    0.5000000000   -0.4210526316    0.0005060729
 1352   -0.1538461538    0.5000000000   -0.3684210526    0.0005060729
 1353   -0.1538461538    0.5000000000   -0.3157894737    0.0005060729
 1354   -0.1538461538    0.5000000000   -0.2631578947    0.0005060729
 1355   -0.1538461538    0.5000000000   -0.2105263158    0.0005060729
 1356   -0.1538461538    0.5000000000   -0.1578947368    0.0005060729
 1357   -0.1538461538    0.5000000000   -0.1052631579    0.0005060729
 1358   -0.1538461538    0.5000000000   -0.0526315789    0.0005060729
 1359   -0.1538461538    0.5000000000    0.0000000000    0.0005060729
 1360   -0.1538461538    0.5000000000    0.0526315789    0.0005060729
 1361   -0.1538461538    0.5000000000    0.1052631579    0.0005060729
 1362   -0.1538461538    0.5000000000    0.1578947368    0.0005060729
 1363   -0.1538461538    0.5000000000    0.2105263158    0.0005060729
 1364   -0.1538461538    0.5000000000    0.2631578947    0.0005060729
 1365   -0.1538461538    0.5000000000    0.3157894737    0.0005060729
 1366   -0.1538461538    0.5000000000    0.3684210526    0.0005060729
 1367   -0.1538461538    0.5000000000    0.4210526316    0.0005060729
 1368   -0.1538461538    0.5000000000    0.4736842105    0.0005060729
 1369   -0.1153846154   -0.3750000000   -0.4736842105    0.0005060729
 1370   -0.1153846154   -0.3750000000   -0.4210526316    0.0005060729
 1371   -0.1153846154   -0.3750000000   -0.3684210526    0.0005060729
 1372   -0.1153846154   -0.3750000000   -0.3157894737    0.0005060729
 1373   -0.1153846154   -0.3750000000   -0.2631578947    0.0005060729
 1374   -0.1153846154   -0.3750000000   -0.2105263158    0.0005060729
 1375   -0.1153846154   -0.3750000000   -0.1578947368    0.0005060729
 1376   -0.1153846154   -0.3750000000   -0.1052631579    0.0005060729
 1377   -0.1153846154   -0.3750000000   -0.0526315789    0.0005060729
 1378   -0.1153846154   -0.3750000000    0.0000000000    0.0005060729
 1379   -0.1153846154   -0.3750000000    0.0526315789    0.0005060729
 1380   -0.1153846154   -0.3750000000    0.1052631579    0.0005060729
 1381   -0.1153846154   -0.3750000000    0.1578947368    0.0005060729
 1382   -0.1153846154   -0.3750000000    0.2105263158    0.0005060729
 1383   -0.1153846154   -0.3750000000    0.2631578947    0.0005060729
 1384   -0.1153846154   -0.3750000000    0.3157894737    0.0005060729
 1385   -0.1153846154   -0.3750000000    0.3684210526    0.0005060729
 1386   -0.1153846154   -0.3750000000    0.4210526316    0.0005060729
 1387   -0.1153846154   -0.3750000000    0.4736842105    0.0005060729
 1388   -0.1153846154   -0.2500000000   -0.4736842105    0.0005060729
 1389   -0.1153846154   -0.2500000000   -0.4210526316    0.0005060729
 1390   -0.1153846154   -0.2500000000   -0.3684210526    0.0005060729
 1391   -0.1153846154   -0.2500000000   -0.3157894737    0.0005060729
 1392   -0.1153846154   -0.2500000000   -0.2631578947    0.0005060729
 1393   -0.1153846154   -0.2500000000   -0.2105263158    0.0005060729
 1394   -0.1153846154   -0.2500000000   -0.1578947368    0.0005060729
 1395   -0.1153846154   -0.2500000000   -0.1052631579    0.0005060729
 1396   -0.1153846154   -0.2500000000   -0.0526315789    0.0005060729
 1397   -0.1153846154   -0.2500000000    0.0000000000    0.0005060729
 1398   -0.1153846154   -0.2500000000    0.0526315789    0.0005060729
 1399   -0.1153846154   -0.2500000000    0.1052631579    0.0005060729
 1400   -0.1153846154   -0.2500000000    0.1578947368    0.0005060729
 1401   -0.1153846154   -0.2500000000    0.2105263158    0.0005060729
 1402   -0.1153846154   -0.2500000000    0.2631578947    0.0005060729
 1403   -0.1153846154   -0.2500000000    0.3157894737    0.0005060729
 1404   -0.1153846154   -0.2500000000    0.3684210526    0.0005060729
 1405   -0.1153846154   -0.2500000000    0.4210526316    0.0005060729
 1406   -0.1153846154   -0.2500000000    0.4736842105    0.0005060729
 1407   -0.1153846154   -0.1250000000   -0.4736842105    0.0005060729
 1408   -0.1153846154   -0.1250000000   -0.4210526316    0.0005060729
 1409   -0.1153846154   -0.1250000000   -0.3684210526    0.0005060729
 1410   -0.1153846154   -0.1250000000   -0.3157894737    0.0005060729
 1411   -0.1153846154   -0.1250000000   -0.2631578947    0.0005060729
 1412   -0.1153846154   -0.1250000000   -0.2105263158    0.0005060729
 1413   -0.1153846154   -0.1250000000   -0.1578947368    0.0005060729
 1414   -0.1153846154   -0.1250000000   -0.1052631579    0.0005060729
 1415   -0.1153846154   -0.1250000000   -0.0526315789    0.0005060729
 1416   -0.1153846154   -0.1250000000    0.0000000000    0.0005060729
 1417   -0.1153846154   -0.1250000000    0.0526315789    0.0005060729
 1418   -0.1153846154   -0.1250000000    0.1052631579    0.0005060729
 1419   -0.1153846154   -0.1250000000    0.1578947368    0.0005060729
 1420   -0.1153846154   -0.1250000000    0.2105263158    0.0005060729
 1421   -0.1153846154   -0.1250000000    0.2631578947    0.0005060729
 1422   -0.1153846154   -0.1250000000    0.3157894737    0.0005060729
 1423   -0.1153846154   -0.1250000000    0.3684210526    0.0005060729
 1424   -0.1153846154   -0.1250000000    0.4210526316    0.0005060729
 1425   -0.1153846154   -0.1250000000    0.4736842105    0.0005060729
 1426   -0.1153846154    0.0000000000   -0.4736842105    0.0005060729
 1427   -0.1153846154    0.0000000000   -0.4210526316    0.0005060729
 1428   -0.1153846154    0.0000000000   -0.3684210526    0.0005060729
 1429   -0.1153846154    0.0000000000   -0.3157894737    0.0005060729
 1430   -0.1153846154    0.0000000000   -0.2631578947    0.0005060729
 1431   -0.1153846154    0.0000000000   -0.2105263158    0.0005060729
 1432   -0.1153846154    0.0000000000   -0.1578947368    0.0005060729
 1433   -0.1153846154    0.0000000000   -0.1052631579    0.0005060729
 1434   -0.1153846154    0.0000000000   -0.0526315789    0.0005060729
 1435   -0.1153846154    0.0000000000    0.0000000000    0.0005060729
 1436   -0.1153846154    0.0000000000    0.0526315789    0.0005060729
 1437   -0.1153846154    0.0000000000    0.1052631579    0.0005060729
 1438   -0.1153846154    0.0000000000    0.1578947368    0.0005060729
 1439   -0.1153846154    0.0000000000    0.2105263158    0.0005060729
 1440   -0.1153846154    0.0000000000    0.2631578947    0.0005060729
 1441   -0.1153846154    0.0000000000    0.3157894737    0.0005060729
 1442   -0.1153846154    0.0000000000    0.3684210526    0.0005060729
 1443   -0.1153846154    0.0000000000    0.4210526316    0.0005060729
 1444   -0.1153846154    0.0000000000    0.4736842105    0.0005060729
 1445   -0.1153846154    0.1250000000   -0.4736842105    0.0005060729
 1446   -0.1153846154    0.1250000000   -0.4210526316    0.0005060729
 1447   -0.1153846154    0.1250000000   -0.3684210526    0.0005060729
 1448   -0.1153846154    0.1250000000   -0.3157894737    0.0005060729
 1449   -0.1153846154    0.1250000000   -0.2631578947    0.0005060729
 1450   -0.1153846154    0.1250000000   -0.2105263158    0.0005060729
 1451   -0.1153846154    0.1250000000   -0.1578947368    0.0005060729
 1452   -0.1153846154    0.1250000000   -0.1052631579    0.0005060729
 1453   -0.1153846154    0.1250000000   -0.0526315789    0.0005060729
 1454   -0.1153846154    0.1250000000    0.0000000000    0.0005060729
 1455   -0.1153846154    0.1250000000    0.0526315789    0.0005060729
 1456   -0.1153846154    0.1250000000    0.1052631579    0.0005060729
 1457   -0.1153846154    0.1250000000    0.1578947368    0.0005060729
 1458   -0.1153846154    0.1250000000    0.2105263158    0.0005060729
 1459   -0.1153846154    0.1250000000    0.2631578947    0.0005060729
 1460   -0.1153846154    0.1250000000    0.3157894737    0.0005060729
 1461   -0.1153846154    0.1250000000    0.3684210526    0.0005060729
 1462   -0.1153846154    0.1250000000    0.4210526316    0.0005060729
 1463   -0.1153846154    0.1250000000    0.4736842105    0.0005060729
 1464   -0.1153846154    0.2500000000   -0.4736842105    0.0005060729
 1465   -0.1153846154    0.2500000000   -0.4210526316    0.0005060729
 1466   -0.1153846154    0.2500000000   -0.3684210526    0.0005060729
 1467   -0.1153846154    0.2500000000   -0.3157894737    0.0005060729
 1468   -0.1153846154    0.2500000000   -0.2631578947    0.0005060729
 1469   -0.1153846154    0.2500000000   -0.2105263158    0.0005060729
 1470   -0.1153846154    0.2500000000   -0.1578947368    0.0005060729
 1471   -0.1153846154    0.2500000000   -0.1052631579    0.0005060729
 1472   -0.1153846154    0.2500000000   -0.0526315789    0.0005060729
 1473   -0.1153846154    0.2500000000    0.0000000000    0.0005060729
 1474   -0.1153846154    0.2500000000    0.0526315789    0.0005060729
 1475   -0.1153846154    0.2500000000    0.1052631579    0.0005060729
 1476   -0.1153846154    0.2500000000    0.1578947368    0.0005060729
 1477   -0.1153846154    0.2500000000    0.2105263158    0.0005060729
 1478   -0.1153846154    0.2500000000    0.2631578947    0.0005060729
 1479   -0.1153846154    0.2500000000    0.3157894737    0.0005060729
 1480   -0.1153846154    0.2500000000    0.3684210526    0.0005060729
 1481   -0.1153846154    0.2500000000    0.4210526316    0.0005060729
 1482   -0.1153846154    0.2500000000    0.4736842105    0.0005060729
 1483   -0.1153846154    0.3750000000   -0.4736842105    0.0005060729
 1484   -0.1153846154    0.3750000000   -0.4210526316    0.0005060729
 1485   -0.1153846154    0.3750000000   -0.3684210526    0.0005060729
 1486   -0.1153846154    0.3750000000   -0.3157894737    0.0005060729
 1487   -0.1153846154    0.3750000000   -0.2631578947    0.0005060729
 1488   -0.1153846154    0.3750000000   -0.2105263158    0.0005060729
 1489   -0.1153846154    0.3750000000   -0.1578947368    0.0005060729
 1490   -0.1153846154    0.3750000000   -0.1052631579    0.0005060729
 1491   -0.1153846154    0.3750000000   -0.0526315789    0.0005060729
 1492   -0.1153846154    0.3750000000    0.0000000000    0.0005060729
 1493   -0.1153846154    0.3750000000    0.0526315789    0.0005060729
 1494   -0.1153846154    0.3750000000    0.1052631579    0.0005060729
 1495   -0.1153846154    0.3750000000    0.1578947368    0.0005060729
 1496   -0.1153846154    0.3750000000    0.2105263158    0.0005060729
 1497   -0.1153846154    0.3750000000    0.2631578947    0.0005060729
 1498   -0.1153846154    0.3750000000    0.3157894737    0.0005060729
 1499   -0.1153846154    0.3750000000    0.3684210526    0.0005060729
 1500   -0.1153846154    0.3750000000    0.4210526316    0.0005060729
 1501   -0.1153846154    0.3750000000    0.4736842105    0.0005060729
 1502   -0.1153846154    0.5000000000   -0.4736842105    0.0005060729
 1503   -0.1153846154    0.5000000000   -0.4210526316    0.0005060729
 1504   -0.1153846154    0.5000000000   -0.3684210526    0.0005060729
 1505   -0.1153846154    0.5000000000   -0.3157894737    0.0005060729
 1506   -0.1153846154    0.5000000000   -0.2631578947    0.0005060729
 1507   -0.1153846154    0.5000000000   -0.2105263158    0.0005060729
 1508   -0.1153846154    0.5000000000   -0.1578947368    0.0005060729
 1509   -0.1153846154    0.5000000000   -0.1052631579    0.0005060729
 1510   -0.1153846154    0.5000000000   -0.0526315789    0.0005060729
 1511   -0.1153846154    0.5000000000    0.0000000000    0.0005060729
 1512   -0.1153846154    0.5000000000    0.0526315789    0.0005060729
 1513   -0.1153846154    0.5000000000    0.1052631579    0.0005060729
 1514   -0.1153846154    0.5000000000    0.1578947368    0.0005060729
 1515   -0.1153846154    0.5000000000    0.2105263158    0.0005060729
 1516   -0.1153846154    0.5000000000    0.2631578947    0.0005060729
 1517   -0.1153846154    0.5000000000    0.3157894737    0.0005060729
 1518   -0.1153846154    0.5000000000    0.3684210526    0.0005060729
 1519   -0.1153846154    0.5000000000    0.4210526316    0.0005060729
 1520   -0.1153846154    0.5000000000    0.4736842105    0.0005060729
 1521   -0.0769230769   -0.3750000000   -0.4736842105    0.0005060729
 1522   -0.0769230769   -0.3750000000   -0.4210526316    0.0005060729
 1523   -0.0769230769   -0.3750000000   -0.3684210526    0.0005060729
 1524   -0.0769230769   -0.3750000000   -0.3157894737    0.0005060729
 1525   -0.0769230769   -0.3750000000   -0.2631578947    0.0005060729
 1526   -0.0769230769   -0.3750000000   -0.2105263158    0.0005060729
 1527   -0.0769230769   -0.3750000000   -0.1578947368    0.0005060729
 1528   -0.0769230769   -0.3750000000   -0.1052631579    0.0005060729
 1529   -0.0769230769   -0.3750000000   -0.0526315789    0.0005060729
 1530   -0.0769230769   -0.3750000000    0.0000000000    0.0005060729
 1531   -0.0769230769   -0.3750000000    0.0526315789    0.0005060729
 1532   -0.0769230769   -0.3750000000    0.1052631579    0.0005060729
 1533   -0.0769230769   -0.3750000000    0.1578947368    0.0005060729
 1534   -0.0769230769   -0.3750000000    0.2105263158    0.0005060729
 1535   -0.0769230769   -0.3750000000    0.2631578947    0.0005060729
 1536   -0.0769230769   -0.3750000000    0.3157894737    0.0005060729
 1537   -0.0769230769   -0.3750000000    0.3684210526    0.0005060729
 1538   -0.0769230769   -0.3750000000    0.4210526316    0.0005060729
 1539   -0.0769230769   -0.3750000000    0.4736842105    0.0005060729
 1540   -0.0769230769   -0.2500000000   -0.4736842105    0.0005060729
 1541   -0.0769230769   -0.2500000000   -0.4210526316    0.0005060729
 1542   -0.0769230769   -0.2500000000   -0.3684210526    0.0005060729
 1543   -0.0769230769   -0.2500000000   -0.3157894737    0.0005060729
 1544   -0.0769230769   -0.2500000000   -0.2631578947    0.0005060729
 1545   -0.0769230769   -0.2500000000   -0.2105263158    0.0005060729
 1546   -0.0769230769   -0.2500000000   -0.1578947368    0.0005060729
 1547   -0.0769230769   -0.2500000000   -0.1052631579    0.0005060729
 1548   -0.0769230769   -0.2500000000   -0.0526315789    0.0005060729
 1549   -0.0769230769   -0.2500000000    0.0000000000    0.0005060729
 1550   -0.0769230769   -0.2500000000    0.0526315789    0.0005060729
 1551   -0.0769230769   -0.2500000000    0.1052631579    0.0005060729
 1552   -0.0769230769   -0.2500000000    0.1578947368    0.0005060729
 1553   -0.0769230769   -0.2500000000    0.2105263158    0.0005060729
 1554   -0.0769230769   -0.2500000000    0.2631578947    0.0005060729
 1555   -0.0769230769   -0.2500000000    0.3157894737    0.0005060729
 1556   -0.0769230769   -0.2500000000    0.3684210526    0.0005060729
 1557   -0.0769230769   -0.2500000000    0.4210526316    0.0005060729
 1558   -0.0769230769   -0.2500000000    0.4736842105    0.0005060729
 1559   -0.0769230769   -0.1250000000   -0.4736842105    0.0005060729
 1560   -0.0769230769   -0.1250000000   -0.4210526316    0.0005060729
 1561   -0.0769230769   -0.1250000000   -0.3684210526    0.0005060729
 1562   -0.0769230769   -0.1250000000   -0.3157894737    0.0005060729
 1563   -0.0769230769   -0.1250000000   -0.2631578947    0.0005060729
 1564   -0.0769230769   -0.1250000000   -0.2105263158    0.0005060729
 1565   -0.0769230769   -0.1250000000   -0.1578947368    0.0005060729
 1566   -0.0769230769   -0.1250000000   -0.1052631579    0.0005060729
 1567   -0.0769230769   -0.1250000000   -0.0526315789    0.0005060729
 1568   -0.0769230769   -0.1250000000    0.0000000000    0.0005060729
 1569   -0.0769230769   -0.1250000000    0.0526315789    0.0005060729
 1570   -0.0769230769   -0.1250000000    0.1052631579    0.0005060729
 1571   -0.0769230769   -0.1250000000    0.1578947368    0.0005060729
 1572   -0.0769230769   -0.1250000000    0.2105263158    0.0005060729
 1573   -0.0769230769   -0.1250000000    0.2631578947    0.0005060729
 1574   -0.0769230769   -0.1250000000    0.3157894737    0.0005060729
 1575   -0.0769230769   -0.1250000000    0.3684210526    0.0005060729
 1576   -0.0769230769   -0.1250000000    0.4210526316    0.0005060729
 1577   -0.0769230769   -0.1250000000    0.4736842105    0.0005060729
 1578   -0.0769230769    0.0000000000   -0.4736842105    0.0005060729
 1579   -0.0769230769    0.0000000000   -0.4210526316    0.0005060729
 1580   -0.0769230769    0.0000000000   -0.3684210526    0.0005060729
 1581   -0.0769230769    0.0000000000   -0.3157894737    0.0005060729
 1582   -0.0769230769    0.0000000000   -0.2631578947    0.0005060729
 1583   -0.0769230769    0.0000000000   -0.2105263158    0.0005060729
 1584   -0.0769230769    0.0000000000   -0.1578947368    0.0005060729
 1585   -0.0769230769    0.0000000000   -0.1052631579    0.0005060729
 1586   -0.0769230769    0.0000000000   -0.0526315789    0.0005060729
 1587   -0.0769230769    0.0000000000    0.0000000000    0.0005060729
 1588   -0.0769230769    0.0000000000    0.0526315789    0.0005060729
 1589   -0.0769230769    0.0000000000    0.1052631579    0.0005060729
 1590   -0.0769230769    0.0000000000    0.1578947368    0.0005060729
 1591   -0.0769230769    0.0000000000    0.2105263158    0.0005060729
 1592   -0.0769230769    0.0000000000    0.2631578947    0.0005060729
 1593   -0.0769230769    0.0000000000    0.3157894737    0.0005060729
 1594   -0.0769230769    0.0000000000    0.3684210526    0.0005060729
 1595   -0.0769230769    0.0000000000    0.4210526316    0.0005060729
 1596   -0.0769230769    0.0000000000    0.4736842105    0.0005060729
 1597   -0.0769230769    0.1250000000   -0.4736842105    0.0005060729
 1598   -0.0769230769    0.1250000000   -0.4210526316    0.0005060729
 1599   -0.0769230769    0.1250000000   -0.3684210526    0.0005060729
 1600   -0.0769230769    0.1250000000   -0.3157894737    0.0005060729
 1601   -0.0769230769    0.1250000000   -0.2631578947    0.0005060729
 1602   -0.0769230769    0.1250000000   -0.2105263158    0.0005060729
 1603   -0.0769230769    0.1250000000   -0.1578947368    0.0005060729
 1604   -0.0769230769    0.1250000000   -0.1052631579    0.0005060729
 1605   -0.0769230769    0.1250000000   -0.0526315789    0.0005060729
 1606   -0.0769230769    0.1250000000    0.0000000000    0.0005060729
 1607   -0.0769230769    0.1250000000    0.0526315789    0.0005060729
 1608   -0.0769230769    0.1250000000    0.1052631579    0.0005060729
 1609   -0.0769230769    0.1250000000    0.1578947368    0.0005060729
 1610   -0.0769230769    0.1250000000    0.2105263158    0.0005060729
 1611   -0.0769230769    0.1250000000    0.2631578947    0.0005060729
 1612   -0.0769230769    0.1250000000    0.3157894737    0.0005060729
 1613   -0.0769230769    0.1250000000    0.3684210526    0.0005060729
 1614   -0.0769230769    0.1250000000    0.4210526316    0.0005060729
 1615   -0.0769230769    0.1250000000    0.4736842105    0.0005060729
 1616   -0.0769230769    0.2500000000   -0.4736842105    0.0005060729
 1617   -0.0769230769    0.2500000000   -0.4210526316    0.0005060729
 1618   -0.0769230769    0.2500000000   -0.3684210526    0.0005060729
 1619   -0.0769230769    0.2500000000   -0.3157894737    0.0005060729
 1620   -0.0769230769    0.2500000000   -0.2631578947    0.0005060729
 1621   -0.0769230769    0.2500000000   -0.2105263158    0.0005060729
 1622   -0.0769230769    0.2500000000   -0.1578947368    0.0005060729
 1623   -0.0769230769    0.2500000000   -0.1052631579    0.0005060729
 1624   -0.0769230769    0.2500000000   -0.0526315789    0.0005060729
 1625   -0.0769230769    0.2500000000    0.0000000000    0.0005060729
 1626   -0.0769230769    0.2500000000    0.0526315789    0.0005060729
 1627   -0.0769230769    0.2500000000    0.1052631579    0.0005060729
 1628   -0.0769230769    0.2500000000    0.1578947368    0.0005060729
 1629   -0.0769230769    0.2500000000    0.2105263158    0.0005060729
 1630   -0.0769230769    0.2500000000    0.2631578947    0.0005060729
 1631   -0.0769230769    0.2500000000    0.3157894737    0.0005060729
 1632   -0.0769230769    0.2500000000    0.3684210526    0.0005060729
 1633   -0.0769230769    0.2500000000    0.4210526316    0.0005060729
 1634   -0.0769230769    0.2500000000    0.4736842105    0.0005060729
 1635   -0.0769230769    0.3750000000   -0.4736842105    0.0005060729
 1636   -0.0769230769    0.3750000000   -0.4210526316    0.0005060729
 1637   -0.0769230769    0.3750000000   -0.3684210526    0.0005060729
 1638   -0.0769230769    0.3750000000   -0.3157894737    0.0005060729
 1639   -0.0769230769    0.3750000000   -0.2631578947    0.0005060729
 1640   -0.0769230769    0.3750000000   -0.2105263158    0.0005060729
 1641   -0.0769230769    0.3750000000   -0.1578947368    0.0005060729
 1642   -0.0769230769    0.3750000000   -0.1052631579    0.0005060729
 1643   -0.0769230769    0.3750000000   -0.0526315789    0.0005060729
 1644   -0.0769230769    0.3750000000    0.0000000000    0.0005060729
 1645   -0.0769230769    0.3750000000    0.0526315789    0.0005060729
 1646   -0.0769230769    0.3750000000    0.1052631579    0.0005060729
 1647   -0.0769230769    0.3750000000    0.1578947368    0.0005060729
 1648   -0.0769230769    0.3750000000    0.2105263158    0.0005060729
 1649   -0.0769230769    0.3750000000    0.2631578947    0.0005060729
 1650   -0.0769230769    0.3750000000    0.3157894737    0.0005060729
 1651   -0.0769230769    0.3750000000    0.3684210526    0.0005060729
 1652   -0.0769230769    0.3750000000    0.4210526316    0.0005060729
 1653   -0.0769230769    0.3750000000    0.4736842105    0.0005060729
 1654   -0.0769230769    0.5000000000   -0.4736842105    0.0005060729
 1655   -0.0769230769    0.5000000000   -0.4210526316    0.0005060729
 1656   -0.0769230769    0.5000000000   -0.3684210526    0.0005060729
 1657   -0.0769230769    0.5000000000   -0.3157894737    0.0005060729
 1658   -0.0769230769    0.5000000000   -0.2631578947    0.0005060729
 1659   -0.0769230769    0.5000000000   -0.2105263158    0.0005060729
 1660   -0.0769230769    0.5000000000   -0.1578947368    0.0005060729
 1661   -0.0769230769    0.5000000000   -0.1052631579    0.0005060729
 1662   -0.0769230769    0.5000000000   -0.0526315789    0.0005060729
 1663   -0.0769230769    0.5000000000    0.0000000000    0.0005060729
 1664   -0.0769230769    0.5000000000    0.0526315789    0.0005060729
 1665   -0.0769230769    0.5000000000    0.1052631579    0.0005060729
 1666   -0.0769230769    0.5000000000    0.1578947368    0.0005060729
 1667   -0.0769230769    0.5000000000    0.2105263158    0.0005060729
 1668   -0.0769230769    0.5000000000    0.2631578947    0.0005060729
 1669   -0.0769230769    0.5000000000    0.3157894737    0.0005060729
 1670   -0.0769230769    0.5000000000    0.3684210526    0.0005060729
 1671   -0.0769230769    0.5000000000    0.4210526316    0.0005060729
 1672   -0.0769230769    0.5000000000    0.4736842105    0.0005060729
 1673   -0.0384615385   -0.3750000000   -0.4736842105    0.0005060729
 1674   -0.0384615385   -0.3750000000   -0.4210526316    0.0005060729
 1675   -0.0384615385   -0.3750000000   -0.3684210526    0.0005060729
 1676   -0.0384615385   -0.3750000000   -0.3157894737    0.0005060729
 1677   -0.0384615385   -0.3750000000   -0.2631578947    0.0005060729
 1678   -0.0384615385   -0.3750000000   -0.2105263158    0.0005060729
 1679   -0.0384615385   -0.3750000000   -0.1578947368    0.0005060729
 1680   -0.0384615385   -0.3750000000   -0.1052631579    0.0005060729
 1681   -0.0384615385   -0.3750000000   -0.0526315789    0.0005060729
 1682   -0.0384615385   -0.3750000000    0.0000000000    0.0005060729
 1683   -0.0384615385   -0.3750000000    0.0526315789    0.0005060729
 1684   -0.0384615385   -0.3750000000    0.1052631579    0.0005060729
 1685   -0.0384615385   -0.3750000000    0.1578947368    0.0005060729
 1686   -0.0384615385   -0.3750000000    0.2105263158    0.0005060729
 1687   -0.0384615385   -0.3750000000    0.2631578947    0.0005060729
 1688   -0.0384615385   -0.3750000000    0.3157894737    0.0005060729
 1689   -0.0384615385   -0.3750000000    0.3684210526    0.0005060729
 1690   -0.0384615385   -0.3750000000    0.4210526316    0.0005060729
 1691   -0.0384615385   -0.3750000000    0.4736842105    0.0005060729
 1692   -0.0384615385   -0.2500000000   -0.4736842105    0.0005060729
 1693   -0.0384615385   -0.2500000000   -0.4210526316    0.0005060729
 1694   -0.0384615385   -0.2500000000   -0.3684210526    0.0005060729
 1695   -0.0384615385   -0.2500000000   -0.3157894737    0.0005060729
 1696   -0.0384615385   -0.2500000000   -0.2631578947    0.0005060729
 1697   -0.0384615385   -0.2500000000   -0.2105263158    0.0005060729
 1698   -0.0384615385   -0.2500000000   -0.1578947368    0.0005060729
 1699   -0.0384615385   -0.2500000000   -0.1052631579    0.0005060729
 1700   -0.0384615385   -0.2500000000   -0.0526315789    0.0005060729
 1701   -0.0384615385   -0.2500000000    0.0000000000    0.0005060729
 1702   -0.0384615385   -0.2500000000    0.0526315789    0.0005060729
 1703   -0.0384615385   -0.2500000000    0.1052631579    0.0005060729
 1704   -0.0384615385   -0.2500000000    0.1578947368    0.0005060729
 1705   -0.0384615385   -0.2500000000    0.2105263158    0.0005060729
 1706   -0.0384615385   -0.2500000000    0.2631578947    0.0005060729
 1707   -0.0384615385   -0.2500000000    0.3157894737    0.0005060729
 1708   -0.0384615385   -0.2500000000    0.3684210526    0.0005060729
 1709   -0.0384615385   -0.2500000000    0.4210526316    0.0005060729
 1710   -0.0384615385   -0.2500000000    0.4736842105    0.0005060729
 1711   -0.0384615385   -0.1250000000   -0.4736842105    0.0005060729
 1712   -0.0384615385   -0.1250000000   -0.4210526316    0.0005060729
 1713   -0.0384615385   -0.1250000000   -0.3684210526    0.0005060729
 1714   -0.0384615385   -0.1250000000   -0.3157894737    0.0005060729
 1715   -0.0384615385   -0.1250000000   -0.2631578947    0.0005060729
 1716   -0.0384615385   -0.1250000000   -0.2105263158    0.0005060729
 1717   -0.0384615385   -0.1250000000   -0.1578947368    0.0005060729
 1718   -0.0384615385   -0.1250000000   -0.1052631579    0.0005060729
 1719   -0.0384615385   -0.1250000000   -0.0526315789    0.0005060729
 1720   -0.0384615385   -0.1250000000    0.0000000000    0.0005060729
 1721   -0.0384615385   -0.1250000000    0.0526315789    0.0005060729
 1722   -0.0384615385   -0.1250000000    0.1052631579    0.0005060729
 1723   -0.0384615385   -0.1250000000    0.1578947368    0.0005060729
 1724   -0.0384615385   -0.1250000000    0.2105263158    0.0005060729
 1725   -0.0384615385   -0.1250000000    0.2631578947    0.0005060729
 1726   -0.0384615385   -0.1250000000    0.3157894737    0.0005060729
 1727   -0.0384615385   -0.1250000000    0.3684210526    0.0005060729
 1728   -0.0384615385   -0.1250000000    0.4210526316    0.0005060729
 1729   -0.0384615385   -0.1250000000    0.4736842105    0.0005060729
 1730   -0.0384615385    0.0000000000   -0.4736842105    0.0005060729
 1731   -0.0384615385    0.0000000000   -0.4210526316    0.0005060729
 1732   -0.0384615385    0.0000000000   -0.3684210526    0.0005060729
 1733   -0.0384615385    0.0000000000   -0.3157894737    0.0005060729
 1734   -0.0384615385    0.0000000000   -0.2631578947    0.0005060729
 1735   -0.0384615385    0.0000000000   -0.2105263158    0.0005060729
 1736   -0.0384615385    0.0000000000   -0.1578947368    0.0005060729
 1737   -0.0384615385    0.0000000000   -0.1052631579    0.0005060729
 1738   -0.0384615385    0.0000000000   -0.0526315789    0.0005060729
 1739   -0.0384615385    0.0000000000    0.0000000000    0.0005060729
 1740   -0.0384615385    0.0000000000    0.0526315789    0.0005060729
 1741   -0.0384615385    0.0000000000    0.1052631579    0.0005060729
 1742   -0.0384615385    0.0000000000    0.1578947368    0.0005060729
 1743   -0.0384615385    0.0000000000    0.2105263158    0.0005060729
 1744   -0.0384615385    0.0000000000    0.2631578947    0.0005060729
 1745   -0.0384615385    0.0000000000    0.3157894737    0.0005060729
 1746   -0.0384615385    0.0000000000    0.3684210526    0.0005060729
 1747   -0.0384615385    0.0000000000    0.4210526316    0.0005060729
 1748   -0.0384615385    0.0000000000    0.4736842105    0.0005060729
 1749   -0.0384615385    0.1250000000   -0.4736842105    0.0005060729
 1750   -0.0384615385    0.1250000000   -0.4210526316    0.0005060729
 1751   -0.0384615385    0.1250000000   -0.3684210526    0.0005060729
 1752   -0.0384615385    0.1250000000   -0.3157894737    0.0005060729
 1753   -0.0384615385    0.1250000000   -0.2631578947    0.0005060729
 1754   -0.0384615385    0.1250000000   -0.2105263158    0.0005060729
 1755   -0.0384615385    0.1250000000   -0.1578947368    0.0005060729
 1756   -0.0384615385    0.1250000000   -0.1052631579    0.0005060729
 1757   -0.0384615385    0.1250000000   -0.0526315789    0.0005060729
 1758   -0.0384615385    0.1250000000    0.0000000000    0.0005060729
 1759   -0.0384615385    0.1250000000    0.0526315789    0.0005060729
 1760   -0.0384615385    0.1250000000    0.1052631579    0.0005060729
 1761   -0.0384615385    0.1250000000    0.1578947368    0.0005060729
 1762   -0.0384615385    0.1250000000    0.2105263158    0.0005060729
 1763   -0.0384615385    0.1250000000    0.2631578947    0.0005060729
 1764   -0.0384615385    0.1250000000    0.3157894737    0.0005060729
 1765   -0.0384615385    0.1250000000    0.3684210526    0.0005060729
 1766   -0.0384615385    0.1250000000    0.4210526316    0.0005060729
 1767   -0.0384615385    0.1250000000    0.4736842105    0.0005060729
 1768   -0.0384615385    0.2500000000   -0.4736842105    0.0005060729
 1769   -0.0384615385    0.2500000000   -0.4210526316    0.0005060729
 1770   -0.0384615385    0.2500000000   -0.3684210526    0.0005060729
 1771   -0.0384615385    0.2500000000   -0.3157894737    0.0005060729
 1772   -0.0384615385    0.2500000000   -0.2631578947    0.0005060729
 1773   -0.0384615385    0.2500000000   -0.2105263158    0.0005060729
 1774   -0.0384615385    0.2500000000   -0.1578947368    0.0005060729
 1775   -0.0384615385    0.2500000000   -0.1052631579    0.0005060729
 1776   -0.0384615385    0.2500000000   -0.0526315789    0.0005060729
 1777   -0.0384615385    0.2500000000    0.0000000000    0.0005060729
 1778   -0.0384615385    0.2500000000    0.0526315789    0.0005060729
 1779   -0.0384615385    0.2500000000    0.1052631579    0.0005060729
 1780   -0.0384615385    0.2500000000    0.1578947368    0.0005060729
 1781   -0.0384615385    0.2500000000    0.2105263158    0.0005060729
 1782   -0.0384615385    0.2500000000    0.2631578947    0.0005060729
 1783   -0.0384615385    0.2500000000    0.3157894737    0.0005060729
 1784   -0.0384615385    0.2500000000    0.3684210526    0.0005060729
 1785   -0.0384615385    0.2500000000    0.4210526316    0.0005060729
 1786   -0.0384615385    0.2500000000    0.4736842105    0.0005060729
 1787   -0.0384615385    0.3750000000   -0.4736842105    0.0005060729
 1788   -0.0384615385    0.3750000000   -0.4210526316    0.0005060729
 1789   -0.0384615385    0.3750000000   -0.3684210526    0.0005060729
 1790   -0.0384615385    0.3750000000   -0.3157894737    0.0005060729
 1791   -0.0384615385    0.3750000000   -0.2631578947    0.0005060729
 1792   -0.0384615385    0.3750000000   -0.2105263158    0.0005060729
 1793   -0.0384615385    0.3750000000   -0.1578947368    0.0005060729
 1794   -0.0384615385    0.3750000000   -0.1052631579    0.0005060729
 1795   -0.0384615385    0.3750000000   -0.0526315789    0.0005060729
 1796   -0.0384615385    0.3750000000    0.0000000000    0.0005060729
 1797   -0.0384615385    0.3750000000    0.0526315789    0.0005060729
 1798   -0.0384615385    0.3750000000    0.1052631579    0.0005060729
 1799   -0.0384615385    0.3750000000    0.1578947368    0.0005060729
 1800   -0.0384615385    0.3750000000    0.2105263158    0.0005060729
 1801   -0.0384615385    0.3750000000    0.2631578947    0.0005060729
 1802   -0.0384615385    0.3750000000    0.3157894737    0.0005060729
 1803   -0.0384615385    0.3750000000    0.3684210526    0.0005060729
 1804   -0.0384615385    0.3750000000    0.4210526316    0.0005060729
 1805   -0.0384615385    0.3750000000    0.4736842105    0.0005060729
 1806   -0.0384615385    0.5000000000   -0.4736842105    0.0005060729
 1807   -0.0384615385    0.5000000000   -0.4210526316    0.0005060729
 1808   -0.0384615385    0.5000000000   -0.3684210526    0.0005060729
 1809   -0.0384615385    0.5000000000   -0.3157894737    0.0005060729
 1810   -0.0384615385    0.5000000000   -0.2631578947    0.0005060729
 1811   -0.0384615385    0.5000000000   -0.2105263158    0.0005060729
 1812   -0.0384615385    0.5000000000   -0.1578947368    0.0005060729
 1813   -0.0384615385    0.5000000000   -0.1052631579    0.0005060729
 1814   -0.0384615385    0.5000000000   -0.0526315789    0.0005060729
 1815   -0.0384615385    0.5000000000    0.0000000000    0.0005060729
 1816   -0.0384615385    0.5000000000    0.0526315789    0.0005060729
 1817   -0.0384615385    0.5000000000    0.1052631579    0.0005060729
 1818   -0.0384615385    0.5000000000    0.1578947368    0.0005060729
 1819   -0.0384615385    0.5000000000    0.2105263158    0.0005060729
 1820   -0.0384615385    0.5000000000    0.2631578947    0.0005060729
 1821   -0.0384615385    0.5000000000    0.3157894737    0.0005060729
 1822   -0.0384615385    0.5000000000    0.3684210526    0.0005060729
 1823   -0.0384615385    0.5000000000    0.4210526316    0.0005060729
 1824   -0.0384615385    0.5000000000    0.4736842105    0.0005060729
 1825    0.0000000000   -0.3750000000   -0.4736842105    0.0005060729
 1826    0.0000000000   -0.3750000000   -0.4210526316    0.0005060729
 1827    0.0000000000   -0.3750000000   -0.3684210526    0.0005060729
 1828    0.0000000000   -0.3750000000   -0.3157894737    0.0005060729
 1829    0.0000000000   -0.3750000000   -0.2631578947    0.0005060729
 1830    0.0000000000   -0.3750000000   -0.2105263158    0.0005060729
 1831    0.0000000000   -0.3750000000   -0.1578947368    0.0005060729
 1832    0.0000000000   -0.3750000000   -0.1052631579    0.0005060729
 1833    0.0000000000   -0.3750000000   -0.0526315789    0.0005060729
 1834    0.0000000000   -0.3750000000    0.0000000000    0.0005060729
 1835    0.0000000000   -0.3750000000    0.0526315789    0.0005060729
 1836    0.0000000000   -0.3750000000    0.1052631579    0.0005060729
 1837    0.0000000000   -0.3750000000    0.1578947368    0.0005060729
 1838    0.0000000000   -0.3750000000    0.2105263158    0.0005060729
 1839    0.0000000000   -0.3750000000    0.2631578947    0.0005060729
 1840    0.0000000000   -0.3750000000    0.3157894737    0.0005060729
 1841    0.0000000000   -0.3750000000    0.3684210526    0.0005060729
 1842    0.0000000000   -0.3750000000    0.4210526316    0.0005060729
 1843    0.0000000000   -0.3750000000    0.4736842105    0.0005060729
 1844    0.0000000000   -0.2500000000   -0.4736842105    0.0005060729
 1845    0.0000000000   -0.2500000000   -0.4210526316    0.0005060729
 1846    0.0000000000   -0.2500000000   -0.3684210526    0.0005060729
 1847    0.0000000000   -0.2500000000   -0.3157894737    0.0005060729
 1848    0.0000000000   -0.2500000000   -0.2631578947    0.0005060729
 1849    0.0000000000   -0.2500000000   -0.2105263158    0.0005060729
 1850    0.0000000000   -0.2500000000   -0.1578947368    0.0005060729
 1851    0.0000000000   -0.2500000000   -0.1052631579    0.0005060729
 1852    0.0000000000   -0.2500000000   -0.0526315789    0.0005060729
 1853    0.0000000000   -0.2500000000    0.0000000000    0.0005060729
 1854    0.0000000000   -0.2500000000    0.0526315789    0.0005060729
 1855    0.0000000000   -0.2500000000    0.1052631579    0.0005060729
 1856    0.0000000000   -0.2500000000    0.1578947368    0.0005060729
 1857    0.0000000000   -0.2500000000    0.2105263158    0.0005060729
 1858    0.0000000000   -0.2500000000    0.2631578947    0.0005060729
 1859    0.0000000000   -0.2500000000    0.3157894737    0.0005060729
 1860    0.0000000000   -0.2500000000    0.3684210526    0.0005060729
 1861    0.0000000000   -0.2500000000    0.4210526316    0.0005060729
 1862    0.0000000000   -0.2500000000    0.4736842105    0.0005060729
 1863    0.0000000000   -0.1250000000   -0.4736842105    0.0005060729
 1864    0.0000000000   -0.1250000000   -0.4210526316    0.0005060729
 1865    0.0000000000   -0.1250000000   -0.3684210526    0.0005060729
 1866    0.0000000000   -0.1250000000   -0.3157894737    0.0005060729
 1867    0.0000000000   -0.1250000000   -0.2631578947    0.0005060729
 1868    0.0000000000   -0.1250000000   -0.2105263158    0.0005060729
 1869    0.0000000000   -0.1250000000   -0.1578947368    0.0005060729
 1870    0.0000000000   -0.1250000000   -0.1052631579    0.0005060729
 1871    0.0000000000   -0.1250000000   -0.0526315789    0.0005060729
 1872    0.0000000000   -0.1250000000    0.0000000000    0.0005060729
 1873    0.0000000000   -0.1250000000    0.0526315789    0.0005060729
 1874    0.0000000000   -0.1250000000    0.1052631579    0.0005060729
 1875    0.0000000000   -0.1250000000    0.1578947368    0.0005060729
 1876    0.0000000000   -0.1250000000    0.2105263158    0.0005060729
 1877    0.0000000000   -0.1250000000    0.2631578947    0.0005060729
 1878    0.0000000000   -0.1250000000    0.3157894737    0.0005060729
 1879    0.0000000000   -0.1250000000    0.3684210526    0.0005060729
 1880    0.0000000000   -0.1250000000    0.4210526316    0.0005060729
 1881    0.0000000000   -0.1250000000    0.4736842105    0.0005060729
 1882    0.0000000000    0.0000000000   -0.4736842105    0.0005060729
 1883    0.0000000000    0.0000000000   -0.4210526316    0.0005060729
 1884    0.0000000000    0.0000000000   -0.3684210526    0.0005060729
 1885    0.0000000000    0.0000000000   -0.3157894737    0.0005060729
 1886    0.0000000000    0.0000000000   -0.2631578947    0.0005060729
 1887    0.0000000000    0.0000000000   -0.2105263158    0.0005060729
 1888    0.0000000000    0.0000000000   -0.1578947368    0.0005060729
 1889    0.0000000000    0.0000000000   -0.1052631579    0.0005060729
 1890    0.0000000000    0.0000000000   -0.0526315789    0.0005060729
 1891    0.0000000000    0.0000000000    0.0000000000    0.0002530364
 1892    0.0000000000    0.5000000000   -0.4736842105    0.0005060729
 1893    0.0000000000    0.5000000000   -0.4210526316    0.0005060729
 1894    0.0000000000    0.5000000000   -0.3684210526    0.0005060729
 1895    0.0000000000    0.5000000000   -0.3157894737    0.0005060729
 1896    0.0000000000    0.5000000000   -0.2631578947    0.0005060729
 1897    0.0000000000    0.5000000000   -0.2105263158    0.0005060729
 1898    0.0000000000    0.5000000000   -0.1578947368    0.0005060729
 1899    0.0000000000    0.5000000000   -0.1052631579    0.0005060729
 1900    0.0000000000    0.5000000000   -0.0526315789    0.0005060729
 1901    0.0000000000    0.5000000000    0.0000000000    0.0002530364
 1902    0.5000000000   -0.3750000000   -0.4736842105    0.0005060729
 1903    0.5000000000   -0.3750000000   -0.4210526316    0.0005060729
 1904    0.5000000000   -0.3750000000   -0.3684210526    0.0005060729
 1905    0.5000000000   -0.3750000000   -0.3157894737    0.0005060729
 1906    0.5000000000   -0.3750000000   -0.2631578947    0.0005060729
 1907    0.5000000000   -0.3750000000   -0.2105263158    0.0005060729
 1908    0.5000000000   -0.3750000000   -0.1578947368    0.0005060729
 1909    0.5000000000   -0.3750000000   -0.1052631579    0.0005060729
 1910    0.5000000000   -0.3750000000   -0.0526315789    0.0005060729
 1911    0.5000000000   -0.3750000000    0.0000000000    0.0005060729
 1912    0.5000000000   -0.3750000000    0.0526315789    0.0005060729
 1913    0.5000000000   -0.3750000000    0.1052631579    0.0005060729
 1914    0.5000000000   -0.3750000000    0.1578947368    0.0005060729
 1915    0.5000000000   -0.3750000000    0.2105263158    0.0005060729
 1916    0.5000000000   -0.3750000000    0.2631578947    0.0005060729
 1917    0.5000000000   -0.3750000000    0.3157894737    0.0005060729
 1918    0.5000000000   -0.3750000000    0.3684210526    0.0005060729
 1919    0.5000000000   -0.3750000000    0.4210526316    0.0005060729
 1920    0.5000000000   -0.3750000000    0.4736842105    0.0005060729
 1921    0.5000000000   -0.2500000000   -0.4736842105    0.0005060729
 1922    0.5000000000   -0.2500000000   -0.4210526316    0.0005060729
 1923    0.5000000000   -0.2500000000   -0.3684210526    0.0005060729
 1924    0.5000000000   -0.2500000000   -0.3157894737    0.0005060729
 1925    0.5000000000   -0.2500000000   -0.2631578947    0.0005060729
 1926    0.5000000000   -0.2500000000   -0.2105263158    0.0005060729
 1927    0.5000000000   -0.2500000000   -0.1578947368    0.0005060729
 1928    0.5000000000   -0.2500000000   -0.1052631579    0.0005060729
 1929    0.5000000000   -0.2500000000   -0.0526315789    0.0005060729
 1930    0.5000000000   -0.2500000000    0.0000000000    0.0005060729
 1931    0.5000000000   -0.2500000000    0.0526315789    0.0005060729
 1932    0.5000000000   -0.2500000000    0.1052631579    0.0005060729
 1933    0.5000000000   -0.2500000000    0.1578947368    0.0005060729
 1934    0.5000000000   -0.2500000000    0.2105263158    0.0005060729
 1935    0.5000000000   -0.2500000000    0.2631578947    0.0005060729
 1936    0.5000000000   -0.2500000000    0.3157894737    0.0005060729
 1937    0.5000000000   -0.2500000000    0.3684210526    0.0005060729
 1938    0.5000000000   -0.2500000000    0.4210526316    0.0005060729
 1939    0.5000000000   -0.2500000000    0.4736842105    0.0005060729
 1940    0.5000000000   -0.1250000000   -0.4736842105    0.0005060729
 1941    0.5000000000   -0.1250000000   -0.4210526316    0.0005060729
 1942    0.5000000000   -0.1250000000   -0.3684210526    0.0005060729
 1943    0.5000000000   -0.1250000000   -0.3157894737    0.0005060729
 1944    0.5000000000   -0.1250000000   -0.2631578947    0.0005060729
 1945    0.5000000000   -0.1250000000   -0.2105263158    0.0005060729
 1946    0.5000000000   -0.1250000000   -0.1578947368    0.0005060729
 1947    0.5000000000   -0.1250000000   -0.1052631579    0.0005060729
 1948    0.5000000000   -0.1250000000   -0.0526315789    0.0005060729
 1949    0.5000000000   -0.1250000000    0.0000000000    0.0005060729
 1950    0.5000000000   -0.1250000000    0.0526315789    0.0005060729
 1951    0.5000000000   -0.1250000000    0.1052631579    0.0005060729
 1952    0.5000000000   -0.1250000000    0.1578947368    0.0005060729
 1953    0.5000000000   -0.1250000000    0.2105263158    0.0005060729
 1954    0.5000000000   -0.1250000000    0.2631578947    0.0005060729
 1955    0.5000000000   -0.1250000000    0.3157894737    0.0005060729
 1956    0.5000000000   -0.1250000000    0.3684210526    0.0005060729
 1957    0.5000000000   -0.1250000000    0.4210526316    0.0005060729
 1958    0.5000000000   -0.1250000000    0.4736842105    0.0005060729
 1959    0.5000000000    0.0000000000   -0.4736842105    0.0005060729
 1960    0.5000000000    0.0000000000   -0.4210526316    0.0005060729
 1961    0.5000000000    0.0000000000   -0.3684210526    0.0005060729
 1962    0.5000000000    0.0000000000   -0.3157894737    0.0005060729
 1963    0.5000000000    0.0000000000   -0.2631578947    0.0005060729
 1964    0.5000000000    0.0000000000   -0.2105263158    0.0005060729
 1965    0.5000000000    0.0000000000   -0.1578947368    0.0005060729
 1966    0.5000000000    0.0000000000   -0.1052631579    0.0005060729
 1967    0.5000000000    0.0000000000   -0.0526315789    0.0005060729
 1968    0.5000000000    0.0000000000    0.0000000000    0.0002530364
 1969    0.5000000000    0.5000000000   -0.4736842105    0.0005060729
 1970    0.5000000000    0.5000000000   -0.4210526316    0.0005060729
 1971    0.5000000000    0.5000000000   -0.3684210526    0.0005060729
 1972    0.5000000000    0.5000000000   -0.3157894737    0.0005060729
 1973    0.5000000000    0.5000000000   -0.2631578947    0.0005060729
 1974    0.5000000000    0.5000000000   -0.2105263158    0.0005060729
 1975    0.5000000000    0.5000000000   -0.1578947368    0.0005060729
 1976    0.5000000000    0.5000000000   -0.1052631579    0.0005060729
 1977    0.5000000000    0.5000000000   -0.0526315789    0.0005060729
 1978    0.5000000000    0.5000000000    0.0000000000    0.0002530364
================================================================================


============================ local K-points summary ============================
Number |               Cartesian coordinates              |       Weight
  1      0.4965310814      0.0000000000     -0.3399110516      0.0005060729
  2      0.4965310814      0.0000000000     -0.3021431570      0.0005060729
  3      0.4965310814      0.0000000000     -0.2643752624      0.0005060729
  4      0.4965310814      0.0000000000     -0.2266073677      0.0005060729
  5      0.4965310814      0.0000000000     -0.1888394731      0.0005060729
  6      0.4965310814      0.0000000000     -0.1510715785      0.0005060729
  7      0.4965310814      0.0000000000     -0.1133036839      0.0005060729
  8      0.4965310814      0.0000000000     -0.0755357892      0.0005060729
  9      0.4965310814      0.0000000000     -0.0377678946      0.0005060729
 10      0.4965310814      0.0000000000      0.0000000000      0.0002530364
 11      0.4965310814      0.1449920567     -0.3399110516      0.0005060729
 12      0.4965310814      0.1449920567     -0.3021431570      0.0005060729
 13      0.4965310814      0.1449920567     -0.2643752624      0.0005060729
 14      0.4965310814      0.1449920567     -0.2266073677      0.0005060729
 15      0.4965310814      0.1449920567     -0.1888394731      0.0005060729
 16      0.4965310814      0.1449920567     -0.1510715785      0.0005060729
 17      0.4965310814      0.1449920567     -0.1133036839      0.0005060729
 18      0.4965310814      0.1449920567     -0.0755357892      0.0005060729
 19      0.4965310814      0.1449920567     -0.0377678946      0.0005060729
 20      0.4965310814      0.1449920567      0.0000000000      0.0002530364
================================================================================

Complex-valued NGWFs will be used.
Non Gamma point calculation with KP method will be performed.
Cartesian coordinates of k-point are          0.50000         0.50000         0.50000

Determining parallel strategy ...... done
Calculating Ewald energy ...              -47.385224 Hartree
Basis initialisation ...
... done
Sparse matrix initialisation ...
 done
Fully random NGWF initialisation ...
WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
 done

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
Density renormalisation ...
Target Charge:    40.000000000000 ; Input Charge:    38.950072393792
Density kernel initialisation

Writing density kernel to file "P95.dkn" ... done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.588366304112E+03     3.7557E-03     3.0045E-03
    2         1.588363458851E+03     1.6801E-03     1.3441E-03    -2.8453E-03
    3         1.588362804886E+03     1.0090E-03     8.0716E-04    -6.5396E-04
    4         1.588362545743E+03     7.0112E-04     5.6089E-04    -2.5914E-04
    5         1.588362411952E+03     5.2857E-04     4.2286E-04    -1.3379E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.58836241195227E+03  Eh
     Estimated bandgap           =   7.5620E-02  Eh
     RMS occupancy error         =   1.8655E-08
     [H,K] commutator            =   4.2286E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  001 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.5967E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       9.71110115703216E+02 Eh
   Predicted gain in energy  =      -6.17252296249052E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         8.455186074327E+02     1.3208E-01     1.0567E-01
    2         8.463319473597E+02     2.5515E-01     2.0412E-01     8.1334E-01
    3         8.490044155753E+02     4.7062E-01     3.7650E-01     2.6725E+00
    4         8.548385244010E+02     7.4585E-01     5.9668E-01     5.8341E+00
    5         8.485806984004E+02     4.4902E-01     3.5922E-01    -6.2578E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   8.48580698400373E+02  Eh
     Estimated bandgap           =   1.1233E+01  Eh
     RMS occupancy error         =   3.4462E-07
     [H,K] commutator            =   3.5922E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  002 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.4487E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       3.30663829684224E+02 Eh
   Predicted gain in energy  =      -5.17916868716149E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         3.029620951868E+02     3.3296E-01     2.6637E-01
    2         3.128530666456E+02     9.4647E-01     7.5718E-01     9.8910E+00
    3         3.145372744553E+02     1.0140E+00     8.1117E-01     1.6842E+00
    4         3.102570858108E+02     8.3161E-01     6.6530E-01    -4.2802E+00
    5         3.023392398587E+02     2.4579E-01     1.9663E-01    -7.9178E+00
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   3.02339239858676E+02  Eh
     Estimated bandgap           =   1.8024E+01  Eh
     RMS occupancy error         =   2.0320E-06
     [H,K] commutator            =   1.9663E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  003 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2744E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       1.44102940730207E+02 Eh
   Predicted gain in energy  =      -1.58236299128470E+02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         1.233919362502E+02     1.2331E-01     9.8648E-02
    2         1.244011765911E+02     2.8531E-01     2.2825E-01     1.0092E+00
    3         1.289239974440E+02     6.1106E-01     4.8885E-01     4.5228E+00
    4         1.394289243565E+02     1.0098E+00     8.0793E-01     1.0505E+01
    5         1.293345062375E+02     6.3216E-01     5.0573E-01    -1.0094E+01
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.29334506237453E+02  Eh
     Estimated bandgap           =   1.2014E+01  Eh
     RMS occupancy error         =   5.8322E-06
     [H,K] commutator            =   5.0573E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  004 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2929E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       4.87916078985972E+01 Eh
   Predicted gain in energy  =      -8.05428983388557E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1         3.632842573684E+01     2.6857E-01     2.1485E-01
    2         3.595257684747E+01     2.4203E-01     1.9363E-01    -3.7585E-01
    3         3.526794725347E+01     1.7545E-01     1.4036E-01    -6.8463E-01
    4         3.524604361855E+01     1.7612E-01     1.4090E-01    -2.1904E-02
    5         3.530202702530E+01     1.7819E-01     1.4255E-01     5.5983E-02
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   3.53020270253013E+01  Eh
     Estimated bandgap           =   7.7171E+00  Eh
     RMS occupancy error         =   1.4169E-09
     [H,K] commutator            =   1.4255E-01
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  005 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.4993E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -2.81948195078523E+01 Eh
   Predicted gain in energy  =      -6.34968465331536E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -3.071050403342E+01     6.7144E-02     5.3718E-02
    2        -3.098668134471E+01     1.4680E-02     1.1744E-02    -2.7618E-01
    3        -3.100129567231E+01     2.4732E-03     1.9785E-03    -1.4614E-02
    4        -3.100169096970E+01     4.1088E-04     3.2871E-04    -3.9530E-04
    5        -3.100170183890E+01     6.8104E-05     5.4483E-05    -1.0869E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -3.10017018389016E+01  Eh
     Estimated bandgap           =   3.0055E+00  Eh
     RMS occupancy error         =   5.3139E-12
     [H,K] commutator            =   5.4483E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  006 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.5524E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -5.21544237272204E+01 Eh
   Predicted gain in energy  =      -2.11527218883188E+01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -5.271097129372E+01     4.8534E-02     3.8830E-02
    2        -5.300249257091E+01     8.5243E-03     6.8195E-03    -2.9152E-01
    3        -5.301199522176E+01     1.8850E-03     1.5080E-03    -9.5027E-03
    4        -5.301245249228E+01     4.4624E-04     3.5699E-04    -4.5727E-04
    5        -5.301247783372E+01     1.0990E-04     8.7920E-05    -2.5341E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -5.30124778337213E+01  Eh
     Estimated bandgap           =   1.2476E+00  Eh
     RMS occupancy error         =   1.8912E-10
     [H,K] commutator            =   8.7920E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  007 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.4476E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.21230694646495E+01 Eh
   Predicted gain in energy  =      -9.11059163092820E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.317132312754E+01     3.7924E-02     3.0339E-02
    2        -6.343087806703E+01     8.7571E-03     7.0057E-03    -2.5955E-01
    3        -6.344593069448E+01     2.5757E-03     2.0605E-03    -1.5053E-02
    4        -6.344722537573E+01     8.2334E-04     6.5867E-04    -1.2947E-03
    5        -6.344735582975E+01     2.7415E-04     2.1932E-04    -1.3045E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.34473558297526E+01  Eh
     Estimated bandgap           =   6.7765E-01  Eh
     RMS occupancy error         =   8.2242E-09
     [H,K] commutator            =   2.1932E-04
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  008 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.6292E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -6.83814891526878E+01 Eh
   Predicted gain in energy  =      -4.93413332293518E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -6.880321145457E+01     3.0404E-02     2.4324E-02
    2        -6.902031548298E+01     8.4059E-03     6.7247E-03    -2.1710E-01
    3        -6.903884523558E+01     2.9896E-03     2.3917E-03    -1.8530E-02
    4        -6.904120402365E+01     1.1574E-03     9.2590E-04    -2.3588E-03
    5        -6.904155212739E+01     4.6881E-04     3.7505E-04    -3.4810E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -6.90415521273895E+01  Eh
     Estimated bandgap           =   3.9253E-01  Eh
     RMS occupancy error         =   1.0907E-12
     [H,K] commutator            =   3.7505E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  009 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2167E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.18372875587176E+01 Eh
   Predicted gain in energy  =      -2.79573543132810E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.181818915793E+01     2.2174E-02     1.7739E-02
    2        -7.195790082511E+01     6.8960E-03     5.5168E-03    -1.3971E-01
    3        -7.197267810680E+01     2.6950E-03     2.1560E-03    -1.4777E-02
    4        -7.197494525697E+01     1.1269E-03     9.0148E-04    -2.2672E-03
    5        -7.197533967593E+01     4.9427E-04     3.9541E-04    -3.9442E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.19753396759252E+01  Eh
     Estimated bandgap           =   2.7271E-01  Eh
     RMS occupancy error         =   2.5637E-12
     [H,K] commutator            =   3.9541E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  010 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0444E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.41435979913831E+01 Eh
   Predicted gain in energy  =      -2.16825831545790E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.414868758148E+01     2.2126E-02     1.7701E-02
    2        -7.432009614427E+01     7.4380E-03     5.9504E-03    -1.7141E-01
    3        -7.434197639934E+01     3.1842E-03     2.5473E-03    -2.1880E-02
    4        -7.434609525960E+01     1.4903E-03     1.1922E-03    -4.1189E-03
    5        -7.434699289589E+01     7.4177E-04     5.9341E-04    -8.9764E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.43469928958948E+01  Eh
     Estimated bandgap           =   1.8150E-01  Eh
     RMS occupancy error         =   1.6694E-10
     [H,K] commutator            =   5.9341E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  011 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.1908E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.53909806903824E+01 Eh
   Predicted gain in energy  =      -1.04398779448766E+00 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.535824312357E+01     1.1768E-02     9.4148E-03
    2        -7.541898824716E+01     4.5105E-03     3.6084E-03    -6.0745E-02
    3        -7.542841995325E+01     2.1981E-03     1.7585E-03    -9.4317E-03
    4        -7.543067593769E+01     1.1511E-03     9.2088E-04    -2.2560E-03
    5        -7.543130496648E+01     6.3694E-04     5.0955E-04    -6.2903E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.54313049664770E+01  Eh
     Estimated bandgap           =   1.7500E-01  Eh
     RMS occupancy error         =   7.7017E-10
     [H,K] commutator            =   5.0955E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  012 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.3802E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.60524663684855E+01 Eh
   Predicted gain in energy  =      -6.21161402008482E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.599308452446E+01     9.7970E-03     7.8376E-03
    2        -7.604360473729E+01     4.0436E-03     3.2348E-03    -5.0520E-02
    3        -7.605231540091E+01     2.1474E-03     1.7179E-03    -8.7107E-03
    4        -7.605475771888E+01     1.2162E-03     9.7297E-04    -2.4423E-03
    5        -7.605556918562E+01     7.1600E-04     5.7280E-04    -8.1147E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.60555691856224E+01  Eh
     Estimated bandgap           =   1.7561E-01  Eh
     RMS occupancy error         =   2.6420E-09
     [H,K] commutator            =   5.7280E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  013 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.6871E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.63545553743311E+01 Eh
   Predicted gain in energy  =      -2.98986188708668E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.635416165537E+01     3.4481E-03     2.7584E-03
    2        -7.636088102624E+01     1.7146E-03     1.3717E-03    -6.7194E-03
    3        -7.636256348109E+01     1.1128E-03     8.9021E-04    -1.6825E-03
    4        -7.636322815736E+01     6.7143E-04     5.3714E-04    -6.6468E-04
    5        -7.636347470873E+01     4.1244E-04     3.2995E-04    -2.4655E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.63634747087307E+01  Eh
     Estimated bandgap           =   1.7750E-01  Eh
     RMS occupancy error         =   1.0177E-09
     [H,K] commutator            =   3.2995E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  014 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.4935E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.66196669405221E+01 Eh
   Predicted gain in energy  =      -2.56192231791360E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.661623851940E+01     6.1665E-03     4.9332E-03
    2        -7.664135765693E+01     2.8212E-03     2.2570E-03    -2.5119E-02
    3        -7.664654646088E+01     1.6534E-03     1.3227E-03    -5.1888E-03
    4        -7.664823717899E+01     1.0351E-03     8.2807E-04    -1.6907E-03
    5        -7.664891877345E+01     6.4914E-04     5.1931E-04    -6.8159E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.66489187734453E+01  Eh
     Estimated bandgap           =   1.7769E-01  Eh
     RMS occupancy error         =   1.0396E-08
     [H,K] commutator            =   5.1931E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  015 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.3318E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.68744043693745E+01 Eh
   Predicted gain in energy  =      -2.25485595929243E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.684946489094E+01     5.8888E-03     4.7110E-03
    2        -7.687513424992E+01     2.5351E-03     2.0281E-03    -2.5669E-02
    3        -7.688005341387E+01     1.5799E-03     1.2639E-03    -4.9192E-03
    4        -7.688160849731E+01     1.0748E-03     8.5983E-04    -1.5551E-03
    5        -7.688236014936E+01     6.7182E-04     5.3746E-04    -7.5165E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.68823601493592E+01  Eh
     Estimated bandgap           =   1.7650E-01  Eh
     RMS occupancy error         =   2.5377E-08
     [H,K] commutator            =   5.3746E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  016 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.7435E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70300442875575E+01 Eh
   Predicted gain in energy  =      -1.47684138198301E-01 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.698807899175E+01     4.1773E-03     3.3418E-03
    2        -7.700181037641E+01     2.0926E-03     1.6741E-03    -1.3731E-02
    3        -7.700482273518E+01     1.4518E-03     1.1614E-03    -3.0124E-03
    4        -7.700619881963E+01     9.1019E-04     7.2815E-04    -1.3761E-03
    5        -7.700683495836E+01     6.3838E-04     5.1070E-04    -6.3614E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70068349583553E+01  Eh
     Estimated bandgap           =   1.6998E-01  Eh
     RMS occupancy error         =   1.3978E-11
     [H,K] commutator            =   5.1070E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  017 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3468E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.70896310117507E+01 Eh
   Predicted gain in energy  =      -8.27960533954126E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.708959862013E+01     1.3384E-03     1.0707E-03
    2        -7.709097888854E+01     8.3372E-04     6.6698E-04    -1.3803E-03
    3        -7.709144856355E+01     7.0843E-04     5.6674E-04    -4.6968E-04
    4        -7.709180021850E+01     5.0364E-04     4.0291E-04    -3.5165E-04
    5        -7.709198632657E+01     3.6485E-04     2.9188E-04    -1.8611E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.70919863265656E+01  Eh
     Estimated bandgap           =   1.6872E-01  Eh
     RMS occupancy error         =   7.3984E-08
     [H,K] commutator            =   2.9188E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  018 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.7577E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71492282917294E+01 Eh
   Predicted gain in energy  =      -5.72419651637546E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.714889835734E+01     1.7750E-03     1.4200E-03
    2        -7.715141185694E+01     9.0251E-04     7.2201E-04    -2.5135E-03
    3        -7.715204706879E+01     6.5528E-04     5.2423E-04    -6.3521E-04
    4        -7.715235332897E+01     4.4814E-04     3.5851E-04    -3.0626E-04
    5        -7.715250115004E+01     3.3702E-04     2.6962E-04    -1.4782E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71525011500376E+01  Eh
     Estimated bandgap           =   1.6528E-01  Eh
     RMS occupancy error         =   5.6823E-08
     [H,K] commutator            =   2.6962E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  019 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.4273E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.71902177537219E+01 Eh
   Predicted gain in energy  =      -3.77166036843448E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.718910781878E+01     1.6592E-03     1.3274E-03
    2        -7.719159254563E+01     7.8403E-04     6.2723E-04    -2.4847E-03
    3        -7.719210013573E+01     6.2490E-04     4.9992E-04    -5.0759E-04
    4        -7.719232064286E+01     3.6696E-04     2.9357E-04    -2.2051E-04
    5        -7.719243319452E+01     2.7250E-04     2.1800E-04    -1.1255E-04
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.71924331945242E+01  Eh
     Estimated bandgap           =   1.6172E-01  Eh
     RMS occupancy error         =   5.6357E-08
     [H,K] commutator            =   2.1800E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  020 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.1705E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72177004216361E+01 Eh
   Predicted gain in energy  =      -2.52672271119252E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.721569932316E+01     1.4152E-03     1.1322E-03
    2        -7.721758120185E+01     6.4592E-04     5.1673E-04    -1.8819E-03
    3        -7.721790529135E+01     5.3546E-04     4.2837E-04    -3.2409E-04
    4        -7.721804595888E+01     3.3326E-04     2.6660E-04    -1.4067E-04
    5        -7.721811521697E+01     2.4585E-04     1.9668E-04    -6.9258E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72181152169744E+01  Eh
     Estimated bandgap           =   1.5702E-01  Eh
     RMS occupancy error         =   2.1542E-09
     [H,K] commutator            =   1.9668E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  021 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  9.9922E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72313687887877E+01 Eh
   Predicted gain in energy  =      -1.32535718132232E-02 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.723136908454E+01     3.6689E-04     2.9351E-04
    2        -7.723147842204E+01     2.1959E-04     1.7568E-04    -1.0934E-04
    3        -7.723151454061E+01     2.1081E-04     1.6865E-04    -3.6119E-05
    4        -7.723154793872E+01     1.8069E-04     1.4455E-04    -3.3398E-05
    5        -7.723156541099E+01     1.1720E-04     9.3761E-05    -1.7472E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72315654109904E+01  Eh
     Estimated bandgap           =   1.5578E-01  Eh
     RMS occupancy error         =   1.3103E-08
     [H,K] commutator            =   9.3761E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  022 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.2017E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72410949603654E+01 Eh
   Predicted gain in energy  =      -9.52954937505979E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.724108422483E+01     5.6858E-04     4.5486E-04
    2        -7.724133320713E+01     3.2424E-04     2.5939E-04    -2.4898E-04
    3        -7.724138744088E+01     2.2661E-04     1.8129E-04    -5.4234E-05
    4        -7.724141815891E+01     1.8171E-04     1.4537E-04    -3.0718E-05
    5        -7.724143917328E+01     1.2620E-04     1.0096E-04    -2.1014E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72414391732774E+01  Eh
     Estimated bandgap           =   1.5271E-01  Eh
     RMS occupancy error         =   1.1976E-09
     [H,K] commutator            =   1.0096E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  023 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  6.0999E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72481512250007E+01 Eh
   Predicted gain in energy  =      -6.71205172328371E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.724809427126E+01     5.8253E-04     4.6602E-04
    2        -7.724840803049E+01     3.2896E-04     2.6317E-04    -3.1376E-04
    3        -7.724845774796E+01     2.6991E-04     2.1593E-04    -4.9717E-05
    4        -7.724850858960E+01     1.6621E-04     1.3296E-04    -5.0842E-05
    5        -7.724853043664E+01     1.3139E-04     1.0511E-04    -2.1847E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72485304366438E+01  Eh
     Estimated bandgap           =   1.4924E-01  Eh
     RMS occupancy error         =   3.9009E-09
     [H,K] commutator            =   1.0511E-04
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  024 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.7700E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72527462444064E+01 Eh
   Predicted gain in energy  =      -4.21580776263397E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725264539480E+01     4.9314E-04     3.9451E-04
    2        -7.725288103558E+01     2.4469E-04     1.9575E-04    -2.3564E-04
    3        -7.725292353539E+01     2.0540E-04     1.6432E-04    -4.2500E-05
    4        -7.725295033558E+01     1.5337E-04     1.2270E-04    -2.6800E-05
    5        -7.725296166052E+01     1.0938E-04     8.7502E-05    -1.1325E-05
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72529616605225E+01  Eh
     Estimated bandgap           =   1.4608E-01  Eh
     RMS occupancy error         =   2.5839E-10
     [H,K] commutator            =   8.7502E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  025 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.0486E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72552891776676E+01 Eh
   Predicted gain in energy  =      -2.32751714506207E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725528922033E+01     1.4175E-04     1.1340E-04
    2        -7.725530426767E+01     9.6004E-05     7.6803E-05    -1.5047E-05
    3        -7.725531030478E+01     8.4727E-05     6.7781E-05    -6.0371E-06
    4        -7.725531630889E+01     9.2456E-05     7.3965E-05    -6.0041E-06
    5        -7.725532061603E+01     4.7532E-05     3.8025E-05    -4.3071E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72553206160347E+01  Eh
     Estimated bandgap           =   1.4522E-01  Eh
     RMS occupancy error         =   1.0151E-09
     [H,K] commutator            =   3.8025E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  026 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.9197E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72569734108903E+01 Eh
   Predicted gain in energy  =      -1.65279485553071E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725697276024E+01     1.9934E-04     1.5947E-04
    2        -7.725700600043E+01     1.3072E-04     1.0457E-04    -3.3240E-05
    3        -7.725701307257E+01     8.8079E-05     7.0463E-05    -7.0721E-06
    4        -7.725701759054E+01     6.1985E-05     4.9588E-05    -4.5180E-06
    5        -7.725702047664E+01     4.2474E-05     3.3979E-05    -2.8861E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72570204766398E+01  Eh
     Estimated bandgap           =   1.4361E-01  Eh
     RMS occupancy error         =   8.6291E-08
     [H,K] commutator            =   3.3979E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  027 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.4367E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72580802777666E+01 Eh
   Predicted gain in energy  =      -1.05980112684279E-03 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725807742979E+01     2.0403E-04     1.6322E-04
    2        -7.725812039117E+01     1.2049E-04     9.6390E-05    -4.2961E-05
    3        -7.725812635733E+01     9.5660E-05     7.6528E-05    -5.9662E-06
    4        -7.725813332882E+01     6.3058E-05     5.0446E-05    -6.9715E-06
    5        -7.725813578282E+01     4.4948E-05     3.5959E-05    -2.4540E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72581357828167E+01  Eh
     Estimated bandgap           =   1.4192E-01  Eh
     RMS occupancy error         =   4.0656E-08
     [H,K] commutator            =   3.5959E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  028 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.9517E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72588227670919E+01 Eh
   Predicted gain in energy  =      -6.86984275219515E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725881736013E+01     1.8305E-04     1.4644E-04
    2        -7.725885247128E+01     1.0280E-04     8.2241E-05    -3.5111E-05
    3        -7.725885875013E+01     8.0433E-05     6.4346E-05    -6.2789E-06
    4        -7.725886359681E+01     6.9066E-05     5.5253E-05    -4.8467E-06
    5        -7.725886548228E+01     4.1970E-05     3.3576E-05    -1.8855E-06
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72588654822843E+01  Eh
     Estimated bandgap           =   1.4035E-01  Eh
     RMS occupancy error         =   1.8376E-08
     [H,K] commutator            =   3.3576E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  029 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.8232E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72592684679838E+01 Eh
   Predicted gain in energy  =      -4.02985699480496E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725926850065E+01     4.9265E-05     3.9412E-05
    2        -7.725927042098E+01     3.6217E-05     2.8973E-05    -1.9203E-06
    3        -7.725927130854E+01     3.4877E-05     2.7902E-05    -8.8756E-07
    4        -7.725927223796E+01     3.8618E-05     3.0894E-05    -9.2942E-07
    5        -7.725927307442E+01     2.0154E-05     1.6123E-05    -8.3646E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72592730744222E+01  Eh
     Estimated bandgap           =   1.3999E-01  Eh
     RMS occupancy error         =   3.1289E-08
     [H,K] commutator            =   1.6123E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  030 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2641E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72595673709774E+01 Eh
   Predicted gain in energy  =      -2.94296555210849E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725956737116E+01     7.1592E-05     5.7273E-05
    2        -7.725957178441E+01     5.7543E-05     4.6034E-05    -4.4132E-06
    3        -7.725957301553E+01     3.4409E-05     2.7527E-05    -1.2311E-06
    4        -7.725957370394E+01     2.4564E-05     1.9651E-05    -6.8840E-07
    5        -7.725957420544E+01     1.8288E-05     1.4630E-05    -5.0151E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72595742054437E+01  Eh
     Estimated bandgap           =   1.3926E-01  Eh
     RMS occupancy error         =   2.6106E-09
     [H,K] commutator            =   1.4630E-05
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  031 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0737E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72597879281693E+01 Eh
   Predicted gain in energy  =      -2.13722725547427E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725978778610E+01     8.6584E-05     6.9267E-05
    2        -7.725979582823E+01     6.8787E-05     5.5029E-05    -8.0421E-06
    3        -7.725979734300E+01     4.0666E-05     3.2533E-05    -1.5148E-06
    4        -7.725979893451E+01     3.4195E-05     2.7356E-05    -1.5915E-06
    5        -7.725979964220E+01     2.1608E-05     1.7287E-05    -7.0769E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72597996421998E+01  Eh
     Estimated bandgap           =   1.3836E-01  Eh
     RMS occupancy error         =   3.5025E-09
     [H,K] commutator            =   1.7287E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  032 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  8.5221E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72599400465779E+01 Eh
   Predicted gain in energy  =      -1.40404378100811E-04 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.725993968481E+01     7.9181E-05     6.3345E-05
    2        -7.725994686836E+01     5.4569E-05     4.3655E-05    -7.1835E-06
    3        -7.725994810481E+01     4.2923E-05     3.4338E-05    -1.2365E-06
    4        -7.725994946345E+01     3.8880E-05     3.1104E-05    -1.3586E-06
    5        -7.725995032851E+01     2.1745E-05     1.7396E-05    -8.6506E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72599503285095E+01  Eh
     Estimated bandgap           =   1.3751E-01  Eh
     RMS occupancy error         =   9.6599E-09
     [H,K] commutator            =   1.7396E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  033 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.7674E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72600348406144E+01 Eh
   Predicted gain in energy  =      -8.45121049053432E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726003484245E+01     2.4431E-05     1.9545E-05
    2        -7.726003536619E+01     1.9811E-05     1.5849E-05    -5.2374E-07
    3        -7.726003570069E+01     1.9243E-05     1.5394E-05    -3.3450E-07
    4        -7.726003575624E+01     1.8367E-05     1.4694E-05    -5.5555E-08
    5        -7.726003614486E+01     1.8727E-05     1.4982E-05    -3.8861E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72600361448559E+01  Eh
     Estimated bandgap           =   1.3729E-01  Eh
     RMS occupancy error         =   6.8707E-09
     [H,K] commutator            =   1.4982E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  034 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.5558E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72600977545215E+01 Eh
   Predicted gain in energy  =      -6.16096656358422E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726009775412E+01     3.5925E-05     2.8740E-05
    2        -7.726009902014E+01     3.2978E-05     2.6382E-05    -1.2660E-06
    3        -7.726009962659E+01     2.0684E-05     1.6547E-05    -6.0646E-07
    4        -7.726009987583E+01     2.2172E-05     1.7738E-05    -2.4923E-07
    5        -7.726010022329E+01     1.6101E-05     1.2881E-05    -3.4746E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72601002232900E+01  Eh
     Estimated bandgap           =   1.3686E-01  Eh
     RMS occupancy error         =   1.4020E-08
     [H,K] commutator            =   1.2881E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  035 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.7132E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72601422169017E+01 Eh
   Predicted gain in energy  =      -4.19936117026509E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726014220347E+01     3.6952E-05     2.9561E-05
    2        -7.726014373133E+01     2.8893E-05     2.3114E-05    -1.5279E-06
    3        -7.726014417809E+01     2.2779E-05     1.8223E-05    -4.4677E-07
    4        -7.726014452801E+01     2.5221E-05     2.0177E-05    -3.4991E-07
    5        -7.726014492177E+01     1.6424E-05     1.3139E-05    -3.9376E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72601449217674E+01  Eh
     Estimated bandgap           =   1.3637E-01  Eh
     RMS occupancy error         =   2.8393E-08
     [H,K] commutator            =   1.3139E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  036 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.9096E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72601737071945E+01 Eh
   Predicted gain in energy  =      -2.87854271476817E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726017366731E+01     3.2783E-05     2.6226E-05
    2        -7.726017509128E+01     2.3568E-05     1.8854E-05    -1.4240E-06
    3        -7.726017546580E+01     2.4022E-05     1.9218E-05    -3.7453E-07
    4        -7.726017589940E+01     2.5851E-05     2.0681E-05    -4.3360E-07
    5        -7.726017621630E+01     1.5666E-05     1.2533E-05    -3.1690E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72601762162988E+01  Eh
     Estimated bandgap           =   1.3591E-01  Eh
     RMS occupancy error         =   3.9340E-08
     [H,K] commutator            =   1.2533E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  037 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.0033E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72601942299062E+01 Eh
   Predicted gain in energy  =      -1.80136073879567E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726019423187E+01     1.3607E-05     1.0885E-05
    2        -7.726019438835E+01     1.3107E-05     1.0486E-05    -1.5648E-07
    3        -7.726019451674E+01     1.4008E-05     1.1206E-05    -1.2839E-07
    4        -7.726019466848E+01     1.8851E-05     1.5081E-05    -1.5174E-07
    5        -7.726019501716E+01     1.3020E-05     1.0416E-05    -3.4868E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72601950171644E+01  Eh
     Estimated bandgap           =   1.3582E-01  Eh
     RMS occupancy error         =   1.7766E-11
     [H,K] commutator            =   1.0416E-05
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  038 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.6938E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72602086496720E+01 Eh
   Predicted gain in energy  =      -1.36325076169896E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726020865050E+01     1.8631E-05     1.4905E-05
    2        -7.726020904934E+01     1.8187E-05     1.4549E-05    -3.9884E-07
    3        -7.726020920881E+01     1.2350E-05     9.8798E-06    -1.5947E-07
    4        -7.726020926994E+01     8.3286E-06     6.6629E-06    -6.1135E-08
    5        -7.726020934023E+01     9.0392E-06     7.2314E-06    -7.0286E-08
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72602093402302E+01  Eh
     Estimated bandgap           =   1.3561E-01  Eh
     RMS occupancy error         =   4.0842E-09
     [H,K] commutator            =   7.2314E-06
     k-point number  1
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [  0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [  0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  039 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3148E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.72602198871122E+01 Eh
   Predicted gain in energy  =      -1.05468819810994E-05 Eh
  ========================================================================

Writing NGWFs to file "P95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:
   iter  |      energy (Eh)       | rms gradient |  commutator  |   dE (Eh)
    1        -7.726021988451E+01     1.7486E-05     1.3989E-05
    2        -7.726022030563E+01     1.7412E-05     1.3930E-05    -4.2112E-07
    3        -7.726022044805E+01     1.3813E-05     1.1050E-05    -1.4242E-07
    4        -7.726022057832E+01     1.5664E-05     1.2531E-05    -1.3027E-07
    5        -7.726022077011E+01     9.6064E-06     7.6851E-06    -1.9179E-07
Finished density kernel iterations (   5)

Writing density kernel to file "P95.dkn" ... done


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.72602207701112E+01  Eh
     Estimated bandgap           =   1.3533E-01  Eh
     RMS occupancy error         =   2.5317E-08
     [H,K] commutator            =   7.6851E-06
     k-point number  1
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  2
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  3
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  4
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  5
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  6
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  7
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  8
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number  9
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 10
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 11
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 12
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 13
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 14
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 15
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 16
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 17
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 18
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 19
     Occupancy bounds            = [ -0.000:  1.000]
     k-point number 20
     Occupancy bounds            = [ -0.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  040 #############################
################################################################################

>>> Checking for convergence of NGWFs: 
           ........................................................
           |         *** NGWF optimisation converged ***          |
           | RMS NGWF gradient =    0.00000191193532              |
           | Criteria satisfied:                                  |
           | -> RMS NGWF gradient lower than set threshold.       |
           ========================================================

================================================================================
           ---------------- ENERGY COMPONENTS (Eh) ----------------
           | Kinetic                    :       19.53679061356330 |
           | Pseudopotential (local)    :      -20.46444181986858 |
           | Pseudo (non-coul chg cor)  :        0.00000000000000
           | Pseudopotential (non-local):        1.30505314741499 |
           | Hartree                    :        8.34088215401092 |
           | Exchange-correlation       :      -38.59328124486694 |
           | Ewald                      :      -47.38522362036487 |
           | Total                      :      -77.26022077011118 |
           --------------------------------------------------------
           Integrated density           :       40.00000000000040
================================================================================


                        <<<<< CALCULATION SUMMARY >>>>>                         
|ITER|    RMS GRADIENT   |     TOTAL ENERGY    |   step   |     Epredicted              
   0     0.03596702750380   1588.36241195226853   0.617146    971.11011570321648        
   1     0.04448706791410    848.58069840037342   0.323295    330.66382968422403        
   2     0.02274391707088    302.33923985867619   0.473820    144.10294073020668        
   3     0.01292882432663    129.33450623745290   0.733522     48.79160789859720        
   4     0.00749927308357     35.30202702530134   2.443835    -28.19481950785228        
   5     0.00355240825732    -31.00170183890164   3.168983    -52.15442372722039        
   6     0.00244761963938    -53.01247783372127   2.932064    -62.12306946464947        
   7     0.00162922629067    -63.44735582975258   3.273189    -68.38148915268776        
   8     0.00121674999905    -69.04155212738949   4.087440    -71.83728755871759        
   9     0.00104436949872    -71.97533967592520   4.132918    -74.14359799138310        
  10     0.00071907655368    -74.34699289589476   4.018174    -75.39098069038242        
  11     0.00053801697789    -75.43130496647701   4.343931    -76.05246636848550        
  12     0.00046870636285    -76.05556918562243   2.945828    -76.35455537433110        
  13     0.00034934546683    -76.36347470873071   4.427448    -76.61966694052207        
  14     0.00033317580389    -76.64891877344527   4.014458    -76.87440436937452        
  15     0.00027435496479    -76.88236014935920   4.191658    -77.03004428755750        
  16     0.00023467836212    -77.00683495835528   3.254030    -77.08963101175070        
  17     0.00017577008532    -77.09198632656565   3.936524    -77.14922829172940        
  18     0.00014272921029    -77.15250115003758   3.818836    -77.19021775372192        
  19     0.00011705476415    -77.19243319452421   3.805328    -77.21770042163614        
  20     0.00009992218496    -77.21811521697444   2.873208    -77.23136878878766        
  21     0.00007201666293    -77.23156541099037   3.941562    -77.24109496036543        
  22     0.00006099870810    -77.24143917327737   3.777658    -77.24815122500065        
  23     0.00004769967602    -77.24853043664376   3.817869    -77.25274624440640        
  24     0.00004048639056    -77.25296166052252   3.073497    -77.25528917766758        
  25     0.00002919734589    -77.25532061603474   4.165916    -77.25697341089027        
  26     0.00002436731071    -77.25702047663978   3.756966    -77.25808027776662        
  27     0.00001951723216    -77.25813578281665   3.719886    -77.25882276709187        
  28     0.00001823181274    -77.25886548228428   2.624146    -77.25926846798376        
  29     0.00001264091034    -77.25927307442218   3.965986    -77.25956737097739        
  30     0.00001073693215    -77.25957420544373   3.920357    -77.25978792816927        
  31     0.00000852210118    -77.25979964219982   3.977237    -77.25994004657792        
  32     0.00000776739493    -77.25995032850949   3.031979    -77.26003484061440        
  33     0.00000555582815    -77.26003614485586   4.300462    -77.26009775452150        
  34     0.00000471319517    -77.26010022328997   3.961845    -77.26014221690167        
  35     0.00000390962382    -77.26014492176739   3.843192    -77.26017370719454        
  36     0.00000400325961    -77.26017621629877   2.432939    -77.26019422990616        
  37     0.00000269379362    -77.26019501716441   4.057734    -77.26020864967202        
  38     0.00000231475423    -77.26020934023020   4.134337    -77.26021988711219        
  39     0.00000191193532    -77.26022077011118  <-- CG                                 

------------------------------ TIMING INFORMATION ------------------------------
AVERAGE TIME:   10144.125s on      1 proc(s)                                    
TOTAL TIME:     10144.125s on      1 proc(s)                                    
==================== AVERAGE TIMINGS FROM ALL PROCS (CUMULATIVE) =====================
|| TAG                                         #calls     cpu time   %total  Gflops ||
|| onetep.F90 final imbalance                 :     1        0.00s   0.000%  ------ ||
|| onetep.F90 main loop imbalance             :     1        0.00s   0.000%  ------ ||
|| hash_table_free                            :    80        0.00s   0.000%  ------ ||
|| sparse_init                                :     1        0.00s   0.000%  ------ ||
|| pseudo_make_structure_factor               :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_core_density              :     1        0.01s   0.000%  ------ ||
|| pseudopotentials_local_on_grid             :     1        0.01s   0.000%  ------ ||
|| ewald_calculate_energy                     :     1        0.01s   0.000%  ------ ||
|| linalg_dgemv                               :    49        0.02s   0.000%  ------ ||
|| palser_mano_kernel_optimise_spam3_embed    :    20        0.06s   0.001%  ------ ||
|| sparse_set_to_garbage                      :  9560        0.07s   0.001%  ------ ||
|| density_fftbox_interp_mult_imbal           : 245.8k       0.10s   0.001%  ------ ||
|| density_init_guess_real                    :     1        0.17s   0.002%  ------ ||
|| pseudopotentials_nonlocal_mat              :    80        0.19s   0.002%  ------ ||
|| sparse_embed_array_hotelling_invert        :    82        0.40s   0.004%  ------ ||
|| restart_kernel_write                       :    41        0.80s   0.008%  ------ ||
|| ngwfs_initialise_from_radial               :    20        1.11s   0.011%  ------ ||
|| sparse_trace                               : 163.2k       1.50s   0.015%  ------ ||
|| ngwf_gradient_coeffs                       :    40        2.14s   0.021%  ------ ||
|| lnv_gradient_norm                          :   200        2.19s   0.022%  ------ ||
|| hartree_on_grid_single                     :   385        3.98s   0.039%  ------ ||
|| sparse_product                             : 204.0k       5.25s   0.052%  ------ ||
|| basis_extract_function_from_box            : 51200        9.25s   0.091%  ------ ||
|| fourier_apply_cell_backward                :  1927        9.48s   0.093%   2.161 ||
|| fourier_apply_cell_forward                 :  1925        9.82s   0.097%   2.084 ||
|| energy_and_force_init_cell                 :     1       10.82s   0.107%  ------ ||
|| restart_ngwfs_tightbox_output              :    39       11.94s   0.118%  ------ ||
|| hamiltonian_energy_components              :     1       14.79s   0.146%  ------ ||
|| cell_grid_extract_box_real                 : 154.2k      16.43s   0.162%  ------ ||
|| projectors_init_fftbox_recip               :  3200       19.43s   0.192%  ------ ||
|| kernel_purify                              :   623       26.12s   0.257%  ------ ||
|| kernel_fix                                 :   203       26.22s   0.258%  ------ ||
|| xc_energy_potential                        :   385       31.90s   0.314%  ------ ||
|| cell_grid_deposit_box_real                 : 245.8k     105.18s   1.037%  ------ ||
|| density_fftbox_deposit_to_cell             : 245.8k     106.70s   1.052%  ------ ||
|| basis_copy_function_to_box                 : 450.6k     118.48s   1.168%  ------ ||
|| integrals_kinetic_spam3                    :  1600      131.05s   1.292%  ------ ||
|| function_ops_brappd_ketppd_spam3           :  1600      138.50s   1.365%  ------ ||
|| projectors_gradient_batch                  :  1600      200.32s   1.975%  ------ ||
|| projectors_func_ovlp_box_spam3             :  1600      288.36s   2.843%  ------ ||
|| integrals_locpot_mat_els_batch             :  8040      572.00s   5.639%  ------ ||
|| ngwf_gradient_build_batch                  :  1600      675.30s   6.657%  ------ ||
|| basis_dot_function_with_box                : 7.419M     898.37s   8.856%  ------ ||
|| ngwf_gradient_batch                        :  1600     1417.60s  13.975%  ------ ||
|| potential_apply_to_ngwf_batch              :  8040     1432.66s  14.123%  ------ ||
|| density_batch_row_sums                     : 15360     1449.25s  14.287%  ------ ||
|| ngwf_gradient_lnv                          :    40     1471.17s  14.503%  ------ ||
|| basis_add_function_to_box                  : 11.14M    1977.28s  19.492%  ------ ||
|| integrals_locpot_dbl_grid                  :  4020     2005.29s  19.768%  ------ ||
|| fourier_apply_box                          : 2.086M    3118.21s  30.739%   6.465 ||
|| density_fftbox_interpolate_multiply        : 245.8k    3674.57s  36.224%  ------ ||
|| density_batch_interp_deposit               : 15360     3802.51s  37.485%  ------ ||
|| density_on_dbl_grid                        :  7680     5293.92s  52.187%  ------ ||
|| hamiltonian_lhxc_calculate                 :   383     5657.75s  55.774%  ------ ||
|| lnv_denskernel_optimise_cg                 :    40     7234.40s  71.316%  ------ ||
|| ngwf_cg_optimise                           :     1    10113.95s  99.703%  ------ ||
|| energy_and_forces                          :     1    10132.86s  99.889%  ------ ||
|| total_time                                 :     1    10144.12s 100.000%  ------ ||
======================================================================================
Overhead of generating timer report: 
- 0 ms averaging over threads,
- 0 ms ensuring consistency across MPI ranks,
- 0 ms printing in order.

Job completed: 16-01-2025 23:02 (-0000)

