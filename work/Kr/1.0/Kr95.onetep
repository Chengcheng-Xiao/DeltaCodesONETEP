 Initialized kpar          95  with            1 processes.
If your calculation crashes here, before "Checking processes and threads..."
is displayed, then your stack size is insufficient.
If so, use "ulimit -s unlimited" at runtime.
You can disable this check with "check_stack_size F".

Checking processes and threads...
      Default threads: 1
   Running with 1 MPI process.
   There are 96 MPI processes running on the same node as the root process.
   Each MPI process is using: 
               1 threads for simulation cell FFTs.
               1 threads for threaded FFT box operations.
               1 threads for loops over batched FFT box operations.
               1 threads in other parallel regions.
   MPI Interface: S2 (use mpi) (-DMPI, no -DUSE_MPI_F08, no -DUSE_INCLUDE_MPIF).
   MPI_ASYNC_PROTECTS_NONBLOCKING:  No. MPI_SUBARRAYS_SUPPORTED:  No.
   FFTW Interface: OMP-capable and DEPRECATED. (Use -DUSE_MODERN_FFTW to switch to modern).
   GPU Interface: None.
   GPU FFT Backend: None.
... done

Basic input checks...... done

Reading geometry and species blocks from file "Kr.dat" ...
  <species_atomic_set> block not found: NGWF initialisation set to SOLVE
... done


--------------------------------------------------------------------------------
---------------------------------- INPUT FILE ----------------------------------
--------------------------------------------------------------------------------

cutoff_energy : 1280 eV                                                         
do_properties : F                                                               
edft : F                                                                        
extend_ngwf : T T T                                                             
forces_output_detail : verbose                                                  
full_rand_ngwf : T                                                              
kpoint_grid_shift : 0 0 0                                                       
kpoint_grid_size : 13 13 13                                                     
kpoint_method : KP                                                              
maxit_lnv : -1                                                                  
maxit_ngwf_cg : 1000                                                            
minit_lnv : -1                                                                  
output_detail : Normal                                                          
paw : F                                                                         
permit_unusual_ngwf_count : T                                                   
pseudo_path : .                                                                 
rand_seed_ngwf_dynamic : F                                                      
spin : 0                                                                        
spin_polarized : F                                                              
task : SinglePoint                                                              
use_cmplx_ngwfs : T                                                             
write_forces : F                                                                
xc_functional : PBE                                                             
%BLOCK LATTICE_CART                                                             
ang                                                                             
6.42930000       0.00000000       0.00000000                                    
0.00000000       6.42930000       0.00000000                                    
0.00000000       0.00000000       6.42930000                                    
%ENDBLOCK LATTICE_CART                                                          
%BLOCK POSITIONS_ABS                                                            
ang                                                                             
Kr     0.000000     0.000000     0.000000                                       
Kr     0.000000     3.214650     3.214650                                       
Kr     3.214650     0.000000     3.214650                                       
Kr     3.214650     3.214650     0.000000                                       
%ENDBLOCK POSITIONS_ABS                                                         
%BLOCK SPECIES                                                                  
Kr Kr 36 -1 9.0                                                                 
%ENDBLOCK SPECIES                                                               
%BLOCK SPECIES_POT                                                              
Kr Kr_NCP19_PBE_OTF.usp                                                         
%ENDBLOCK SPECIES_POT                                                           
num_kpars : 96                                                                  

--------------------------------------------------------------------------------
-------------------------------- END INPUT FILE --------------------------------
--------------------------------------------------------------------------------


 
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Full system >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<< Pseudopotential information >>>>>>>>>>>>>>>>>>>>>>>>>>
File: Kr_NCP19_PBE_OTF.usp [ 2001 points up to Gmax=  52.9 (1/bohr)]
  Atomic number: 36;  ionic charge:  8.000000
    Shell 1: l = 0; rc = 1.90 bohr
    Shell 2: l = 1; rc = 1.90 bohr
  Core charge supplied for Nonlinear Core Corrections
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

-------------------------- Atom counting information ---------------------------
Symbol    Natoms    Nngwfs    Nprojs
  Kr         4        16        16
.......   ......    ......    ......
Totals:      4        16        16
--------------------------------------------------------------------------------

=============================== PSINC grid sizes ===============================
                      Simulation cell:   33 x  33 x  33
                              FFT-box:   33 x  33 x  33
                                  PPD:   33 x  33 x  33
Grid space d1=  0.368170189002a0 (KE cutoff=  56.04111Eh =1524.95631eV)
Grid space d2=  0.368170189002a0 (KE cutoff=  56.04111Eh =1524.95631eV)
Grid space d3=  0.368170189002a0 (KE cutoff=  56.04111Eh =1524.95631eV)
================================================================================

********************* Fourier parallelisation information **********************
       Coarse grid (whole simulation cell) dimensions:     33    33    33
          Real-space ('12') slabs/proc (min max mean):     33    33    33
         Recip-space ('23') slabs/proc (min max mean):     17    17    17
********************************************************************************

********************* Fourier parallelisation information **********************
       Double grid (whole simulation cell) dimensions:     66    66    66
          Real-space ('12') slabs/proc (min max mean):     66    66    66
         Recip-space ('23') slabs/proc (min max mean):     34    34    34
********************************************************************************

Atom SCF Calculation for Kr : Z (AE atom) =  36 : Z (PS atom) =   8
Config String: 4s2.0 4p6.0
Orbitals (num,occ):  2     2.00 6.00
Orbitals   (num,l):  2        0    1
Atom SCF converged after  25 iterations to a total energy of    -23.00712912

=============================== K-points summary ===============================
Number |             Fractional coordinates          |    Weight
    1   -0.4615384615   -0.4615384615   -0.4615384615    0.0009103323
    2   -0.4615384615   -0.4615384615   -0.3846153846    0.0009103323
    3   -0.4615384615   -0.4615384615   -0.3076923077    0.0009103323
    4   -0.4615384615   -0.4615384615   -0.2307692308    0.0009103323
    5   -0.4615384615   -0.4615384615   -0.1538461538    0.0009103323
    6   -0.4615384615   -0.4615384615   -0.0769230769    0.0009103323
    7   -0.4615384615   -0.4615384615    0.0000000000    0.0009103323
    8   -0.4615384615   -0.4615384615    0.0769230769    0.0009103323
    9   -0.4615384615   -0.4615384615    0.1538461538    0.0009103323
   10   -0.4615384615   -0.4615384615    0.2307692308    0.0009103323
   11   -0.4615384615   -0.4615384615    0.3076923077    0.0009103323
   12   -0.4615384615   -0.4615384615    0.3846153846    0.0009103323
   13   -0.4615384615   -0.4615384615    0.4615384615    0.0009103323
   14   -0.4615384615   -0.3846153846   -0.4615384615    0.0009103323
   15   -0.4615384615   -0.3846153846   -0.3846153846    0.0009103323
   16   -0.4615384615   -0.3846153846   -0.3076923077    0.0009103323
   17   -0.4615384615   -0.3846153846   -0.2307692308    0.0009103323
   18   -0.4615384615   -0.3846153846   -0.1538461538    0.0009103323
   19   -0.4615384615   -0.3846153846   -0.0769230769    0.0009103323
   20   -0.4615384615   -0.3846153846    0.0000000000    0.0009103323
   21   -0.4615384615   -0.3846153846    0.0769230769    0.0009103323
   22   -0.4615384615   -0.3846153846    0.1538461538    0.0009103323
   23   -0.4615384615   -0.3846153846    0.2307692308    0.0009103323
   24   -0.4615384615   -0.3846153846    0.3076923077    0.0009103323
   25   -0.4615384615   -0.3846153846    0.3846153846    0.0009103323
   26   -0.4615384615   -0.3846153846    0.4615384615    0.0009103323
   27   -0.4615384615   -0.3076923077   -0.4615384615    0.0009103323
   28   -0.4615384615   -0.3076923077   -0.3846153846    0.0009103323
   29   -0.4615384615   -0.3076923077   -0.3076923077    0.0009103323
   30   -0.4615384615   -0.3076923077   -0.2307692308    0.0009103323
   31   -0.4615384615   -0.3076923077   -0.1538461538    0.0009103323
   32   -0.4615384615   -0.3076923077   -0.0769230769    0.0009103323
   33   -0.4615384615   -0.3076923077    0.0000000000    0.0009103323
   34   -0.4615384615   -0.3076923077    0.0769230769    0.0009103323
   35   -0.4615384615   -0.3076923077    0.1538461538    0.0009103323
   36   -0.4615384615   -0.3076923077    0.2307692308    0.0009103323
   37   -0.4615384615   -0.3076923077    0.3076923077    0.0009103323
   38   -0.4615384615   -0.3076923077    0.3846153846    0.0009103323
   39   -0.4615384615   -0.3076923077    0.4615384615    0.0009103323
   40   -0.4615384615   -0.2307692308   -0.4615384615    0.0009103323
   41   -0.4615384615   -0.2307692308   -0.3846153846    0.0009103323
   42   -0.4615384615   -0.2307692308   -0.3076923077    0.0009103323
   43   -0.4615384615   -0.2307692308   -0.2307692308    0.0009103323
   44   -0.4615384615   -0.2307692308   -0.1538461538    0.0009103323
   45   -0.4615384615   -0.2307692308   -0.0769230769    0.0009103323
   46   -0.4615384615   -0.2307692308    0.0000000000    0.0009103323
   47   -0.4615384615   -0.2307692308    0.0769230769    0.0009103323
   48   -0.4615384615   -0.2307692308    0.1538461538    0.0009103323
   49   -0.4615384615   -0.2307692308    0.2307692308    0.0009103323
   50   -0.4615384615   -0.2307692308    0.3076923077    0.0009103323
   51   -0.4615384615   -0.2307692308    0.3846153846    0.0009103323
   52   -0.4615384615   -0.2307692308    0.4615384615    0.0009103323
   53   -0.4615384615   -0.1538461538   -0.4615384615    0.0009103323
   54   -0.4615384615   -0.1538461538   -0.3846153846    0.0009103323
   55   -0.4615384615   -0.1538461538   -0.3076923077    0.0009103323
   56   -0.4615384615   -0.1538461538   -0.2307692308    0.0009103323
   57   -0.4615384615   -0.1538461538   -0.1538461538    0.0009103323
   58   -0.4615384615   -0.1538461538   -0.0769230769    0.0009103323
   59   -0.4615384615   -0.1538461538    0.0000000000    0.0009103323
   60   -0.4615384615   -0.1538461538    0.0769230769    0.0009103323
   61   -0.4615384615   -0.1538461538    0.1538461538    0.0009103323
   62   -0.4615384615   -0.1538461538    0.2307692308    0.0009103323
   63   -0.4615384615   -0.1538461538    0.3076923077    0.0009103323
   64   -0.4615384615   -0.1538461538    0.3846153846    0.0009103323
   65   -0.4615384615   -0.1538461538    0.4615384615    0.0009103323
   66   -0.4615384615   -0.0769230769   -0.4615384615    0.0009103323
   67   -0.4615384615   -0.0769230769   -0.3846153846    0.0009103323
   68   -0.4615384615   -0.0769230769   -0.3076923077    0.0009103323
   69   -0.4615384615   -0.0769230769   -0.2307692308    0.0009103323
   70   -0.4615384615   -0.0769230769   -0.1538461538    0.0009103323
   71   -0.4615384615   -0.0769230769   -0.0769230769    0.0009103323
   72   -0.4615384615   -0.0769230769    0.0000000000    0.0009103323
   73   -0.4615384615   -0.0769230769    0.0769230769    0.0009103323
   74   -0.4615384615   -0.0769230769    0.1538461538    0.0009103323
   75   -0.4615384615   -0.0769230769    0.2307692308    0.0009103323
   76   -0.4615384615   -0.0769230769    0.3076923077    0.0009103323
   77   -0.4615384615   -0.0769230769    0.3846153846    0.0009103323
   78   -0.4615384615   -0.0769230769    0.4615384615    0.0009103323
   79   -0.4615384615    0.0000000000   -0.4615384615    0.0009103323
   80   -0.4615384615    0.0000000000   -0.3846153846    0.0009103323
   81   -0.4615384615    0.0000000000   -0.3076923077    0.0009103323
   82   -0.4615384615    0.0000000000   -0.2307692308    0.0009103323
   83   -0.4615384615    0.0000000000   -0.1538461538    0.0009103323
   84   -0.4615384615    0.0000000000   -0.0769230769    0.0009103323
   85   -0.4615384615    0.0000000000    0.0000000000    0.0009103323
   86   -0.4615384615    0.0000000000    0.0769230769    0.0009103323
   87   -0.4615384615    0.0000000000    0.1538461538    0.0009103323
   88   -0.4615384615    0.0000000000    0.2307692308    0.0009103323
   89   -0.4615384615    0.0000000000    0.3076923077    0.0009103323
   90   -0.4615384615    0.0000000000    0.3846153846    0.0009103323
   91   -0.4615384615    0.0000000000    0.4615384615    0.0009103323
   92   -0.4615384615    0.0769230769   -0.4615384615    0.0009103323
   93   -0.4615384615    0.0769230769   -0.3846153846    0.0009103323
   94   -0.4615384615    0.0769230769   -0.3076923077    0.0009103323
   95   -0.4615384615    0.0769230769   -0.2307692308    0.0009103323
   96   -0.4615384615    0.0769230769   -0.1538461538    0.0009103323
   97   -0.4615384615    0.0769230769   -0.0769230769    0.0009103323
   98   -0.4615384615    0.0769230769    0.0000000000    0.0009103323
   99   -0.4615384615    0.0769230769    0.0769230769    0.0009103323
  100   -0.4615384615    0.0769230769    0.1538461538    0.0009103323
  101   -0.4615384615    0.0769230769    0.2307692308    0.0009103323
  102   -0.4615384615    0.0769230769    0.3076923077    0.0009103323
  103   -0.4615384615    0.0769230769    0.3846153846    0.0009103323
  104   -0.4615384615    0.0769230769    0.4615384615    0.0009103323
  105   -0.4615384615    0.1538461538   -0.4615384615    0.0009103323
  106   -0.4615384615    0.1538461538   -0.3846153846    0.0009103323
  107   -0.4615384615    0.1538461538   -0.3076923077    0.0009103323
  108   -0.4615384615    0.1538461538   -0.2307692308    0.0009103323
  109   -0.4615384615    0.1538461538   -0.1538461538    0.0009103323
  110   -0.4615384615    0.1538461538   -0.0769230769    0.0009103323
  111   -0.4615384615    0.1538461538    0.0000000000    0.0009103323
  112   -0.4615384615    0.1538461538    0.0769230769    0.0009103323
  113   -0.4615384615    0.1538461538    0.1538461538    0.0009103323
  114   -0.4615384615    0.1538461538    0.2307692308    0.0009103323
  115   -0.4615384615    0.1538461538    0.3076923077    0.0009103323
  116   -0.4615384615    0.1538461538    0.3846153846    0.0009103323
  117   -0.4615384615    0.1538461538    0.4615384615    0.0009103323
  118   -0.4615384615    0.2307692308   -0.4615384615    0.0009103323
  119   -0.4615384615    0.2307692308   -0.3846153846    0.0009103323
  120   -0.4615384615    0.2307692308   -0.3076923077    0.0009103323
  121   -0.4615384615    0.2307692308   -0.2307692308    0.0009103323
  122   -0.4615384615    0.2307692308   -0.1538461538    0.0009103323
  123   -0.4615384615    0.2307692308   -0.0769230769    0.0009103323
  124   -0.4615384615    0.2307692308    0.0000000000    0.0009103323
  125   -0.4615384615    0.2307692308    0.0769230769    0.0009103323
  126   -0.4615384615    0.2307692308    0.1538461538    0.0009103323
  127   -0.4615384615    0.2307692308    0.2307692308    0.0009103323
  128   -0.4615384615    0.2307692308    0.3076923077    0.0009103323
  129   -0.4615384615    0.2307692308    0.3846153846    0.0009103323
  130   -0.4615384615    0.2307692308    0.4615384615    0.0009103323
  131   -0.4615384615    0.3076923077   -0.4615384615    0.0009103323
  132   -0.4615384615    0.3076923077   -0.3846153846    0.0009103323
  133   -0.4615384615    0.3076923077   -0.3076923077    0.0009103323
  134   -0.4615384615    0.3076923077   -0.2307692308    0.0009103323
  135   -0.4615384615    0.3076923077   -0.1538461538    0.0009103323
  136   -0.4615384615    0.3076923077   -0.0769230769    0.0009103323
  137   -0.4615384615    0.3076923077    0.0000000000    0.0009103323
  138   -0.4615384615    0.3076923077    0.0769230769    0.0009103323
  139   -0.4615384615    0.3076923077    0.1538461538    0.0009103323
  140   -0.4615384615    0.3076923077    0.2307692308    0.0009103323
  141   -0.4615384615    0.3076923077    0.3076923077    0.0009103323
  142   -0.4615384615    0.3076923077    0.3846153846    0.0009103323
  143   -0.4615384615    0.3076923077    0.4615384615    0.0009103323
  144   -0.4615384615    0.3846153846   -0.4615384615    0.0009103323
  145   -0.4615384615    0.3846153846   -0.3846153846    0.0009103323
  146   -0.4615384615    0.3846153846   -0.3076923077    0.0009103323
  147   -0.4615384615    0.3846153846   -0.2307692308    0.0009103323
  148   -0.4615384615    0.3846153846   -0.1538461538    0.0009103323
  149   -0.4615384615    0.3846153846   -0.0769230769    0.0009103323
  150   -0.4615384615    0.3846153846    0.0000000000    0.0009103323
  151   -0.4615384615    0.3846153846    0.0769230769    0.0009103323
  152   -0.4615384615    0.3846153846    0.1538461538    0.0009103323
  153   -0.4615384615    0.3846153846    0.2307692308    0.0009103323
  154   -0.4615384615    0.3846153846    0.3076923077    0.0009103323
  155   -0.4615384615    0.3846153846    0.3846153846    0.0009103323
  156   -0.4615384615    0.3846153846    0.4615384615    0.0009103323
  157   -0.4615384615    0.4615384615   -0.4615384615    0.0009103323
  158   -0.4615384615    0.4615384615   -0.3846153846    0.0009103323
  159   -0.4615384615    0.4615384615   -0.3076923077    0.0009103323
  160   -0.4615384615    0.4615384615   -0.2307692308    0.0009103323
  161   -0.4615384615    0.4615384615   -0.1538461538    0.0009103323
  162   -0.4615384615    0.4615384615   -0.0769230769    0.0009103323
  163   -0.4615384615    0.4615384615    0.0000000000    0.0009103323
  164   -0.4615384615    0.4615384615    0.0769230769    0.0009103323
  165   -0.4615384615    0.4615384615    0.1538461538    0.0009103323
  166   -0.4615384615    0.4615384615    0.2307692308    0.0009103323
  167   -0.4615384615    0.4615384615    0.3076923077    0.0009103323
  168   -0.4615384615    0.4615384615    0.3846153846    0.0009103323
  169   -0.4615384615    0.4615384615    0.4615384615    0.0009103323
  170   -0.3846153846   -0.4615384615   -0.4615384615    0.0009103323
  171   -0.3846153846   -0.4615384615   -0.3846153846    0.0009103323
  172   -0.3846153846   -0.4615384615   -0.3076923077    0.0009103323
  173   -0.3846153846   -0.4615384615   -0.2307692308    0.0009103323
  174   -0.3846153846   -0.4615384615   -0.1538461538    0.0009103323
  175   -0.3846153846   -0.4615384615   -0.0769230769    0.0009103323
  176   -0.3846153846   -0.4615384615    0.0000000000    0.0009103323
  177   -0.3846153846   -0.4615384615    0.0769230769    0.0009103323
  178   -0.3846153846   -0.4615384615    0.1538461538    0.0009103323
  179   -0.3846153846   -0.4615384615    0.2307692308    0.0009103323
  180   -0.3846153846   -0.4615384615    0.3076923077    0.0009103323
  181   -0.3846153846   -0.4615384615    0.3846153846    0.0009103323
  182   -0.3846153846   -0.4615384615    0.4615384615    0.0009103323
  183   -0.3846153846   -0.3846153846   -0.4615384615    0.0009103323
  184   -0.3846153846   -0.3846153846   -0.3846153846    0.0009103323
  185   -0.3846153846   -0.3846153846   -0.3076923077    0.0009103323
  186   -0.3846153846   -0.3846153846   -0.2307692308    0.0009103323
  187   -0.3846153846   -0.3846153846   -0.1538461538    0.0009103323
  188   -0.3846153846   -0.3846153846   -0.0769230769    0.0009103323
  189   -0.3846153846   -0.3846153846    0.0000000000    0.0009103323
  190   -0.3846153846   -0.3846153846    0.0769230769    0.0009103323
  191   -0.3846153846   -0.3846153846    0.1538461538    0.0009103323
  192   -0.3846153846   -0.3846153846    0.2307692308    0.0009103323
  193   -0.3846153846   -0.3846153846    0.3076923077    0.0009103323
  194   -0.3846153846   -0.3846153846    0.3846153846    0.0009103323
  195   -0.3846153846   -0.3846153846    0.4615384615    0.0009103323
  196   -0.3846153846   -0.3076923077   -0.4615384615    0.0009103323
  197   -0.3846153846   -0.3076923077   -0.3846153846    0.0009103323
  198   -0.3846153846   -0.3076923077   -0.3076923077    0.0009103323
  199   -0.3846153846   -0.3076923077   -0.2307692308    0.0009103323
  200   -0.3846153846   -0.3076923077   -0.1538461538    0.0009103323
  201   -0.3846153846   -0.3076923077   -0.0769230769    0.0009103323
  202   -0.3846153846   -0.3076923077    0.0000000000    0.0009103323
  203   -0.3846153846   -0.3076923077    0.0769230769    0.0009103323
  204   -0.3846153846   -0.3076923077    0.1538461538    0.0009103323
  205   -0.3846153846   -0.3076923077    0.2307692308    0.0009103323
  206   -0.3846153846   -0.3076923077    0.3076923077    0.0009103323
  207   -0.3846153846   -0.3076923077    0.3846153846    0.0009103323
  208   -0.3846153846   -0.3076923077    0.4615384615    0.0009103323
  209   -0.3846153846   -0.2307692308   -0.4615384615    0.0009103323
  210   -0.3846153846   -0.2307692308   -0.3846153846    0.0009103323
  211   -0.3846153846   -0.2307692308   -0.3076923077    0.0009103323
  212   -0.3846153846   -0.2307692308   -0.2307692308    0.0009103323
  213   -0.3846153846   -0.2307692308   -0.1538461538    0.0009103323
  214   -0.3846153846   -0.2307692308   -0.0769230769    0.0009103323
  215   -0.3846153846   -0.2307692308    0.0000000000    0.0009103323
  216   -0.3846153846   -0.2307692308    0.0769230769    0.0009103323
  217   -0.3846153846   -0.2307692308    0.1538461538    0.0009103323
  218   -0.3846153846   -0.2307692308    0.2307692308    0.0009103323
  219   -0.3846153846   -0.2307692308    0.3076923077    0.0009103323
  220   -0.3846153846   -0.2307692308    0.3846153846    0.0009103323
  221   -0.3846153846   -0.2307692308    0.4615384615    0.0009103323
  222   -0.3846153846   -0.1538461538   -0.4615384615    0.0009103323
  223   -0.3846153846   -0.1538461538   -0.3846153846    0.0009103323
  224   -0.3846153846   -0.1538461538   -0.3076923077    0.0009103323
  225   -0.3846153846   -0.1538461538   -0.2307692308    0.0009103323
  226   -0.3846153846   -0.1538461538   -0.1538461538    0.0009103323
  227   -0.3846153846   -0.1538461538   -0.0769230769    0.0009103323
  228   -0.3846153846   -0.1538461538    0.0000000000    0.0009103323
  229   -0.3846153846   -0.1538461538    0.0769230769    0.0009103323
  230   -0.3846153846   -0.1538461538    0.1538461538    0.0009103323
  231   -0.3846153846   -0.1538461538    0.2307692308    0.0009103323
  232   -0.3846153846   -0.1538461538    0.3076923077    0.0009103323
  233   -0.3846153846   -0.1538461538    0.3846153846    0.0009103323
  234   -0.3846153846   -0.1538461538    0.4615384615    0.0009103323
  235   -0.3846153846   -0.0769230769   -0.4615384615    0.0009103323
  236   -0.3846153846   -0.0769230769   -0.3846153846    0.0009103323
  237   -0.3846153846   -0.0769230769   -0.3076923077    0.0009103323
  238   -0.3846153846   -0.0769230769   -0.2307692308    0.0009103323
  239   -0.3846153846   -0.0769230769   -0.1538461538    0.0009103323
  240   -0.3846153846   -0.0769230769   -0.0769230769    0.0009103323
  241   -0.3846153846   -0.0769230769    0.0000000000    0.0009103323
  242   -0.3846153846   -0.0769230769    0.0769230769    0.0009103323
  243   -0.3846153846   -0.0769230769    0.1538461538    0.0009103323
  244   -0.3846153846   -0.0769230769    0.2307692308    0.0009103323
  245   -0.3846153846   -0.0769230769    0.3076923077    0.0009103323
  246   -0.3846153846   -0.0769230769    0.3846153846    0.0009103323
  247   -0.3846153846   -0.0769230769    0.4615384615    0.0009103323
  248   -0.3846153846    0.0000000000   -0.4615384615    0.0009103323
  249   -0.3846153846    0.0000000000   -0.3846153846    0.0009103323
  250   -0.3846153846    0.0000000000   -0.3076923077    0.0009103323
  251   -0.3846153846    0.0000000000   -0.2307692308    0.0009103323
  252   -0.3846153846    0.0000000000   -0.1538461538    0.0009103323
  253   -0.3846153846    0.0000000000   -0.0769230769    0.0009103323
  254   -0.3846153846    0.0000000000    0.0000000000    0.0009103323
  255   -0.3846153846    0.0000000000    0.0769230769    0.0009103323
  256   -0.3846153846    0.0000000000    0.1538461538    0.0009103323
  257   -0.3846153846    0.0000000000    0.2307692308    0.0009103323
  258   -0.3846153846    0.0000000000    0.3076923077    0.0009103323
  259   -0.3846153846    0.0000000000    0.3846153846    0.0009103323
  260   -0.3846153846    0.0000000000    0.4615384615    0.0009103323
  261   -0.3846153846    0.0769230769   -0.4615384615    0.0009103323
  262   -0.3846153846    0.0769230769   -0.3846153846    0.0009103323
  263   -0.3846153846    0.0769230769   -0.3076923077    0.0009103323
  264   -0.3846153846    0.0769230769   -0.2307692308    0.0009103323
  265   -0.3846153846    0.0769230769   -0.1538461538    0.0009103323
  266   -0.3846153846    0.0769230769   -0.0769230769    0.0009103323
  267   -0.3846153846    0.0769230769    0.0000000000    0.0009103323
  268   -0.3846153846    0.0769230769    0.0769230769    0.0009103323
  269   -0.3846153846    0.0769230769    0.1538461538    0.0009103323
  270   -0.3846153846    0.0769230769    0.2307692308    0.0009103323
  271   -0.3846153846    0.0769230769    0.3076923077    0.0009103323
  272   -0.3846153846    0.0769230769    0.3846153846    0.0009103323
  273   -0.3846153846    0.0769230769    0.4615384615    0.0009103323
  274   -0.3846153846    0.1538461538   -0.4615384615    0.0009103323
  275   -0.3846153846    0.1538461538   -0.3846153846    0.0009103323
  276   -0.3846153846    0.1538461538   -0.3076923077    0.0009103323
  277   -0.3846153846    0.1538461538   -0.2307692308    0.0009103323
  278   -0.3846153846    0.1538461538   -0.1538461538    0.0009103323
  279   -0.3846153846    0.1538461538   -0.0769230769    0.0009103323
  280   -0.3846153846    0.1538461538    0.0000000000    0.0009103323
  281   -0.3846153846    0.1538461538    0.0769230769    0.0009103323
  282   -0.3846153846    0.1538461538    0.1538461538    0.0009103323
  283   -0.3846153846    0.1538461538    0.2307692308    0.0009103323
  284   -0.3846153846    0.1538461538    0.3076923077    0.0009103323
  285   -0.3846153846    0.1538461538    0.3846153846    0.0009103323
  286   -0.3846153846    0.1538461538    0.4615384615    0.0009103323
  287   -0.3846153846    0.2307692308   -0.4615384615    0.0009103323
  288   -0.3846153846    0.2307692308   -0.3846153846    0.0009103323
  289   -0.3846153846    0.2307692308   -0.3076923077    0.0009103323
  290   -0.3846153846    0.2307692308   -0.2307692308    0.0009103323
  291   -0.3846153846    0.2307692308   -0.1538461538    0.0009103323
  292   -0.3846153846    0.2307692308   -0.0769230769    0.0009103323
  293   -0.3846153846    0.2307692308    0.0000000000    0.0009103323
  294   -0.3846153846    0.2307692308    0.0769230769    0.0009103323
  295   -0.3846153846    0.2307692308    0.1538461538    0.0009103323
  296   -0.3846153846    0.2307692308    0.2307692308    0.0009103323
  297   -0.3846153846    0.2307692308    0.3076923077    0.0009103323
  298   -0.3846153846    0.2307692308    0.3846153846    0.0009103323
  299   -0.3846153846    0.2307692308    0.4615384615    0.0009103323
  300   -0.3846153846    0.3076923077   -0.4615384615    0.0009103323
  301   -0.3846153846    0.3076923077   -0.3846153846    0.0009103323
  302   -0.3846153846    0.3076923077   -0.3076923077    0.0009103323
  303   -0.3846153846    0.3076923077   -0.2307692308    0.0009103323
  304   -0.3846153846    0.3076923077   -0.1538461538    0.0009103323
  305   -0.3846153846    0.3076923077   -0.0769230769    0.0009103323
  306   -0.3846153846    0.3076923077    0.0000000000    0.0009103323
  307   -0.3846153846    0.3076923077    0.0769230769    0.0009103323
  308   -0.3846153846    0.3076923077    0.1538461538    0.0009103323
  309   -0.3846153846    0.3076923077    0.2307692308    0.0009103323
  310   -0.3846153846    0.3076923077    0.3076923077    0.0009103323
  311   -0.3846153846    0.3076923077    0.3846153846    0.0009103323
  312   -0.3846153846    0.3076923077    0.4615384615    0.0009103323
  313   -0.3846153846    0.3846153846   -0.4615384615    0.0009103323
  314   -0.3846153846    0.3846153846   -0.3846153846    0.0009103323
  315   -0.3846153846    0.3846153846   -0.3076923077    0.0009103323
  316   -0.3846153846    0.3846153846   -0.2307692308    0.0009103323
  317   -0.3846153846    0.3846153846   -0.1538461538    0.0009103323
  318   -0.3846153846    0.3846153846   -0.0769230769    0.0009103323
  319   -0.3846153846    0.3846153846    0.0000000000    0.0009103323
  320   -0.3846153846    0.3846153846    0.0769230769    0.0009103323
  321   -0.3846153846    0.3846153846    0.1538461538    0.0009103323
  322   -0.3846153846    0.3846153846    0.2307692308    0.0009103323
  323   -0.3846153846    0.3846153846    0.3076923077    0.0009103323
  324   -0.3846153846    0.3846153846    0.3846153846    0.0009103323
  325   -0.3846153846    0.3846153846    0.4615384615    0.0009103323
  326   -0.3846153846    0.4615384615   -0.4615384615    0.0009103323
  327   -0.3846153846    0.4615384615   -0.3846153846    0.0009103323
  328   -0.3846153846    0.4615384615   -0.3076923077    0.0009103323
  329   -0.3846153846    0.4615384615   -0.2307692308    0.0009103323
  330   -0.3846153846    0.4615384615   -0.1538461538    0.0009103323
  331   -0.3846153846    0.4615384615   -0.0769230769    0.0009103323
  332   -0.3846153846    0.4615384615    0.0000000000    0.0009103323
  333   -0.3846153846    0.4615384615    0.0769230769    0.0009103323
  334   -0.3846153846    0.4615384615    0.1538461538    0.0009103323
  335   -0.3846153846    0.4615384615    0.2307692308    0.0009103323
  336   -0.3846153846    0.4615384615    0.3076923077    0.0009103323
  337   -0.3846153846    0.4615384615    0.3846153846    0.0009103323
  338   -0.3846153846    0.4615384615    0.4615384615    0.0009103323
  339   -0.3076923077   -0.4615384615   -0.4615384615    0.0009103323
  340   -0.3076923077   -0.4615384615   -0.3846153846    0.0009103323
  341   -0.3076923077   -0.4615384615   -0.3076923077    0.0009103323
  342   -0.3076923077   -0.4615384615   -0.2307692308    0.0009103323
  343   -0.3076923077   -0.4615384615   -0.1538461538    0.0009103323
  344   -0.3076923077   -0.4615384615   -0.0769230769    0.0009103323
  345   -0.3076923077   -0.4615384615    0.0000000000    0.0009103323
  346   -0.3076923077   -0.4615384615    0.0769230769    0.0009103323
  347   -0.3076923077   -0.4615384615    0.1538461538    0.0009103323
  348   -0.3076923077   -0.4615384615    0.2307692308    0.0009103323
  349   -0.3076923077   -0.4615384615    0.3076923077    0.0009103323
  350   -0.3076923077   -0.4615384615    0.3846153846    0.0009103323
  351   -0.3076923077   -0.4615384615    0.4615384615    0.0009103323
  352   -0.3076923077   -0.3846153846   -0.4615384615    0.0009103323
  353   -0.3076923077   -0.3846153846   -0.3846153846    0.0009103323
  354   -0.3076923077   -0.3846153846   -0.3076923077    0.0009103323
  355   -0.3076923077   -0.3846153846   -0.2307692308    0.0009103323
  356   -0.3076923077   -0.3846153846   -0.1538461538    0.0009103323
  357   -0.3076923077   -0.3846153846   -0.0769230769    0.0009103323
  358   -0.3076923077   -0.3846153846    0.0000000000    0.0009103323
  359   -0.3076923077   -0.3846153846    0.0769230769    0.0009103323
  360   -0.3076923077   -0.3846153846    0.1538461538    0.0009103323
  361   -0.3076923077   -0.3846153846    0.2307692308    0.0009103323
  362   -0.3076923077   -0.3846153846    0.3076923077    0.0009103323
  363   -0.3076923077   -0.3846153846    0.3846153846    0.0009103323
  364   -0.3076923077   -0.3846153846    0.4615384615    0.0009103323
  365   -0.3076923077   -0.3076923077   -0.4615384615    0.0009103323
  366   -0.3076923077   -0.3076923077   -0.3846153846    0.0009103323
  367   -0.3076923077   -0.3076923077   -0.3076923077    0.0009103323
  368   -0.3076923077   -0.3076923077   -0.2307692308    0.0009103323
  369   -0.3076923077   -0.3076923077   -0.1538461538    0.0009103323
  370   -0.3076923077   -0.3076923077   -0.0769230769    0.0009103323
  371   -0.3076923077   -0.3076923077    0.0000000000    0.0009103323
  372   -0.3076923077   -0.3076923077    0.0769230769    0.0009103323
  373   -0.3076923077   -0.3076923077    0.1538461538    0.0009103323
  374   -0.3076923077   -0.3076923077    0.2307692308    0.0009103323
  375   -0.3076923077   -0.3076923077    0.3076923077    0.0009103323
  376   -0.3076923077   -0.3076923077    0.3846153846    0.0009103323
  377   -0.3076923077   -0.3076923077    0.4615384615    0.0009103323
  378   -0.3076923077   -0.2307692308   -0.4615384615    0.0009103323
  379   -0.3076923077   -0.2307692308   -0.3846153846    0.0009103323
  380   -0.3076923077   -0.2307692308   -0.3076923077    0.0009103323
  381   -0.3076923077   -0.2307692308   -0.2307692308    0.0009103323
  382   -0.3076923077   -0.2307692308   -0.1538461538    0.0009103323
  383   -0.3076923077   -0.2307692308   -0.0769230769    0.0009103323
  384   -0.3076923077   -0.2307692308    0.0000000000    0.0009103323
  385   -0.3076923077   -0.2307692308    0.0769230769    0.0009103323
  386   -0.3076923077   -0.2307692308    0.1538461538    0.0009103323
  387   -0.3076923077   -0.2307692308    0.2307692308    0.0009103323
  388   -0.3076923077   -0.2307692308    0.3076923077    0.0009103323
  389   -0.3076923077   -0.2307692308    0.3846153846    0.0009103323
  390   -0.3076923077   -0.2307692308    0.4615384615    0.0009103323
  391   -0.3076923077   -0.1538461538   -0.4615384615    0.0009103323
  392   -0.3076923077   -0.1538461538   -0.3846153846    0.0009103323
  393   -0.3076923077   -0.1538461538   -0.3076923077    0.0009103323
  394   -0.3076923077   -0.1538461538   -0.2307692308    0.0009103323
  395   -0.3076923077   -0.1538461538   -0.1538461538    0.0009103323
  396   -0.3076923077   -0.1538461538   -0.0769230769    0.0009103323
  397   -0.3076923077   -0.1538461538    0.0000000000    0.0009103323
  398   -0.3076923077   -0.1538461538    0.0769230769    0.0009103323
  399   -0.3076923077   -0.1538461538    0.1538461538    0.0009103323
  400   -0.3076923077   -0.1538461538    0.2307692308    0.0009103323
  401   -0.3076923077   -0.1538461538    0.3076923077    0.0009103323
  402   -0.3076923077   -0.1538461538    0.3846153846    0.0009103323
  403   -0.3076923077   -0.1538461538    0.4615384615    0.0009103323
  404   -0.3076923077   -0.0769230769   -0.4615384615    0.0009103323
  405   -0.3076923077   -0.0769230769   -0.3846153846    0.0009103323
  406   -0.3076923077   -0.0769230769   -0.3076923077    0.0009103323
  407   -0.3076923077   -0.0769230769   -0.2307692308    0.0009103323
  408   -0.3076923077   -0.0769230769   -0.1538461538    0.0009103323
  409   -0.3076923077   -0.0769230769   -0.0769230769    0.0009103323
  410   -0.3076923077   -0.0769230769    0.0000000000    0.0009103323
  411   -0.3076923077   -0.0769230769    0.0769230769    0.0009103323
  412   -0.3076923077   -0.0769230769    0.1538461538    0.0009103323
  413   -0.3076923077   -0.0769230769    0.2307692308    0.0009103323
  414   -0.3076923077   -0.0769230769    0.3076923077    0.0009103323
  415   -0.3076923077   -0.0769230769    0.3846153846    0.0009103323
  416   -0.3076923077   -0.0769230769    0.4615384615    0.0009103323
  417   -0.3076923077    0.0000000000   -0.4615384615    0.0009103323
  418   -0.3076923077    0.0000000000   -0.3846153846    0.0009103323
  419   -0.3076923077    0.0000000000   -0.3076923077    0.0009103323
  420   -0.3076923077    0.0000000000   -0.2307692308    0.0009103323
  421   -0.3076923077    0.0000000000   -0.1538461538    0.0009103323
  422   -0.3076923077    0.0000000000   -0.0769230769    0.0009103323
  423   -0.3076923077    0.0000000000    0.0000000000    0.0009103323
  424   -0.3076923077    0.0000000000    0.0769230769    0.0009103323
  425   -0.3076923077    0.0000000000    0.1538461538    0.0009103323
  426   -0.3076923077    0.0000000000    0.2307692308    0.0009103323
  427   -0.3076923077    0.0000000000    0.3076923077    0.0009103323
  428   -0.3076923077    0.0000000000    0.3846153846    0.0009103323
  429   -0.3076923077    0.0000000000    0.4615384615    0.0009103323
  430   -0.3076923077    0.0769230769   -0.4615384615    0.0009103323
  431   -0.3076923077    0.0769230769   -0.3846153846    0.0009103323
  432   -0.3076923077    0.0769230769   -0.3076923077    0.0009103323
  433   -0.3076923077    0.0769230769   -0.2307692308    0.0009103323
  434   -0.3076923077    0.0769230769   -0.1538461538    0.0009103323
  435   -0.3076923077    0.0769230769   -0.0769230769    0.0009103323
  436   -0.3076923077    0.0769230769    0.0000000000    0.0009103323
  437   -0.3076923077    0.0769230769    0.0769230769    0.0009103323
  438   -0.3076923077    0.0769230769    0.1538461538    0.0009103323
  439   -0.3076923077    0.0769230769    0.2307692308    0.0009103323
  440   -0.3076923077    0.0769230769    0.3076923077    0.0009103323
  441   -0.3076923077    0.0769230769    0.3846153846    0.0009103323
  442   -0.3076923077    0.0769230769    0.4615384615    0.0009103323
  443   -0.3076923077    0.1538461538   -0.4615384615    0.0009103323
  444   -0.3076923077    0.1538461538   -0.3846153846    0.0009103323
  445   -0.3076923077    0.1538461538   -0.3076923077    0.0009103323
  446   -0.3076923077    0.1538461538   -0.2307692308    0.0009103323
  447   -0.3076923077    0.1538461538   -0.1538461538    0.0009103323
  448   -0.3076923077    0.1538461538   -0.0769230769    0.0009103323
  449   -0.3076923077    0.1538461538    0.0000000000    0.0009103323
  450   -0.3076923077    0.1538461538    0.0769230769    0.0009103323
  451   -0.3076923077    0.1538461538    0.1538461538    0.0009103323
  452   -0.3076923077    0.1538461538    0.2307692308    0.0009103323
  453   -0.3076923077    0.1538461538    0.3076923077    0.0009103323
  454   -0.3076923077    0.1538461538    0.3846153846    0.0009103323
  455   -0.3076923077    0.1538461538    0.4615384615    0.0009103323
  456   -0.3076923077    0.2307692308   -0.4615384615    0.0009103323
  457   -0.3076923077    0.2307692308   -0.3846153846    0.0009103323
  458   -0.3076923077    0.2307692308   -0.3076923077    0.0009103323
  459   -0.3076923077    0.2307692308   -0.2307692308    0.0009103323
  460   -0.3076923077    0.2307692308   -0.1538461538    0.0009103323
  461   -0.3076923077    0.2307692308   -0.0769230769    0.0009103323
  462   -0.3076923077    0.2307692308    0.0000000000    0.0009103323
  463   -0.3076923077    0.2307692308    0.0769230769    0.0009103323
  464   -0.3076923077    0.2307692308    0.1538461538    0.0009103323
  465   -0.3076923077    0.2307692308    0.2307692308    0.0009103323
  466   -0.3076923077    0.2307692308    0.3076923077    0.0009103323
  467   -0.3076923077    0.2307692308    0.3846153846    0.0009103323
  468   -0.3076923077    0.2307692308    0.4615384615    0.0009103323
  469   -0.3076923077    0.3076923077   -0.4615384615    0.0009103323
  470   -0.3076923077    0.3076923077   -0.3846153846    0.0009103323
  471   -0.3076923077    0.3076923077   -0.3076923077    0.0009103323
  472   -0.3076923077    0.3076923077   -0.2307692308    0.0009103323
  473   -0.3076923077    0.3076923077   -0.1538461538    0.0009103323
  474   -0.3076923077    0.3076923077   -0.0769230769    0.0009103323
  475   -0.3076923077    0.3076923077    0.0000000000    0.0009103323
  476   -0.3076923077    0.3076923077    0.0769230769    0.0009103323
  477   -0.3076923077    0.3076923077    0.1538461538    0.0009103323
  478   -0.3076923077    0.3076923077    0.2307692308    0.0009103323
  479   -0.3076923077    0.3076923077    0.3076923077    0.0009103323
  480   -0.3076923077    0.3076923077    0.3846153846    0.0009103323
  481   -0.3076923077    0.3076923077    0.4615384615    0.0009103323
  482   -0.3076923077    0.3846153846   -0.4615384615    0.0009103323
  483   -0.3076923077    0.3846153846   -0.3846153846    0.0009103323
  484   -0.3076923077    0.3846153846   -0.3076923077    0.0009103323
  485   -0.3076923077    0.3846153846   -0.2307692308    0.0009103323
  486   -0.3076923077    0.3846153846   -0.1538461538    0.0009103323
  487   -0.3076923077    0.3846153846   -0.0769230769    0.0009103323
  488   -0.3076923077    0.3846153846    0.0000000000    0.0009103323
  489   -0.3076923077    0.3846153846    0.0769230769    0.0009103323
  490   -0.3076923077    0.3846153846    0.1538461538    0.0009103323
  491   -0.3076923077    0.3846153846    0.2307692308    0.0009103323
  492   -0.3076923077    0.3846153846    0.3076923077    0.0009103323
  493   -0.3076923077    0.3846153846    0.3846153846    0.0009103323
  494   -0.3076923077    0.3846153846    0.4615384615    0.0009103323
  495   -0.3076923077    0.4615384615   -0.4615384615    0.0009103323
  496   -0.3076923077    0.4615384615   -0.3846153846    0.0009103323
  497   -0.3076923077    0.4615384615   -0.3076923077    0.0009103323
  498   -0.3076923077    0.4615384615   -0.2307692308    0.0009103323
  499   -0.3076923077    0.4615384615   -0.1538461538    0.0009103323
  500   -0.3076923077    0.4615384615   -0.0769230769    0.0009103323
  501   -0.3076923077    0.4615384615    0.0000000000    0.0009103323
  502   -0.3076923077    0.4615384615    0.0769230769    0.0009103323
  503   -0.3076923077    0.4615384615    0.1538461538    0.0009103323
  504   -0.3076923077    0.4615384615    0.2307692308    0.0009103323
  505   -0.3076923077    0.4615384615    0.3076923077    0.0009103323
  506   -0.3076923077    0.4615384615    0.3846153846    0.0009103323
  507   -0.3076923077    0.4615384615    0.4615384615    0.0009103323
  508   -0.2307692308   -0.4615384615   -0.4615384615    0.0009103323
  509   -0.2307692308   -0.4615384615   -0.3846153846    0.0009103323
  510   -0.2307692308   -0.4615384615   -0.3076923077    0.0009103323
  511   -0.2307692308   -0.4615384615   -0.2307692308    0.0009103323
  512   -0.2307692308   -0.4615384615   -0.1538461538    0.0009103323
  513   -0.2307692308   -0.4615384615   -0.0769230769    0.0009103323
  514   -0.2307692308   -0.4615384615    0.0000000000    0.0009103323
  515   -0.2307692308   -0.4615384615    0.0769230769    0.0009103323
  516   -0.2307692308   -0.4615384615    0.1538461538    0.0009103323
  517   -0.2307692308   -0.4615384615    0.2307692308    0.0009103323
  518   -0.2307692308   -0.4615384615    0.3076923077    0.0009103323
  519   -0.2307692308   -0.4615384615    0.3846153846    0.0009103323
  520   -0.2307692308   -0.4615384615    0.4615384615    0.0009103323
  521   -0.2307692308   -0.3846153846   -0.4615384615    0.0009103323
  522   -0.2307692308   -0.3846153846   -0.3846153846    0.0009103323
  523   -0.2307692308   -0.3846153846   -0.3076923077    0.0009103323
  524   -0.2307692308   -0.3846153846   -0.2307692308    0.0009103323
  525   -0.2307692308   -0.3846153846   -0.1538461538    0.0009103323
  526   -0.2307692308   -0.3846153846   -0.0769230769    0.0009103323
  527   -0.2307692308   -0.3846153846    0.0000000000    0.0009103323
  528   -0.2307692308   -0.3846153846    0.0769230769    0.0009103323
  529   -0.2307692308   -0.3846153846    0.1538461538    0.0009103323
  530   -0.2307692308   -0.3846153846    0.2307692308    0.0009103323
  531   -0.2307692308   -0.3846153846    0.3076923077    0.0009103323
  532   -0.2307692308   -0.3846153846    0.3846153846    0.0009103323
  533   -0.2307692308   -0.3846153846    0.4615384615    0.0009103323
  534   -0.2307692308   -0.3076923077   -0.4615384615    0.0009103323
  535   -0.2307692308   -0.3076923077   -0.3846153846    0.0009103323
  536   -0.2307692308   -0.3076923077   -0.3076923077    0.0009103323
  537   -0.2307692308   -0.3076923077   -0.2307692308    0.0009103323
  538   -0.2307692308   -0.3076923077   -0.1538461538    0.0009103323
  539   -0.2307692308   -0.3076923077   -0.0769230769    0.0009103323
  540   -0.2307692308   -0.3076923077    0.0000000000    0.0009103323
  541   -0.2307692308   -0.3076923077    0.0769230769    0.0009103323
  542   -0.2307692308   -0.3076923077    0.1538461538    0.0009103323
  543   -0.2307692308   -0.3076923077    0.2307692308    0.0009103323
  544   -0.2307692308   -0.3076923077    0.3076923077    0.0009103323
  545   -0.2307692308   -0.3076923077    0.3846153846    0.0009103323
  546   -0.2307692308   -0.3076923077    0.4615384615    0.0009103323
  547   -0.2307692308   -0.2307692308   -0.4615384615    0.0009103323
  548   -0.2307692308   -0.2307692308   -0.3846153846    0.0009103323
  549   -0.2307692308   -0.2307692308   -0.3076923077    0.0009103323
  550   -0.2307692308   -0.2307692308   -0.2307692308    0.0009103323
  551   -0.2307692308   -0.2307692308   -0.1538461538    0.0009103323
  552   -0.2307692308   -0.2307692308   -0.0769230769    0.0009103323
  553   -0.2307692308   -0.2307692308    0.0000000000    0.0009103323
  554   -0.2307692308   -0.2307692308    0.0769230769    0.0009103323
  555   -0.2307692308   -0.2307692308    0.1538461538    0.0009103323
  556   -0.2307692308   -0.2307692308    0.2307692308    0.0009103323
  557   -0.2307692308   -0.2307692308    0.3076923077    0.0009103323
  558   -0.2307692308   -0.2307692308    0.3846153846    0.0009103323
  559   -0.2307692308   -0.2307692308    0.4615384615    0.0009103323
  560   -0.2307692308   -0.1538461538   -0.4615384615    0.0009103323
  561   -0.2307692308   -0.1538461538   -0.3846153846    0.0009103323
  562   -0.2307692308   -0.1538461538   -0.3076923077    0.0009103323
  563   -0.2307692308   -0.1538461538   -0.2307692308    0.0009103323
  564   -0.2307692308   -0.1538461538   -0.1538461538    0.0009103323
  565   -0.2307692308   -0.1538461538   -0.0769230769    0.0009103323
  566   -0.2307692308   -0.1538461538    0.0000000000    0.0009103323
  567   -0.2307692308   -0.1538461538    0.0769230769    0.0009103323
  568   -0.2307692308   -0.1538461538    0.1538461538    0.0009103323
  569   -0.2307692308   -0.1538461538    0.2307692308    0.0009103323
  570   -0.2307692308   -0.1538461538    0.3076923077    0.0009103323
  571   -0.2307692308   -0.1538461538    0.3846153846    0.0009103323
  572   -0.2307692308   -0.1538461538    0.4615384615    0.0009103323
  573   -0.2307692308   -0.0769230769   -0.4615384615    0.0009103323
  574   -0.2307692308   -0.0769230769   -0.3846153846    0.0009103323
  575   -0.2307692308   -0.0769230769   -0.3076923077    0.0009103323
  576   -0.2307692308   -0.0769230769   -0.2307692308    0.0009103323
  577   -0.2307692308   -0.0769230769   -0.1538461538    0.0009103323
  578   -0.2307692308   -0.0769230769   -0.0769230769    0.0009103323
  579   -0.2307692308   -0.0769230769    0.0000000000    0.0009103323
  580   -0.2307692308   -0.0769230769    0.0769230769    0.0009103323
  581   -0.2307692308   -0.0769230769    0.1538461538    0.0009103323
  582   -0.2307692308   -0.0769230769    0.2307692308    0.0009103323
  583   -0.2307692308   -0.0769230769    0.3076923077    0.0009103323
  584   -0.2307692308   -0.0769230769    0.3846153846    0.0009103323
  585   -0.2307692308   -0.0769230769    0.4615384615    0.0009103323
  586   -0.2307692308    0.0000000000   -0.4615384615    0.0009103323
  587   -0.2307692308    0.0000000000   -0.3846153846    0.0009103323
  588   -0.2307692308    0.0000000000   -0.3076923077    0.0009103323
  589   -0.2307692308    0.0000000000   -0.2307692308    0.0009103323
  590   -0.2307692308    0.0000000000   -0.1538461538    0.0009103323
  591   -0.2307692308    0.0000000000   -0.0769230769    0.0009103323
  592   -0.2307692308    0.0000000000    0.0000000000    0.0009103323
  593   -0.2307692308    0.0000000000    0.0769230769    0.0009103323
  594   -0.2307692308    0.0000000000    0.1538461538    0.0009103323
  595   -0.2307692308    0.0000000000    0.2307692308    0.0009103323
  596   -0.2307692308    0.0000000000    0.3076923077    0.0009103323
  597   -0.2307692308    0.0000000000    0.3846153846    0.0009103323
  598   -0.2307692308    0.0000000000    0.4615384615    0.0009103323
  599   -0.2307692308    0.0769230769   -0.4615384615    0.0009103323
  600   -0.2307692308    0.0769230769   -0.3846153846    0.0009103323
  601   -0.2307692308    0.0769230769   -0.3076923077    0.0009103323
  602   -0.2307692308    0.0769230769   -0.2307692308    0.0009103323
  603   -0.2307692308    0.0769230769   -0.1538461538    0.0009103323
  604   -0.2307692308    0.0769230769   -0.0769230769    0.0009103323
  605   -0.2307692308    0.0769230769    0.0000000000    0.0009103323
  606   -0.2307692308    0.0769230769    0.0769230769    0.0009103323
  607   -0.2307692308    0.0769230769    0.1538461538    0.0009103323
  608   -0.2307692308    0.0769230769    0.2307692308    0.0009103323
  609   -0.2307692308    0.0769230769    0.3076923077    0.0009103323
  610   -0.2307692308    0.0769230769    0.3846153846    0.0009103323
  611   -0.2307692308    0.0769230769    0.4615384615    0.0009103323
  612   -0.2307692308    0.1538461538   -0.4615384615    0.0009103323
  613   -0.2307692308    0.1538461538   -0.3846153846    0.0009103323
  614   -0.2307692308    0.1538461538   -0.3076923077    0.0009103323
  615   -0.2307692308    0.1538461538   -0.2307692308    0.0009103323
  616   -0.2307692308    0.1538461538   -0.1538461538    0.0009103323
  617   -0.2307692308    0.1538461538   -0.0769230769    0.0009103323
  618   -0.2307692308    0.1538461538    0.0000000000    0.0009103323
  619   -0.2307692308    0.1538461538    0.0769230769    0.0009103323
  620   -0.2307692308    0.1538461538    0.1538461538    0.0009103323
  621   -0.2307692308    0.1538461538    0.2307692308    0.0009103323
  622   -0.2307692308    0.1538461538    0.3076923077    0.0009103323
  623   -0.2307692308    0.1538461538    0.3846153846    0.0009103323
  624   -0.2307692308    0.1538461538    0.4615384615    0.0009103323
  625   -0.2307692308    0.2307692308   -0.4615384615    0.0009103323
  626   -0.2307692308    0.2307692308   -0.3846153846    0.0009103323
  627   -0.2307692308    0.2307692308   -0.3076923077    0.0009103323
  628   -0.2307692308    0.2307692308   -0.2307692308    0.0009103323
  629   -0.2307692308    0.2307692308   -0.1538461538    0.0009103323
  630   -0.2307692308    0.2307692308   -0.0769230769    0.0009103323
  631   -0.2307692308    0.2307692308    0.0000000000    0.0009103323
  632   -0.2307692308    0.2307692308    0.0769230769    0.0009103323
  633   -0.2307692308    0.2307692308    0.1538461538    0.0009103323
  634   -0.2307692308    0.2307692308    0.2307692308    0.0009103323
  635   -0.2307692308    0.2307692308    0.3076923077    0.0009103323
  636   -0.2307692308    0.2307692308    0.3846153846    0.0009103323
  637   -0.2307692308    0.2307692308    0.4615384615    0.0009103323
  638   -0.2307692308    0.3076923077   -0.4615384615    0.0009103323
  639   -0.2307692308    0.3076923077   -0.3846153846    0.0009103323
  640   -0.2307692308    0.3076923077   -0.3076923077    0.0009103323
  641   -0.2307692308    0.3076923077   -0.2307692308    0.0009103323
  642   -0.2307692308    0.3076923077   -0.1538461538    0.0009103323
  643   -0.2307692308    0.3076923077   -0.0769230769    0.0009103323
  644   -0.2307692308    0.3076923077    0.0000000000    0.0009103323
  645   -0.2307692308    0.3076923077    0.0769230769    0.0009103323
  646   -0.2307692308    0.3076923077    0.1538461538    0.0009103323
  647   -0.2307692308    0.3076923077    0.2307692308    0.0009103323
  648   -0.2307692308    0.3076923077    0.3076923077    0.0009103323
  649   -0.2307692308    0.3076923077    0.3846153846    0.0009103323
  650   -0.2307692308    0.3076923077    0.4615384615    0.0009103323
  651   -0.2307692308    0.3846153846   -0.4615384615    0.0009103323
  652   -0.2307692308    0.3846153846   -0.3846153846    0.0009103323
  653   -0.2307692308    0.3846153846   -0.3076923077    0.0009103323
  654   -0.2307692308    0.3846153846   -0.2307692308    0.0009103323
  655   -0.2307692308    0.3846153846   -0.1538461538    0.0009103323
  656   -0.2307692308    0.3846153846   -0.0769230769    0.0009103323
  657   -0.2307692308    0.3846153846    0.0000000000    0.0009103323
  658   -0.2307692308    0.3846153846    0.0769230769    0.0009103323
  659   -0.2307692308    0.3846153846    0.1538461538    0.0009103323
  660   -0.2307692308    0.3846153846    0.2307692308    0.0009103323
  661   -0.2307692308    0.3846153846    0.3076923077    0.0009103323
  662   -0.2307692308    0.3846153846    0.3846153846    0.0009103323
  663   -0.2307692308    0.3846153846    0.4615384615    0.0009103323
  664   -0.2307692308    0.4615384615   -0.4615384615    0.0009103323
  665   -0.2307692308    0.4615384615   -0.3846153846    0.0009103323
  666   -0.2307692308    0.4615384615   -0.3076923077    0.0009103323
  667   -0.2307692308    0.4615384615   -0.2307692308    0.0009103323
  668   -0.2307692308    0.4615384615   -0.1538461538    0.0009103323
  669   -0.2307692308    0.4615384615   -0.0769230769    0.0009103323
  670   -0.2307692308    0.4615384615    0.0000000000    0.0009103323
  671   -0.2307692308    0.4615384615    0.0769230769    0.0009103323
  672   -0.2307692308    0.4615384615    0.1538461538    0.0009103323
  673   -0.2307692308    0.4615384615    0.2307692308    0.0009103323
  674   -0.2307692308    0.4615384615    0.3076923077    0.0009103323
  675   -0.2307692308    0.4615384615    0.3846153846    0.0009103323
  676   -0.2307692308    0.4615384615    0.4615384615    0.0009103323
  677   -0.1538461538   -0.4615384615   -0.4615384615    0.0009103323
  678   -0.1538461538   -0.4615384615   -0.3846153846    0.0009103323
  679   -0.1538461538   -0.4615384615   -0.3076923077    0.0009103323
  680   -0.1538461538   -0.4615384615   -0.2307692308    0.0009103323
  681   -0.1538461538   -0.4615384615   -0.1538461538    0.0009103323
  682   -0.1538461538   -0.4615384615   -0.0769230769    0.0009103323
  683   -0.1538461538   -0.4615384615    0.0000000000    0.0009103323
  684   -0.1538461538   -0.4615384615    0.0769230769    0.0009103323
  685   -0.1538461538   -0.4615384615    0.1538461538    0.0009103323
  686   -0.1538461538   -0.4615384615    0.2307692308    0.0009103323
  687   -0.1538461538   -0.4615384615    0.3076923077    0.0009103323
  688   -0.1538461538   -0.4615384615    0.3846153846    0.0009103323
  689   -0.1538461538   -0.4615384615    0.4615384615    0.0009103323
  690   -0.1538461538   -0.3846153846   -0.4615384615    0.0009103323
  691   -0.1538461538   -0.3846153846   -0.3846153846    0.0009103323
  692   -0.1538461538   -0.3846153846   -0.3076923077    0.0009103323
  693   -0.1538461538   -0.3846153846   -0.2307692308    0.0009103323
  694   -0.1538461538   -0.3846153846   -0.1538461538    0.0009103323
  695   -0.1538461538   -0.3846153846   -0.0769230769    0.0009103323
  696   -0.1538461538   -0.3846153846    0.0000000000    0.0009103323
  697   -0.1538461538   -0.3846153846    0.0769230769    0.0009103323
  698   -0.1538461538   -0.3846153846    0.1538461538    0.0009103323
  699   -0.1538461538   -0.3846153846    0.2307692308    0.0009103323
  700   -0.1538461538   -0.3846153846    0.3076923077    0.0009103323
  701   -0.1538461538   -0.3846153846    0.3846153846    0.0009103323
  702   -0.1538461538   -0.3846153846    0.4615384615    0.0009103323
  703   -0.1538461538   -0.3076923077   -0.4615384615    0.0009103323
  704   -0.1538461538   -0.3076923077   -0.3846153846    0.0009103323
  705   -0.1538461538   -0.3076923077   -0.3076923077    0.0009103323
  706   -0.1538461538   -0.3076923077   -0.2307692308    0.0009103323
  707   -0.1538461538   -0.3076923077   -0.1538461538    0.0009103323
  708   -0.1538461538   -0.3076923077   -0.0769230769    0.0009103323
  709   -0.1538461538   -0.3076923077    0.0000000000    0.0009103323
  710   -0.1538461538   -0.3076923077    0.0769230769    0.0009103323
  711   -0.1538461538   -0.3076923077    0.1538461538    0.0009103323
  712   -0.1538461538   -0.3076923077    0.2307692308    0.0009103323
  713   -0.1538461538   -0.3076923077    0.3076923077    0.0009103323
  714   -0.1538461538   -0.3076923077    0.3846153846    0.0009103323
  715   -0.1538461538   -0.3076923077    0.4615384615    0.0009103323
  716   -0.1538461538   -0.2307692308   -0.4615384615    0.0009103323
  717   -0.1538461538   -0.2307692308   -0.3846153846    0.0009103323
  718   -0.1538461538   -0.2307692308   -0.3076923077    0.0009103323
  719   -0.1538461538   -0.2307692308   -0.2307692308    0.0009103323
  720   -0.1538461538   -0.2307692308   -0.1538461538    0.0009103323
  721   -0.1538461538   -0.2307692308   -0.0769230769    0.0009103323
  722   -0.1538461538   -0.2307692308    0.0000000000    0.0009103323
  723   -0.1538461538   -0.2307692308    0.0769230769    0.0009103323
  724   -0.1538461538   -0.2307692308    0.1538461538    0.0009103323
  725   -0.1538461538   -0.2307692308    0.2307692308    0.0009103323
  726   -0.1538461538   -0.2307692308    0.3076923077    0.0009103323
  727   -0.1538461538   -0.2307692308    0.3846153846    0.0009103323
  728   -0.1538461538   -0.2307692308    0.4615384615    0.0009103323
  729   -0.1538461538   -0.1538461538   -0.4615384615    0.0009103323
  730   -0.1538461538   -0.1538461538   -0.3846153846    0.0009103323
  731   -0.1538461538   -0.1538461538   -0.3076923077    0.0009103323
  732   -0.1538461538   -0.1538461538   -0.2307692308    0.0009103323
  733   -0.1538461538   -0.1538461538   -0.1538461538    0.0009103323
  734   -0.1538461538   -0.1538461538   -0.0769230769    0.0009103323
  735   -0.1538461538   -0.1538461538    0.0000000000    0.0009103323
  736   -0.1538461538   -0.1538461538    0.0769230769    0.0009103323
  737   -0.1538461538   -0.1538461538    0.1538461538    0.0009103323
  738   -0.1538461538   -0.1538461538    0.2307692308    0.0009103323
  739   -0.1538461538   -0.1538461538    0.3076923077    0.0009103323
  740   -0.1538461538   -0.1538461538    0.3846153846    0.0009103323
  741   -0.1538461538   -0.1538461538    0.4615384615    0.0009103323
  742   -0.1538461538   -0.0769230769   -0.4615384615    0.0009103323
  743   -0.1538461538   -0.0769230769   -0.3846153846    0.0009103323
  744   -0.1538461538   -0.0769230769   -0.3076923077    0.0009103323
  745   -0.1538461538   -0.0769230769   -0.2307692308    0.0009103323
  746   -0.1538461538   -0.0769230769   -0.1538461538    0.0009103323
  747   -0.1538461538   -0.0769230769   -0.0769230769    0.0009103323
  748   -0.1538461538   -0.0769230769    0.0000000000    0.0009103323
  749   -0.1538461538   -0.0769230769    0.0769230769    0.0009103323
  750   -0.1538461538   -0.0769230769    0.1538461538    0.0009103323
  751   -0.1538461538   -0.0769230769    0.2307692308    0.0009103323
  752   -0.1538461538   -0.0769230769    0.3076923077    0.0009103323
  753   -0.1538461538   -0.0769230769    0.3846153846    0.0009103323
  754   -0.1538461538   -0.0769230769    0.4615384615    0.0009103323
  755   -0.1538461538    0.0000000000   -0.4615384615    0.0009103323
  756   -0.1538461538    0.0000000000   -0.3846153846    0.0009103323
  757   -0.1538461538    0.0000000000   -0.3076923077    0.0009103323
  758   -0.1538461538    0.0000000000   -0.2307692308    0.0009103323
  759   -0.1538461538    0.0000000000   -0.1538461538    0.0009103323
  760   -0.1538461538    0.0000000000   -0.0769230769    0.0009103323
  761   -0.1538461538    0.0000000000    0.0000000000    0.0009103323
  762   -0.1538461538    0.0000000000    0.0769230769    0.0009103323
  763   -0.1538461538    0.0000000000    0.1538461538    0.0009103323
  764   -0.1538461538    0.0000000000    0.2307692308    0.0009103323
  765   -0.1538461538    0.0000000000    0.3076923077    0.0009103323
  766   -0.1538461538    0.0000000000    0.3846153846    0.0009103323
  767   -0.1538461538    0.0000000000    0.4615384615    0.0009103323
  768   -0.1538461538    0.0769230769   -0.4615384615    0.0009103323
  769   -0.1538461538    0.0769230769   -0.3846153846    0.0009103323
  770   -0.1538461538    0.0769230769   -0.3076923077    0.0009103323
  771   -0.1538461538    0.0769230769   -0.2307692308    0.0009103323
  772   -0.1538461538    0.0769230769   -0.1538461538    0.0009103323
  773   -0.1538461538    0.0769230769   -0.0769230769    0.0009103323
  774   -0.1538461538    0.0769230769    0.0000000000    0.0009103323
  775   -0.1538461538    0.0769230769    0.0769230769    0.0009103323
  776   -0.1538461538    0.0769230769    0.1538461538    0.0009103323
  777   -0.1538461538    0.0769230769    0.2307692308    0.0009103323
  778   -0.1538461538    0.0769230769    0.3076923077    0.0009103323
  779   -0.1538461538    0.0769230769    0.3846153846    0.0009103323
  780   -0.1538461538    0.0769230769    0.4615384615    0.0009103323
  781   -0.1538461538    0.1538461538   -0.4615384615    0.0009103323
  782   -0.1538461538    0.1538461538   -0.3846153846    0.0009103323
  783   -0.1538461538    0.1538461538   -0.3076923077    0.0009103323
  784   -0.1538461538    0.1538461538   -0.2307692308    0.0009103323
  785   -0.1538461538    0.1538461538   -0.1538461538    0.0009103323
  786   -0.1538461538    0.1538461538   -0.0769230769    0.0009103323
  787   -0.1538461538    0.1538461538    0.0000000000    0.0009103323
  788   -0.1538461538    0.1538461538    0.0769230769    0.0009103323
  789   -0.1538461538    0.1538461538    0.1538461538    0.0009103323
  790   -0.1538461538    0.1538461538    0.2307692308    0.0009103323
  791   -0.1538461538    0.1538461538    0.3076923077    0.0009103323
  792   -0.1538461538    0.1538461538    0.3846153846    0.0009103323
  793   -0.1538461538    0.1538461538    0.4615384615    0.0009103323
  794   -0.1538461538    0.2307692308   -0.4615384615    0.0009103323
  795   -0.1538461538    0.2307692308   -0.3846153846    0.0009103323
  796   -0.1538461538    0.2307692308   -0.3076923077    0.0009103323
  797   -0.1538461538    0.2307692308   -0.2307692308    0.0009103323
  798   -0.1538461538    0.2307692308   -0.1538461538    0.0009103323
  799   -0.1538461538    0.2307692308   -0.0769230769    0.0009103323
  800   -0.1538461538    0.2307692308    0.0000000000    0.0009103323
  801   -0.1538461538    0.2307692308    0.0769230769    0.0009103323
  802   -0.1538461538    0.2307692308    0.1538461538    0.0009103323
  803   -0.1538461538    0.2307692308    0.2307692308    0.0009103323
  804   -0.1538461538    0.2307692308    0.3076923077    0.0009103323
  805   -0.1538461538    0.2307692308    0.3846153846    0.0009103323
  806   -0.1538461538    0.2307692308    0.4615384615    0.0009103323
  807   -0.1538461538    0.3076923077   -0.4615384615    0.0009103323
  808   -0.1538461538    0.3076923077   -0.3846153846    0.0009103323
  809   -0.1538461538    0.3076923077   -0.3076923077    0.0009103323
  810   -0.1538461538    0.3076923077   -0.2307692308    0.0009103323
  811   -0.1538461538    0.3076923077   -0.1538461538    0.0009103323
  812   -0.1538461538    0.3076923077   -0.0769230769    0.0009103323
  813   -0.1538461538    0.3076923077    0.0000000000    0.0009103323
  814   -0.1538461538    0.3076923077    0.0769230769    0.0009103323
  815   -0.1538461538    0.3076923077    0.1538461538    0.0009103323
  816   -0.1538461538    0.3076923077    0.2307692308    0.0009103323
  817   -0.1538461538    0.3076923077    0.3076923077    0.0009103323
  818   -0.1538461538    0.3076923077    0.3846153846    0.0009103323
  819   -0.1538461538    0.3076923077    0.4615384615    0.0009103323
  820   -0.1538461538    0.3846153846   -0.4615384615    0.0009103323
  821   -0.1538461538    0.3846153846   -0.3846153846    0.0009103323
  822   -0.1538461538    0.3846153846   -0.3076923077    0.0009103323
  823   -0.1538461538    0.3846153846   -0.2307692308    0.0009103323
  824   -0.1538461538    0.3846153846   -0.1538461538    0.0009103323
  825   -0.1538461538    0.3846153846   -0.0769230769    0.0009103323
  826   -0.1538461538    0.3846153846    0.0000000000    0.0009103323
  827   -0.1538461538    0.3846153846    0.0769230769    0.0009103323
  828   -0.1538461538    0.3846153846    0.1538461538    0.0009103323
  829   -0.1538461538    0.3846153846    0.2307692308    0.0009103323
  830   -0.1538461538    0.3846153846    0.3076923077    0.0009103323
  831   -0.1538461538    0.3846153846    0.3846153846    0.0009103323
  832   -0.1538461538    0.3846153846    0.4615384615    0.0009103323
  833   -0.1538461538    0.4615384615   -0.4615384615    0.0009103323
  834   -0.1538461538    0.4615384615   -0.3846153846    0.0009103323
  835   -0.1538461538    0.4615384615   -0.3076923077    0.0009103323
  836   -0.1538461538    0.4615384615   -0.2307692308    0.0009103323
  837   -0.1538461538    0.4615384615   -0.1538461538    0.0009103323
  838   -0.1538461538    0.4615384615   -0.0769230769    0.0009103323
  839   -0.1538461538    0.4615384615    0.0000000000    0.0009103323
  840   -0.1538461538    0.4615384615    0.0769230769    0.0009103323
  841   -0.1538461538    0.4615384615    0.1538461538    0.0009103323
  842   -0.1538461538    0.4615384615    0.2307692308    0.0009103323
  843   -0.1538461538    0.4615384615    0.3076923077    0.0009103323
  844   -0.1538461538    0.4615384615    0.3846153846    0.0009103323
  845   -0.1538461538    0.4615384615    0.4615384615    0.0009103323
  846   -0.0769230769   -0.4615384615   -0.4615384615    0.0009103323
  847   -0.0769230769   -0.4615384615   -0.3846153846    0.0009103323
  848   -0.0769230769   -0.4615384615   -0.3076923077    0.0009103323
  849   -0.0769230769   -0.4615384615   -0.2307692308    0.0009103323
  850   -0.0769230769   -0.4615384615   -0.1538461538    0.0009103323
  851   -0.0769230769   -0.4615384615   -0.0769230769    0.0009103323
  852   -0.0769230769   -0.4615384615    0.0000000000    0.0009103323
  853   -0.0769230769   -0.4615384615    0.0769230769    0.0009103323
  854   -0.0769230769   -0.4615384615    0.1538461538    0.0009103323
  855   -0.0769230769   -0.4615384615    0.2307692308    0.0009103323
  856   -0.0769230769   -0.4615384615    0.3076923077    0.0009103323
  857   -0.0769230769   -0.4615384615    0.3846153846    0.0009103323
  858   -0.0769230769   -0.4615384615    0.4615384615    0.0009103323
  859   -0.0769230769   -0.3846153846   -0.4615384615    0.0009103323
  860   -0.0769230769   -0.3846153846   -0.3846153846    0.0009103323
  861   -0.0769230769   -0.3846153846   -0.3076923077    0.0009103323
  862   -0.0769230769   -0.3846153846   -0.2307692308    0.0009103323
  863   -0.0769230769   -0.3846153846   -0.1538461538    0.0009103323
  864   -0.0769230769   -0.3846153846   -0.0769230769    0.0009103323
  865   -0.0769230769   -0.3846153846    0.0000000000    0.0009103323
  866   -0.0769230769   -0.3846153846    0.0769230769    0.0009103323
  867   -0.0769230769   -0.3846153846    0.1538461538    0.0009103323
  868   -0.0769230769   -0.3846153846    0.2307692308    0.0009103323
  869   -0.0769230769   -0.3846153846    0.3076923077    0.0009103323
  870   -0.0769230769   -0.3846153846    0.3846153846    0.0009103323
  871   -0.0769230769   -0.3846153846    0.4615384615    0.0009103323
  872   -0.0769230769   -0.3076923077   -0.4615384615    0.0009103323
  873   -0.0769230769   -0.3076923077   -0.3846153846    0.0009103323
  874   -0.0769230769   -0.3076923077   -0.3076923077    0.0009103323
  875   -0.0769230769   -0.3076923077   -0.2307692308    0.0009103323
  876   -0.0769230769   -0.3076923077   -0.1538461538    0.0009103323
  877   -0.0769230769   -0.3076923077   -0.0769230769    0.0009103323
  878   -0.0769230769   -0.3076923077    0.0000000000    0.0009103323
  879   -0.0769230769   -0.3076923077    0.0769230769    0.0009103323
  880   -0.0769230769   -0.3076923077    0.1538461538    0.0009103323
  881   -0.0769230769   -0.3076923077    0.2307692308    0.0009103323
  882   -0.0769230769   -0.3076923077    0.3076923077    0.0009103323
  883   -0.0769230769   -0.3076923077    0.3846153846    0.0009103323
  884   -0.0769230769   -0.3076923077    0.4615384615    0.0009103323
  885   -0.0769230769   -0.2307692308   -0.4615384615    0.0009103323
  886   -0.0769230769   -0.2307692308   -0.3846153846    0.0009103323
  887   -0.0769230769   -0.2307692308   -0.3076923077    0.0009103323
  888   -0.0769230769   -0.2307692308   -0.2307692308    0.0009103323
  889   -0.0769230769   -0.2307692308   -0.1538461538    0.0009103323
  890   -0.0769230769   -0.2307692308   -0.0769230769    0.0009103323
  891   -0.0769230769   -0.2307692308    0.0000000000    0.0009103323
  892   -0.0769230769   -0.2307692308    0.0769230769    0.0009103323
  893   -0.0769230769   -0.2307692308    0.1538461538    0.0009103323
  894   -0.0769230769   -0.2307692308    0.2307692308    0.0009103323
  895   -0.0769230769   -0.2307692308    0.3076923077    0.0009103323
  896   -0.0769230769   -0.2307692308    0.3846153846    0.0009103323
  897   -0.0769230769   -0.2307692308    0.4615384615    0.0009103323
  898   -0.0769230769   -0.1538461538   -0.4615384615    0.0009103323
  899   -0.0769230769   -0.1538461538   -0.3846153846    0.0009103323
  900   -0.0769230769   -0.1538461538   -0.3076923077    0.0009103323
  901   -0.0769230769   -0.1538461538   -0.2307692308    0.0009103323
  902   -0.0769230769   -0.1538461538   -0.1538461538    0.0009103323
  903   -0.0769230769   -0.1538461538   -0.0769230769    0.0009103323
  904   -0.0769230769   -0.1538461538    0.0000000000    0.0009103323
  905   -0.0769230769   -0.1538461538    0.0769230769    0.0009103323
  906   -0.0769230769   -0.1538461538    0.1538461538    0.0009103323
  907   -0.0769230769   -0.1538461538    0.2307692308    0.0009103323
  908   -0.0769230769   -0.1538461538    0.3076923077    0.0009103323
  909   -0.0769230769   -0.1538461538    0.3846153846    0.0009103323
  910   -0.0769230769   -0.1538461538    0.4615384615    0.0009103323
  911   -0.0769230769   -0.0769230769   -0.4615384615    0.0009103323
  912   -0.0769230769   -0.0769230769   -0.3846153846    0.0009103323
  913   -0.0769230769   -0.0769230769   -0.3076923077    0.0009103323
  914   -0.0769230769   -0.0769230769   -0.2307692308    0.0009103323
  915   -0.0769230769   -0.0769230769   -0.1538461538    0.0009103323
  916   -0.0769230769   -0.0769230769   -0.0769230769    0.0009103323
  917   -0.0769230769   -0.0769230769    0.0000000000    0.0009103323
  918   -0.0769230769   -0.0769230769    0.0769230769    0.0009103323
  919   -0.0769230769   -0.0769230769    0.1538461538    0.0009103323
  920   -0.0769230769   -0.0769230769    0.2307692308    0.0009103323
  921   -0.0769230769   -0.0769230769    0.3076923077    0.0009103323
  922   -0.0769230769   -0.0769230769    0.3846153846    0.0009103323
  923   -0.0769230769   -0.0769230769    0.4615384615    0.0009103323
  924   -0.0769230769    0.0000000000   -0.4615384615    0.0009103323
  925   -0.0769230769    0.0000000000   -0.3846153846    0.0009103323
  926   -0.0769230769    0.0000000000   -0.3076923077    0.0009103323
  927   -0.0769230769    0.0000000000   -0.2307692308    0.0009103323
  928   -0.0769230769    0.0000000000   -0.1538461538    0.0009103323
  929   -0.0769230769    0.0000000000   -0.0769230769    0.0009103323
  930   -0.0769230769    0.0000000000    0.0000000000    0.0009103323
  931   -0.0769230769    0.0000000000    0.0769230769    0.0009103323
  932   -0.0769230769    0.0000000000    0.1538461538    0.0009103323
  933   -0.0769230769    0.0000000000    0.2307692308    0.0009103323
  934   -0.0769230769    0.0000000000    0.3076923077    0.0009103323
  935   -0.0769230769    0.0000000000    0.3846153846    0.0009103323
  936   -0.0769230769    0.0000000000    0.4615384615    0.0009103323
  937   -0.0769230769    0.0769230769   -0.4615384615    0.0009103323
  938   -0.0769230769    0.0769230769   -0.3846153846    0.0009103323
  939   -0.0769230769    0.0769230769   -0.3076923077    0.0009103323
  940   -0.0769230769    0.0769230769   -0.2307692308    0.0009103323
  941   -0.0769230769    0.0769230769   -0.1538461538    0.0009103323
  942   -0.0769230769    0.0769230769   -0.0769230769    0.0009103323
  943   -0.0769230769    0.0769230769    0.0000000000    0.0009103323
  944   -0.0769230769    0.0769230769    0.0769230769    0.0009103323
  945   -0.0769230769    0.0769230769    0.1538461538    0.0009103323
  946   -0.0769230769    0.0769230769    0.2307692308    0.0009103323
  947   -0.0769230769    0.0769230769    0.3076923077    0.0009103323
  948   -0.0769230769    0.0769230769    0.3846153846    0.0009103323
  949   -0.0769230769    0.0769230769    0.4615384615    0.0009103323
  950   -0.0769230769    0.1538461538   -0.4615384615    0.0009103323
  951   -0.0769230769    0.1538461538   -0.3846153846    0.0009103323
  952   -0.0769230769    0.1538461538   -0.3076923077    0.0009103323
  953   -0.0769230769    0.1538461538   -0.2307692308    0.0009103323
  954   -0.0769230769    0.1538461538   -0.1538461538    0.0009103323
  955   -0.0769230769    0.1538461538   -0.0769230769    0.0009103323
  956   -0.0769230769    0.1538461538    0.0000000000    0.0009103323
  957   -0.0769230769    0.1538461538    0.0769230769    0.0009103323
  958   -0.0769230769    0.1538461538    0.1538461538    0.0009103323
  959   -0.0769230769    0.1538461538    0.2307692308    0.0009103323
  960   -0.0769230769    0.1538461538    0.3076923077    0.0009103323
  961   -0.0769230769    0.1538461538    0.3846153846    0.0009103323
  962   -0.0769230769    0.1538461538    0.4615384615    0.0009103323
  963   -0.0769230769    0.2307692308   -0.4615384615    0.0009103323
  964   -0.0769230769    0.2307692308   -0.3846153846    0.0009103323
  965   -0.0769230769    0.2307692308   -0.3076923077    0.0009103323
  966   -0.0769230769    0.2307692308   -0.2307692308    0.0009103323
  967   -0.0769230769    0.2307692308   -0.1538461538    0.0009103323
  968   -0.0769230769    0.2307692308   -0.0769230769    0.0009103323
  969   -0.0769230769    0.2307692308    0.0000000000    0.0009103323
  970   -0.0769230769    0.2307692308    0.0769230769    0.0009103323
  971   -0.0769230769    0.2307692308    0.1538461538    0.0009103323
  972   -0.0769230769    0.2307692308    0.2307692308    0.0009103323
  973   -0.0769230769    0.2307692308    0.3076923077    0.0009103323
  974   -0.0769230769    0.2307692308    0.3846153846    0.0009103323
  975   -0.0769230769    0.2307692308    0.4615384615    0.0009103323
  976   -0.0769230769    0.3076923077   -0.4615384615    0.0009103323
  977   -0.0769230769    0.3076923077   -0.3846153846    0.0009103323
  978   -0.0769230769    0.3076923077   -0.3076923077    0.0009103323
  979   -0.0769230769    0.3076923077   -0.2307692308    0.0009103323
  980   -0.0769230769    0.3076923077   -0.1538461538    0.0009103323
  981   -0.0769230769    0.3076923077   -0.0769230769    0.0009103323
  982   -0.0769230769    0.3076923077    0.0000000000    0.0009103323
  983   -0.0769230769    0.3076923077    0.0769230769    0.0009103323
  984   -0.0769230769    0.3076923077    0.1538461538    0.0009103323
  985   -0.0769230769    0.3076923077    0.2307692308    0.0009103323
  986   -0.0769230769    0.3076923077    0.3076923077    0.0009103323
  987   -0.0769230769    0.3076923077    0.3846153846    0.0009103323
  988   -0.0769230769    0.3076923077    0.4615384615    0.0009103323
  989   -0.0769230769    0.3846153846   -0.4615384615    0.0009103323
  990   -0.0769230769    0.3846153846   -0.3846153846    0.0009103323
  991   -0.0769230769    0.3846153846   -0.3076923077    0.0009103323
  992   -0.0769230769    0.3846153846   -0.2307692308    0.0009103323
  993   -0.0769230769    0.3846153846   -0.1538461538    0.0009103323
  994   -0.0769230769    0.3846153846   -0.0769230769    0.0009103323
  995   -0.0769230769    0.3846153846    0.0000000000    0.0009103323
  996   -0.0769230769    0.3846153846    0.0769230769    0.0009103323
  997   -0.0769230769    0.3846153846    0.1538461538    0.0009103323
  998   -0.0769230769    0.3846153846    0.2307692308    0.0009103323
  999   -0.0769230769    0.3846153846    0.3076923077    0.0009103323
 1000   -0.0769230769    0.3846153846    0.3846153846    0.0009103323
 1001   -0.0769230769    0.3846153846    0.4615384615    0.0009103323
 1002   -0.0769230769    0.4615384615   -0.4615384615    0.0009103323
 1003   -0.0769230769    0.4615384615   -0.3846153846    0.0009103323
 1004   -0.0769230769    0.4615384615   -0.3076923077    0.0009103323
 1005   -0.0769230769    0.4615384615   -0.2307692308    0.0009103323
 1006   -0.0769230769    0.4615384615   -0.1538461538    0.0009103323
 1007   -0.0769230769    0.4615384615   -0.0769230769    0.0009103323
 1008   -0.0769230769    0.4615384615    0.0000000000    0.0009103323
 1009   -0.0769230769    0.4615384615    0.0769230769    0.0009103323
 1010   -0.0769230769    0.4615384615    0.1538461538    0.0009103323
 1011   -0.0769230769    0.4615384615    0.2307692308    0.0009103323
 1012   -0.0769230769    0.4615384615    0.3076923077    0.0009103323
 1013   -0.0769230769    0.4615384615    0.3846153846    0.0009103323
 1014   -0.0769230769    0.4615384615    0.4615384615    0.0009103323
 1015    0.0000000000   -0.4615384615   -0.4615384615    0.0009103323
 1016    0.0000000000   -0.4615384615   -0.3846153846    0.0009103323
 1017    0.0000000000   -0.4615384615   -0.3076923077    0.0009103323
 1018    0.0000000000   -0.4615384615   -0.2307692308    0.0009103323
 1019    0.0000000000   -0.4615384615   -0.1538461538    0.0009103323
 1020    0.0000000000   -0.4615384615   -0.0769230769    0.0009103323
 1021    0.0000000000   -0.4615384615    0.0000000000    0.0009103323
 1022    0.0000000000   -0.4615384615    0.0769230769    0.0009103323
 1023    0.0000000000   -0.4615384615    0.1538461538    0.0009103323
 1024    0.0000000000   -0.4615384615    0.2307692308    0.0009103323
 1025    0.0000000000   -0.4615384615    0.3076923077    0.0009103323
 1026    0.0000000000   -0.4615384615    0.3846153846    0.0009103323
 1027    0.0000000000   -0.4615384615    0.4615384615    0.0009103323
 1028    0.0000000000   -0.3846153846   -0.4615384615    0.0009103323
 1029    0.0000000000   -0.3846153846   -0.3846153846    0.0009103323
 1030    0.0000000000   -0.3846153846   -0.3076923077    0.0009103323
 1031    0.0000000000   -0.3846153846   -0.2307692308    0.0009103323
 1032    0.0000000000   -0.3846153846   -0.1538461538    0.0009103323
 1033    0.0000000000   -0.3846153846   -0.0769230769    0.0009103323
 1034    0.0000000000   -0.3846153846    0.0000000000    0.0009103323
 1035    0.0000000000   -0.3846153846    0.0769230769    0.0009103323
 1036    0.0000000000   -0.3846153846    0.1538461538    0.0009103323
 1037    0.0000000000   -0.3846153846    0.2307692308    0.0009103323
 1038    0.0000000000   -0.3846153846    0.3076923077    0.0009103323
 1039    0.0000000000   -0.3846153846    0.3846153846    0.0009103323
 1040    0.0000000000   -0.3846153846    0.4615384615    0.0009103323
 1041    0.0000000000   -0.3076923077   -0.4615384615    0.0009103323
 1042    0.0000000000   -0.3076923077   -0.3846153846    0.0009103323
 1043    0.0000000000   -0.3076923077   -0.3076923077    0.0009103323
 1044    0.0000000000   -0.3076923077   -0.2307692308    0.0009103323
 1045    0.0000000000   -0.3076923077   -0.1538461538    0.0009103323
 1046    0.0000000000   -0.3076923077   -0.0769230769    0.0009103323
 1047    0.0000000000   -0.3076923077    0.0000000000    0.0009103323
 1048    0.0000000000   -0.3076923077    0.0769230769    0.0009103323
 1049    0.0000000000   -0.3076923077    0.1538461538    0.0009103323
 1050    0.0000000000   -0.3076923077    0.2307692308    0.0009103323
 1051    0.0000000000   -0.3076923077    0.3076923077    0.0009103323
 1052    0.0000000000   -0.3076923077    0.3846153846    0.0009103323
 1053    0.0000000000   -0.3076923077    0.4615384615    0.0009103323
 1054    0.0000000000   -0.2307692308   -0.4615384615    0.0009103323
 1055    0.0000000000   -0.2307692308   -0.3846153846    0.0009103323
 1056    0.0000000000   -0.2307692308   -0.3076923077    0.0009103323
 1057    0.0000000000   -0.2307692308   -0.2307692308    0.0009103323
 1058    0.0000000000   -0.2307692308   -0.1538461538    0.0009103323
 1059    0.0000000000   -0.2307692308   -0.0769230769    0.0009103323
 1060    0.0000000000   -0.2307692308    0.0000000000    0.0009103323
 1061    0.0000000000   -0.2307692308    0.0769230769    0.0009103323
 1062    0.0000000000   -0.2307692308    0.1538461538    0.0009103323
 1063    0.0000000000   -0.2307692308    0.2307692308    0.0009103323
 1064    0.0000000000   -0.2307692308    0.3076923077    0.0009103323
 1065    0.0000000000   -0.2307692308    0.3846153846    0.0009103323
 1066    0.0000000000   -0.2307692308    0.4615384615    0.0009103323
 1067    0.0000000000   -0.1538461538   -0.4615384615    0.0009103323
 1068    0.0000000000   -0.1538461538   -0.3846153846    0.0009103323
 1069    0.0000000000   -0.1538461538   -0.3076923077    0.0009103323
 1070    0.0000000000   -0.1538461538   -0.2307692308    0.0009103323
 1071    0.0000000000   -0.1538461538   -0.1538461538    0.0009103323
 1072    0.0000000000   -0.1538461538   -0.0769230769    0.0009103323
 1073    0.0000000000   -0.1538461538    0.0000000000    0.0009103323
 1074    0.0000000000   -0.1538461538    0.0769230769    0.0009103323
 1075    0.0000000000   -0.1538461538    0.1538461538    0.0009103323
 1076    0.0000000000   -0.1538461538    0.2307692308    0.0009103323
 1077    0.0000000000   -0.1538461538    0.3076923077    0.0009103323
 1078    0.0000000000   -0.1538461538    0.3846153846    0.0009103323
 1079    0.0000000000   -0.1538461538    0.4615384615    0.0009103323
 1080    0.0000000000   -0.0769230769   -0.4615384615    0.0009103323
 1081    0.0000000000   -0.0769230769   -0.3846153846    0.0009103323
 1082    0.0000000000   -0.0769230769   -0.3076923077    0.0009103323
 1083    0.0000000000   -0.0769230769   -0.2307692308    0.0009103323
 1084    0.0000000000   -0.0769230769   -0.1538461538    0.0009103323
 1085    0.0000000000   -0.0769230769   -0.0769230769    0.0009103323
 1086    0.0000000000   -0.0769230769    0.0000000000    0.0009103323
 1087    0.0000000000   -0.0769230769    0.0769230769    0.0009103323
 1088    0.0000000000   -0.0769230769    0.1538461538    0.0009103323
 1089    0.0000000000   -0.0769230769    0.2307692308    0.0009103323
 1090    0.0000000000   -0.0769230769    0.3076923077    0.0009103323
 1091    0.0000000000   -0.0769230769    0.3846153846    0.0009103323
 1092    0.0000000000   -0.0769230769    0.4615384615    0.0009103323
 1093    0.0000000000    0.0000000000   -0.4615384615    0.0009103323
 1094    0.0000000000    0.0000000000   -0.3846153846    0.0009103323
 1095    0.0000000000    0.0000000000   -0.3076923077    0.0009103323
 1096    0.0000000000    0.0000000000   -0.2307692308    0.0009103323
 1097    0.0000000000    0.0000000000   -0.1538461538    0.0009103323
 1098    0.0000000000    0.0000000000   -0.0769230769    0.0009103323
 1099    0.0000000000    0.0000000000    0.0000000000    0.0004551661
================================================================================


============================ local K-points summary ============================
Number |               Cartesian coordinates              |       Weight
  1      0.0000000000     -0.0397808406      0.1193425218      0.0009103323
  2      0.0000000000     -0.0397808406      0.1591233623      0.0009103323
  3      0.0000000000     -0.0397808406      0.1989042029      0.0009103323
  4      0.0000000000     -0.0397808406      0.2386850435      0.0009103323
  5      0.0000000000      0.0000000000     -0.2386850435      0.0009103323
  6      0.0000000000      0.0000000000     -0.1989042029      0.0009103323
  7      0.0000000000      0.0000000000     -0.1591233623      0.0009103323
  8      0.0000000000      0.0000000000     -0.1193425218      0.0009103323
  9      0.0000000000      0.0000000000     -0.0795616812      0.0009103323
 10      0.0000000000      0.0000000000     -0.0397808406      0.0009103323
 11      0.0000000000      0.0000000000      0.0000000000      0.0004551661
================================================================================

Complex-valued NGWFs will be used.
Non Gamma point calculation with KP method will be performed.
Cartesian coordinates of k-point are          0.50000         0.50000         0.50000

Determining parallel strategy ...... done
Calculating Ewald energy ...              -48.302953 Hartree
Basis initialisation ...
... done
Sparse matrix initialisation ...
 done
Fully random NGWF initialisation ...
WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
 done

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.

WARNING: random number seed also depends on the  MPI ranks. For reproducability, always use the same number of MPI processes.
Density kernel initialisation

Writing density kernel to file "Kr95.dkn" ... done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.09337521665732E+03  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.1250E-13
     [H,K] commutator            =   4.0890E-14
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  001 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.0236E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       6.38862040381410E+02 Eh
   Predicted gain in energy  =      -4.54513176275910E+02 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   5.58043011342758E+02  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   5.5896E-14
     [H,K] commutator            =   3.8899E-15
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  002 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.7750E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       2.12633019952406E+02 Eh
   Predicted gain in energy  =      -3.45409991390352E+02 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   1.95781293884024E+02  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   2.0352E-14
     [H,K] commutator            =   3.7961E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  003 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.4623E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       8.51662015548051E+01 Eh
   Predicted gain in energy  =      -1.10615092329219E+02 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   7.08577985827300E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   4.7439E-16
     [H,K] commutator            =   5.1403E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  004 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.3962E-02 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =       1.30557435478027E+01 Eh
   Predicted gain in energy  =      -5.78020550349272E+01 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =   4.25554512548888E+00  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.3243E-16
     [H,K] commutator            =   4.8901E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  005 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  8.7368E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -5.72159213656742E+01 Eh
   Predicted gain in energy  =      -6.14714664911631E+01 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -5.12102344224191E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   1.7161E-13
     [H,K] commutator            =   9.1368E-15
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  006 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.9456E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -7.17720061290584E+01 Eh
   Predicted gain in energy  =      -2.05617717066392E+01 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -7.27640515414343E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   1.1815E-15
     [H,K] commutator            =   1.0991E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  007 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.9942E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -8.15482663661042E+01 Eh
   Predicted gain in energy  =      -8.78421482466985E+00 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -8.20210510998615E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.0963E-16
     [H,K] commutator            =   6.4250E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  008 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.9575E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -8.63526330419513E+01 Eh
   Predicted gain in energy  =      -4.33158194208988E+00 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -8.65386270924960E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.1364E-13
     [H,K] commutator            =   3.2873E-14
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  009 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.3545E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -8.83734523266843E+01 Eh
   Predicted gain in energy  =      -1.83482523418832E+00 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -8.83697591087506E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   1.4481E-13
     [H,K] commutator            =   1.5443E-14
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  010 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.2499E-03 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -8.99500061752125E+01 Eh
   Predicted gain in energy  =      -1.58024706646192E+00 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -8.99550516735529E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.1733E-16
     [H,K] commutator            =   5.0510E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  011 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  9.0638E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.07613687657339E+01 Eh
   Predicted gain in energy  =      -8.06317092181047E-01 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.07617050561793E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.0679E-16
     [H,K] commutator            =   4.8257E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  012 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  6.4542E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.12089980515405E+01 Eh
   Predicted gain in energy  =      -4.47292995361181E-01 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.12107347160102E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   9.4440E-15
     [H,K] commutator            =   1.9373E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  013 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.2585E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.14321867318758E+01 Eh
   Predicted gain in energy  =      -2.21452015865623E-01 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.14323116106215E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.0641E-16
     [H,K] commutator            =   4.6986E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  014 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.3421E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.16757402573603E+01 Eh
   Predicted gain in energy  =      -2.43428646738835E-01 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.16722972138018E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.0661E-16
     [H,K] commutator            =   4.6485E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  015 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.0682E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.18336404307528E+01 Eh
   Predicted gain in energy  =      -1.61343216950996E-01 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.18334326865418E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   4.1541E-15
     [H,K] commutator            =   7.2473E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  016 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.9243E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.19073436024253E+01 Eh
   Predicted gain in energy  =      -7.39109158834736E-02 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.19071518306128E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.3284E-13
     [H,K] commutator            =   2.1715E-15
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  017 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.2534E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.19520981445992E+01 Eh
   Predicted gain in energy  =      -4.49463139864434E-02 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.19521079173281E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   9.5393E-14
     [H,K] commutator            =   1.6113E-15
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  018 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.9645E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.19958028457255E+01 Eh
   Predicted gain in energy  =      -4.36949283974570E-02 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.19956111256180E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   3.0971E-14
     [H,K] commutator            =   3.1992E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  019 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.4850E-04 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20156084013689E+01 Eh
   Predicted gain in energy  =      -1.99972757509244E-02 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20156143101965E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   1.0731E-13
     [H,K] commutator            =   1.4756E-15
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  020 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  9.3705E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20231092945959E+01 Eh
   Predicted gain in energy  =      -7.49498439938634E-03 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20231106293437E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   8.2960E-14
     [H,K] commutator            =   5.4608E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  021 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  7.7574E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20272327671232E+01 Eh
   Predicted gain in energy  =      -4.12213777943293E-03 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20272343146189E+01  Eh
     Estimated bandgap           =   1.0001E-01  Eh
     RMS occupancy error         =   1.6947E-14
     [H,K] commutator            =   1.2798E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  022 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.6470E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20309272899271E+01 Eh
   Predicted gain in energy  =      -3.69297530815516E-03 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20309069140960E+01  Eh
     Estimated bandgap           =   9.9987E-02  Eh
     RMS occupancy error         =   5.6002E-14
     [H,K] commutator            =   7.3015E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  023 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  4.6344E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20329173930764E+01 Eh
   Predicted gain in energy  =      -2.01047898039519E-03 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20329175546025E+01  Eh
     Estimated bandgap           =   1.0001E-01  Eh
     RMS occupancy error         =   2.8394E-14
     [H,K] commutator            =   1.0353E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  024 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.0780E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20336849539499E+01 Eh
   Predicted gain in energy  =      -7.67399347353148E-04 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20336853058966E+01  Eh
     Estimated bandgap           =   1.0001E-01  Eh
     RMS occupancy error         =   3.6980E-14
     [H,K] commutator            =   1.7679E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  025 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.3284E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20341532636013E+01 Eh
   Predicted gain in energy  =      -4.67957704771038E-04 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20341532842229E+01  Eh
     Estimated bandgap           =   1.0000E-01  Eh
     RMS occupancy error         =   1.7229E-13
     [H,K] commutator            =   8.4621E-15
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  026 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.9504E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20345965094699E+01 Eh
   Predicted gain in energy  =      -4.43225246996803E-04 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20345940393360E+01  Eh
     Estimated bandgap           =   1.0001E-01  Eh
     RMS occupancy error         =   9.2682E-15
     [H,K] commutator            =   7.8444E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  027 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.6389E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20348779437285E+01 Eh
   Predicted gain in energy  =      -2.83904392503587E-04 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20348774674086E+01  Eh
     Estimated bandgap           =   1.0001E-01  Eh
     RMS occupancy error         =   2.0737E-15
     [H,K] commutator            =   4.6748E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  028 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.3160E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20350675320198E+01 Eh
   Predicted gain in energy  =      -1.90064611246044E-04 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20350671575885E+01  Eh
     Estimated bandgap           =   9.9992E-02  Eh
     RMS occupancy error         =   1.7806E-15
     [H,K] commutator            =   4.6187E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  029 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.4520E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20352043991835E+01 Eh
   Predicted gain in energy  =      -1.37241594956095E-04 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20352045547079E+01  Eh
     Estimated bandgap           =   1.0002E-01  Eh
     RMS occupancy error         =   8.6885E-16
     [H,K] commutator            =   4.6692E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  030 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  1.0189E-05 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20353354816225E+01 Eh
   Predicted gain in energy  =      -1.30926914536644E-04 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20353342045453E+01  Eh
     Estimated bandgap           =   1.0001E-01  Eh
     RMS occupancy error         =   3.4126E-14
     [H,K] commutator            =   1.3227E-16
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  031 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  9.2654E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20354128589842E+01 Eh
   Predicted gain in energy  =      -7.86544389654864E-05 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20354128770598E+01  Eh
     Estimated bandgap           =   9.9986E-02  Eh
     RMS occupancy error         =   1.2678E-13
     [H,K] commutator            =   4.4890E-15
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  032 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  5.7517E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20354361491035E+01 Eh
   Predicted gain in energy  =      -2.32720437054468E-05 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20354361132698E+01  Eh
     Estimated bandgap           =   9.9998E-02  Eh
     RMS occupancy error         =   5.6726E-15
     [H,K] commutator            =   4.8101E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  033 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  3.6142E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20354482054540E+01 Eh
   Predicted gain in energy  =      -1.20921841499921E-05 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20354482053536E+01  Eh
     Estimated bandgap           =   1.0001E-01  Eh
     RMS occupancy error         =   5.0353E-14
     [H,K] commutator            =   2.9005E-15
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  034 #############################
################################################################################

>>> Checking for convergence of NGWFs:   NOT CONVERGED
  ========================================================================
         NGWF RMS gradient =  2.8862E-06 >  2.0000E-06  | above tolerance
  ========================================================================

>>> Improving NGWFs using line search:
  ========================================================================
   Predicted total energy    =      -9.20354553656063E+01 Eh
   Predicted gain in energy  =      -7.16025265035114E-06 Eh
  ========================================================================

Writing NGWFs to file "Kr95.tightbox_ngwfs"....  done

>>> Optimising kernel for current NGWFs:


>>> Density kernel optimised for the current NGWF basis:
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     Total energy                =  -9.20354553656307E+01  Eh
     Estimated bandgap           =   9.9994E-02  Eh
     RMS occupancy error         =   1.7711E-15
     [H,K] commutator            =   8.0461E-17
     k-point number  1
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  2
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  3
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  4
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  5
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  6
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  7
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  8
     Occupancy bounds            = [  1.000:  1.000]
     k-point number  9
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 10
     Occupancy bounds            = [  1.000:  1.000]
     k-point number 11
     Occupancy bounds            = [  1.000:  1.000]
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~




################################################################################
########################### NGWF CG iteration  035 #############################
################################################################################

>>> Checking for convergence of NGWFs: 
           ........................................................
           |         *** NGWF optimisation converged ***          |
           | RMS NGWF gradient =    0.00000147243467              |
           | Criteria satisfied:                                  |
           | -> RMS NGWF gradient lower than set threshold.       |
           ========================================================

================================================================================
           ---------------- ENERGY COMPONENTS (Eh) ----------------
           | Kinetic                    :       22.08986414389559 |
           | Pseudopotential (local)    :      -55.39755290675234 |
           | Pseudo (non-coul chg cor)  :        0.00000000000000
           | Pseudopotential (non-local):        2.77209816263988 |
           | Hartree                    :       19.30678387015178 |
           | Exchange-correlation       :      -32.50369535416163 |
           | Ewald                      :      -48.30295328140399 |
           | Total                      :      -92.03545536563071 |
           --------------------------------------------------------
           Integrated density           :       32.00000000000038
================================================================================


                        <<<<< CALCULATION SUMMARY >>>>>                         
|ITER|    RMS GRADIENT   |     TOTAL ENERGY    |   step   |     Epredicted              
   0     0.04023599936984   1093.37521665732015   0.587520    638.86204038140988        
   1     0.04774956269045    558.04301134275795   0.309537    212.63301995240619        
   2     0.02462302551399    195.78129388402400   0.457856     85.16620155480508        
   3     0.01396249867694     70.85779858272996   0.738341     13.05574354780272        
   4     0.00873682062684      4.25554512548888   2.801141    -57.21592136567420        
   5     0.00494556140582    -51.21023442241913   2.810278    -71.77200612905835        
   6     0.00299416992844    -72.76405154143433   2.962927    -81.54826636610417        
   7     0.00195754848406    -82.02105109986147   3.387739    -86.35263304195135        
   8     0.00135447687486    -86.53862709249597   3.478722    -88.37345232668429        
   9     0.00124990285515    -88.36975910875059   3.532005    -89.95000617521251        
  10     0.00090638457788    -89.95505167355289   3.345303    -90.76136876573393        
  11     0.00064542106614    -90.76170505617928   3.613460    -91.20899805154046        
  12     0.00052585057276    -91.21073471601019   2.785628    -91.43218673187582        
  13     0.00043420819913    -91.43231161062150   4.495493    -91.67574025736033        
  14     0.00040682274552    -91.67229721380178   3.503377    -91.83364043075278        
  15     0.00029243038454    -91.83343268654181   2.984711    -91.90734360242529        
  16     0.00022533974212    -91.90715183061280   3.078837    -91.95209814459925        
  17     0.00019645069448    -91.95210791732809   3.943774    -91.99580284572555        
  18     0.00014850273135    -91.99561112561797   3.200930    -92.01560840136889        
  19     0.00009370530189    -92.01561431019650   2.973286    -92.02310929459588        
  20     0.00007757421406    -92.02311062934375   2.382626    -92.02723276712318        
  21     0.00005646956332    -92.02723431461892   4.029106    -92.03092728992708        
  22     0.00004634366148    -92.03090691409602   3.300726    -92.03291739307642        
  23     0.00003077967775    -92.03291755460255   2.831953    -92.03368495394990        
  24     0.00002328407152    -92.03368530589657   3.002320    -92.03415326360134        
  25     0.00001950394081    -92.03415328422288   4.056964    -92.03459650946988        
  26     0.00001638920484    -92.03459403933603   3.736593    -92.03487794372853        
  27     0.00001315953779    -92.03487746740858   3.874937    -92.03506753201982        
  28     0.00001452001658    -92.03506715758854   2.264226    -92.03520439918350        
  29     0.00001018930423    -92.03520455470792   4.385343    -92.03533548162245        
  30     0.00000926542549    -92.03533420454528   3.261827    -92.03541285898424        
  31     0.00000575168437    -92.03541287705977   2.450406    -92.03543614910348        
  32     0.00000361421023    -92.03543611326981   3.219928    -92.03544820545396        
  33     0.00000288618176    -92.03544820535362   2.989993    -92.03545536560627        
  34     0.00000147243467    -92.03545536563071  <-- CG                                 

------------------------------ TIMING INFORMATION ------------------------------
AVERAGE TIME:     991.819s on      1 proc(s)                                    
TOTAL TIME:       991.819s on      1 proc(s)                                    
==================== AVERAGE TIMINGS FROM ALL PROCS (CUMULATIVE) =====================
|| TAG                                         #calls     cpu time   %total  Gflops ||
|| onetep.F90 final imbalance                 :     1        0.00s   0.000%  ------ ||
|| onetep.F90 main loop imbalance             :     1        0.00s   0.000%  ------ ||
|| hash_table_free                            :    70        0.00s   0.000%  ------ ||
|| ewald_calculate_energy                     :     1        0.00s   0.000%  ------ ||
|| restart_kernel_write                       :     1        0.00s   0.000%  ------ ||
|| sparse_init                                :     1        0.00s   0.000%  ------ ||
|| pseudo_make_structure_factor               :     1        0.01s   0.001%  ------ ||
|| palser_mano_kernel_optimise_spam3_embed    :    11        0.01s   0.001%  ------ ||
|| density_fftbox_interp_mult_imbal           : 12496        0.01s   0.001%  ------ ||
|| pseudopotentials_core_density              :     1        0.01s   0.001%  ------ ||
|| sparse_set_to_garbage                      :  4598        0.01s   0.001%  ------ ||
|| pseudopotentials_local_on_grid             :     1        0.01s   0.001%  ------ ||
|| linalg_dgemv                               :    51        0.02s   0.002%  ------ ||
|| sparse_trace                               :  3146        0.02s   0.002%  ------ ||
|| pseudopotentials_nonlocal_mat              :    70        0.05s   0.005%  ------ ||
|| sparse_embed_array_hotelling_invert        :    72        0.13s   0.013%  ------ ||
|| density_init_guess_real                    :     1        0.13s   0.013%  ------ ||
|| sparse_product                             : 20515        0.28s   0.028%  ------ ||
|| ngwfs_initialise_from_radial               :    11        0.39s   0.039%  ------ ||
|| kernel_purify                              :    35        0.72s   0.073%  ------ ||
|| ngwf_gradient_coeffs                       :    35        0.81s   0.082%  ------ ||
|| hartree_on_grid_single                     :    72        0.92s   0.093%  ------ ||
|| cell_grid_extract_box_real                 : 12496        1.74s   0.175%  ------ ||
|| fourier_apply_cell_backward                :   362        2.19s   0.221%   2.198 ||
|| fourier_apply_cell_forward                 :   360        2.21s   0.223%   2.167 ||
|| basis_extract_function_from_box            : 12320        2.31s   0.233%  ------ ||
|| restart_ngwfs_tightbox_output              :    34        4.62s   0.466%  ------ ||
|| hamiltonian_energy_components              :     1        4.69s   0.473%  ------ ||
|| projectors_init_fftbox_recip               :  1155        5.29s   0.534%  ------ ||
|| cell_grid_deposit_box_real                 : 12500        6.37s   0.642%  ------ ||
|| density_fftbox_deposit_to_cell             : 12496        6.44s   0.650%  ------ ||
|| xc_energy_potential                        :    72        7.38s   0.744%  ------ ||
|| basis_copy_function_to_box                 : 37136        8.24s   0.831%  ------ ||
|| energy_and_force_init_cell                 :     1       11.30s   1.140%  ------ ||
|| integrals_locpot_mat_els_batch             :   396       16.63s   1.677%  ------ ||
|| function_ops_brappd_ketppd_spam3           :   770       22.53s   2.272%  ------ ||
|| projectors_gradient_batch                  :   385       26.34s   2.656%  ------ ||
|| integrals_kinetic_spam3                    :   770       29.16s   2.940%  ------ ||
|| projectors_func_ovlp_box_spam3             :   770       37.86s   3.817%  ------ ||
|| density_batch_row_sums                     :   781       45.90s   4.627%  ------ ||
|| basis_dot_function_with_box                : 403.2k      56.37s   5.683%  ------ ||
|| potential_apply_to_ngwf_batch              :   396       97.43s   9.823%  ------ ||
|| integrals_locpot_dbl_grid                  :   396      114.11s  11.505%  ------ ||
|| basis_add_function_to_box                  : 594.2k     129.46s  13.053%  ------ ||
|| ngwf_gradient_build_batch                  :   385      193.75s  19.535%  ------ ||
|| density_fftbox_interpolate_multiply        : 12496      233.71s  23.563%  ------ ||
|| density_batch_interp_deposit               :   781      241.53s  24.352%  ------ ||
|| density_on_dbl_grid                        :   781      290.56s  29.296%  ------ ||
|| fourier_apply_box                          : 210.8k     318.64s  32.127%   6.364 ||
|| hamiltonian_lhxc_calculate                 :    70      337.72s  34.050%  ------ ||
|| ngwf_gradient_batch                        :   385      338.70s  34.149%  ------ ||
|| ngwf_gradient_lnv                          :    35      354.60s  35.753%  ------ ||
|| ngwf_cg_optimise                           :     1      974.77s  98.281%  ------ ||
|| energy_and_forces                          :     1      980.08s  98.816%  ------ ||
|| total_time                                 :     1      991.82s 100.000%  ------ ||
======================================================================================
Overhead of generating timer report: 
- 0 ms averaging over threads,
- 0 ms ensuring consistency across MPI ranks,
- 0 ms printing in order.

Job completed: 23-01-2025 08:35 (-0000)

